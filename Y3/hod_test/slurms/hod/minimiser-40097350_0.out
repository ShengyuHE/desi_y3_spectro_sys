[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_01.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_01.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_01.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_01.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_01.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_01.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_01.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_01.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_01.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_01.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_01.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_01.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_01.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_01.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_01.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_01.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:30
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.486651309441916)) ('M_1_LRG', np.float64(13.855300469998806)) ('alpha_LRG', np.float64(1.0528844418594443)) ('f_sigv_LRG', np.float64(0.9872805949435665)) ('log_Mcent_LRG', np.float64(12.808527675842821)) ('sigma_M_LRG', np.float64(0.37745760495477865))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.524467177107924)) ('M_1_LRG', np.float64(13.876320438719441)) ('alpha_LRG', np.float64(1.0151846736943957)) ('f_sigv_LRG', np.float64(0.9899297057840766)) ('log_Mcent_LRG', np.float64(12.836054500719085)) ('sigma_M_LRG', np.float64(0.40621914626227534))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.350960766170665)) ('M_1_LRG', np.float64(13.873637159236393)) ('alpha_LRG', np.float64(1.1115626185378467)) ('f_sigv_LRG', np.float64(0.9955760069946217)) ('log_Mcent_LRG', np.float64(12.843059052606032)) ('sigma_M_LRG', np.float64(0.41313758325775957))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.471227767982079)) ('M_1_LRG', np.float64(13.835496345683234)) ('alpha_LRG', np.float64(1.0662124922541032)) ('f_sigv_LRG', np.float64(0.9813120787769238)) ('log_Mcent_LRG', np.float64(12.799278165830666)) ('sigma_M_LRG', np.float64(0.3811906765899177))
[Interation 1] chi2=824.7028645702889
[Interation 1] chi2=906.977631654932
[Interation 1] chi2=737.6511533641436
[Interation 1] chi2=860.644130963114
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.440080604980636)) ('M_1_LRG', np.float64(13.867210680171386)) ('alpha_LRG', np.float64(1.065345801949794)) ('f_sigv_LRG', np.float64(0.9607163847733111)) ('log_Mcent_LRG', np.float64(12.830198212439576)) ('sigma_M_LRG', np.float64(0.40613212929962217))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.464665240702383)) ('M_1_LRG', np.float64(13.867713144029079)) ('alpha_LRG', np.float64(1.0608571745063584)) ('f_sigv_LRG', np.float64(0.9660208049619056)) ('log_Mcent_LRG', np.float64(12.8448232707906)) ('sigma_M_LRG', np.float64(0.4317306025817876))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.429581121663368)) ('M_1_LRG', np.float64(13.88772458311716)) ('alpha_LRG', np.float64(1.0831210582478659)) ('f_sigv_LRG', np.float64(0.9659639811552284)) ('log_Mcent_LRG', np.float64(12.855691133947943)) ('sigma_M_LRG', np.float64(0.4258148489597385))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.422011949339856)) ('M_1_LRG', np.float64(13.874618407865654)) ('alpha_LRG', np.float64(1.0618911606047723)) ('f_sigv_LRG', np.float64(1.0016049929843658)) ('log_Mcent_LRG', np.float64(12.82611049392886)) ('sigma_M_LRG', np.float64(0.39651992756037147))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.445998301399458)) ('M_1_LRG', np.float64(13.867915171543975)) ('alpha_LRG', np.float64(1.047962189971122)) ('f_sigv_LRG', np.float64(0.9901372781479325)) ('log_Mcent_LRG', np.float64(12.83055943943444)) ('sigma_M_LRG', np.float64(0.41092765301132583))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.338551103397664)) ('M_1_LRG', np.float64(13.860220595343684)) ('alpha_LRG', np.float64(1.1088269523445262)) ('f_sigv_LRG', np.float64(0.9875223116039378)) ('log_Mcent_LRG', np.float64(12.82974637746033)) ('sigma_M_LRG', np.float64(0.4117987924071377))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.532873306317075)) ('M_1_LRG', np.float64(13.84152180086856)) ('alpha_LRG', np.float64(1.0451526508480153)) ('f_sigv_LRG', np.float64(0.9477614136880138)) ('log_Mcent_LRG', np.float64(12.840219514878934)) ('sigma_M_LRG', np.float64(0.43507394131771593))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.572449010676289)) ('M_1_LRG', np.float64(13.856722497710457)) ('alpha_LRG', np.float64(1.0152052378302512)) ('f_sigv_LRG', np.float64(0.9645427965059817)) ('log_Mcent_LRG', np.float64(12.82674590587933)) ('sigma_M_LRG', np.float64(0.41019917990386484))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.403024478198766)) ('M_1_LRG', np.float64(13.860355342316629)) ('alpha_LRG', np.float64(1.0987306174375016)) ('f_sigv_LRG', np.float64(0.9816998684455467)) ('log_Mcent_LRG', np.float64(12.827156899682146)) ('sigma_M_LRG', np.float64(0.4126857015139145))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.40391731453618)) ('M_1_LRG', np.float64(13.886070604257442)) ('alpha_LRG', np.float64(1.096952977711583)) ('f_sigv_LRG', np.float64(0.9767570588227653)) ('log_Mcent_LRG', np.float64(12.857306472717442)) ('sigma_M_LRG', np.float64(0.43255066338493586))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.48806038335094)) ('M_1_LRG', np.float64(13.872125131698972)) ('alpha_LRG', np.float64(1.0584346385561474)) ('f_sigv_LRG', np.float64(0.9775237219800911)) ('log_Mcent_LRG', np.float64(12.854598727960813)) ('sigma_M_LRG', np.float64(0.44339193499570395))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.432235971776441)) ('M_1_LRG', np.float64(13.879279414480575)) ('alpha_LRG', np.float64(1.0856216111956605)) ('f_sigv_LRG', np.float64(0.9721441586703582)) ('log_Mcent_LRG', np.float64(12.850656493462553)) ('sigma_M_LRG', np.float64(0.4298473147048906))
[Interation 1] chi2=854.8254912111146
[Interation 1] chi2=830.3168807610758
[Interation 1] chi2=864.7855240486457
[Interation 1] chi2=824.7813686910334
[Interation 1] chi2=888.2481722793696
[Interation 1] chi2=875.2178026154621
[Interation 1] chi2=855.6433271480877
[Interation 1] chi2=912.0474236601509
[Interation 1] chi2=827.3443441640031
[Interation 1] chi2=924.9786117176492
[Interation 1] chi2=928.4831536233276
[Interation 1] chi2=863.5359888163406
[Interation 2] ('M_0_LRG', np.float64(12.544874394323415)) ('M_1_LRG', np.float64(13.862637741083388)) ('alpha_LRG', np.float64(1.029880275164149)) ('f_sigv_LRG', np.float64(0.9692023017151123)) ('log_Mcent_LRG', np.float64(12.84343986198149)) ('sigma_M_LRG', np.float64(0.4335188138637152))
[Interation 2] ('M_0_LRG', np.float64(12.527897360347199)) ('M_1_LRG', np.float64(13.86581376365661)) ('alpha_LRG', np.float64(1.0399950386389372)) ('f_sigv_LRG', np.float64(0.9712080527162897)) ('log_Mcent_LRG', np.float64(12.84692023540523)) ('sigma_M_LRG', np.float64(0.43441527914478667))
[Interation 2] ('M_0_LRG', np.float64(12.459305635422673)) ('M_1_LRG', np.float64(13.864231557012872)) ('alpha_LRG', np.float64(1.0750560355158734)) ('f_sigv_LRG', np.float64(0.9754868872636786)) ('log_Mcent_LRG', np.float64(12.838470288864286)) ('sigma_M_LRG', np.float64(0.417972692946755))
[Interation 2] ('M_0_LRG', np.float64(12.526705518842585)) ('M_1_LRG', np.float64(13.878030507407951)) ('alpha_LRG', np.float64(1.0435227181424591)) ('f_sigv_LRG', np.float64(0.9714728809673957)) ('log_Mcent_LRG', np.float64(12.86678658626564)) ('sigma_M_LRG', np.float64(0.45688490228418255))
[Interation 2] chi2=788.5766932330388
[Interation 2] chi2=808.2296058041164
[Interation 2] chi2=809.8944664074313
[Interation 2] chi2=848.9036413378071
[Interation 2] ('M_0_LRG', np.float64(12.434428098647285)) ('M_1_LRG', np.float64(13.858318321678817)) ('alpha_LRG', np.float64(1.079382959820285)) ('f_sigv_LRG', np.float64(0.9728145066650893)) ('log_Mcent_LRG', np.float64(12.82426631907183)) ('sigma_M_LRG', np.float64(0.40510697834585657))
[Interation 2] ('M_0_LRG', np.float64(12.475739969454073)) ('M_1_LRG', np.float64(13.876894192106706)) ('alpha_LRG', np.float64(1.056777273856364)) ('f_sigv_LRG', np.float64(0.9698936253939549)) ('log_Mcent_LRG', np.float64(12.857280420943713)) ('sigma_M_LRG', np.float64(0.44103440400964394))
[Interation 2] ('M_0_LRG', np.float64(12.534713961044135)) ('M_1_LRG', np.float64(13.851408606984869)) ('alpha_LRG', np.float64(1.024388347138688)) ('f_sigv_LRG', np.float64(0.972176468896905)) ('log_Mcent_LRG', np.float64(12.826144303487162)) ('sigma_M_LRG', np.float64(0.4120910303145222))
[Interation 2] ('M_0_LRG', np.float64(12.589370842715581)) ('M_1_LRG', np.float64(13.884319299708768)) ('alpha_LRG', np.float64(1.0113775871797657)) ('f_sigv_LRG', np.float64(0.9627704753584813)) ('log_Mcent_LRG', np.float64(12.878677229812135)) ('sigma_M_LRG', np.float64(0.47156537831182044))
[Interation 2] ('M_0_LRG', np.float64(12.506191432953294)) ('M_1_LRG', np.float64(13.895315486742533)) ('alpha_LRG', np.float64(1.0331666380134166)) ('f_sigv_LRG', np.float64(0.9735715960444907)) ('log_Mcent_LRG', np.float64(12.87161282936607)) ('sigma_M_LRG', np.float64(0.45310430414637737))
[Interation 2] ('M_0_LRG', np.float64(12.529622966733605)) ('M_1_LRG', np.float64(13.874792688262035)) ('alpha_LRG', np.float64(1.031956900775933)) ('f_sigv_LRG', np.float64(0.9734983931099505)) ('log_Mcent_LRG', np.float64(12.85996798913927)) ('sigma_M_LRG', np.float64(0.44517815204206646))
[Interation 2] ('M_0_LRG', np.float64(12.496040497309806)) ('M_1_LRG', np.float64(13.84487149546182)) ('alpha_LRG', np.float64(1.0474626835529672)) ('f_sigv_LRG', np.float64(0.974514372984261)) ('log_Mcent_LRG', np.float64(12.81388281820109)) ('sigma_M_LRG', np.float64(0.39337156903776344))
[Interation 2] ('M_0_LRG', np.float64(12.483222322627258)) ('M_1_LRG', np.float64(13.874637555671345)) ('alpha_LRG', np.float64(1.0555856016571454)) ('f_sigv_LRG', np.float64(0.9682058114327197)) ('log_Mcent_LRG', np.float64(12.856106323168445)) ('sigma_M_LRG', np.float64(0.43932758683938766))
[Interation 2] ('M_0_LRG', np.float64(12.5255537756224)) ('M_1_LRG', np.float64(13.87744651667225)) ('alpha_LRG', np.float64(1.038946842097101)) ('f_sigv_LRG', np.float64(0.9649711957103299)) ('log_Mcent_LRG', np.float64(12.865605593763709)) ('sigma_M_LRG', np.float64(0.4535650031758751))
[Interation 2] ('M_0_LRG', np.float64(12.528289427264653)) ('M_1_LRG', np.float64(13.88708477336064)) ('alpha_LRG', np.float64(1.0274709487202978)) ('f_sigv_LRG', np.float64(0.9702203340365574)) ('log_Mcent_LRG', np.float64(12.869252739687942)) ('sigma_M_LRG', np.float64(0.4572780367640156))
[Interation 2] ('M_0_LRG', np.float64(12.505570597796101)) ('M_1_LRG', np.float64(13.884029486351068)) ('alpha_LRG', np.float64(1.0433354425902683)) ('f_sigv_LRG', np.float64(0.9742670801652398)) ('log_Mcent_LRG', np.float64(12.867599773642224)) ('sigma_M_LRG', np.float64(0.4536588746374))
[Interation 2] ('M_0_LRG', np.float64(12.52370782542868)) ('M_1_LRG', np.float64(13.852058527050572)) ('alpha_LRG', np.float64(1.0347059408407153)) ('f_sigv_LRG', np.float64(0.9707326552535467)) ('log_Mcent_LRG', np.float64(12.826395292330801)) ('sigma_M_LRG', np.float64(0.41107680396203766))
[Interation 2] chi2=933.1836462488973
[Interation 2] chi2=837.2819262084563
[Interation 2] chi2=811.9423484477695
[Interation 2] chi2=896.2925736248164
[Interation 2] chi2=889.2650120136811
[Interation 2] chi2=860.5849589626202
[Interation 2] chi2=800.1994379719371
[Interation 2] chi2=814.2413878763329
[Interation 2] chi2=840.8869281811932
[Interation 2] chi2=876.2032367640978
[Interation 2] chi2=823.2137034112272
[Interation 2] chi2=810.5319601271359
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_02.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_02.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_02.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_02.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_02.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_02.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_02.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_02.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_02.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_02.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_02.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_02.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_02.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_02.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_02.npy
Set number of threads to 32
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.507198321206557)) ('M_1_LRG', np.float64(13.857009503828078)) ('alpha_LRG', np.float64(1.0472972732593904)) ('f_sigv_LRG', np.float64(0.9727452141957513)) ('log_Mcent_LRG', np.float64(12.839582716796672)) ('sigma_M_LRG', np.float64(0.42490818243482004))
Create mock catalog for ['LRG']
Run HOD for LRG
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
Set density to 0.0007 gal/Mpc/h
HOD Computed 1.2546381950378418
Start satellite assignement
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
Satellite assignement done 1.7569527626037598
LRG mock catalogue done 1.8279054164886475
584121 central galaxies, 96648 satellites, fraction of satellite 0.14 
Done overall time  LRG 3.267561435699463
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_02.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load rppi measurements at z0.6-0.8 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:18
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:18
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.445243461891671)) ('M_1_LRG', np.float64(13.809871141866468)) ('alpha_LRG', np.float64(0.9829510289634963)) ('f_sigv_LRG', np.float64(1.0204387440111011)) ('log_Mcent_LRG', np.float64(12.76926036226853)) ('sigma_M_LRG', np.float64(0.3314040696028329))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.458097615912743)) ('M_1_LRG', np.float64(13.80510311701208)) ('alpha_LRG', np.float64(1.1319902080651705)) ('f_sigv_LRG', np.float64(0.8776333461681122)) ('log_Mcent_LRG', np.float64(12.780763397375434)) ('sigma_M_LRG', np.float64(0.3827284550598734))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.246282708668115)) ('M_1_LRG', np.float64(14.009999305356873)) ('alpha_LRG', np.float64(1.1255535477573837)) ('f_sigv_LRG', np.float64(0.981923312641639)) ('log_Mcent_LRG', np.float64(12.983557914329666)) ('sigma_M_LRG', np.float64(0.5523870064606847))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.5290494106083)) ('M_1_LRG', np.float64(14.052844826530261)) ('alpha_LRG', np.float64(1.0075802638043905)) ('f_sigv_LRG', np.float64(1.008622520502276)) ('log_Mcent_LRG', np.float64(13.019145056969025)) ('sigma_M_LRG', np.float64(0.5237770686315679))
[Interation 3] chi2=1116.697812632602
[Interation 3] chi2=925.9494450812907
[Interation 3] chi2=1173.1031466562342
[Interation 3] chi2=994.7282380634542
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.473459807051459)) ('M_1_LRG', np.float64(13.861740690320715)) ('alpha_LRG', np.float64(1.0763251093878206)) ('f_sigv_LRG', np.float64(0.9538139846129826)) ('log_Mcent_LRG', np.float64(12.828771607022237)) ('sigma_M_LRG', np.float64(0.38063355693660333))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.367911088259794)) ('M_1_LRG', np.float64(13.810864753039793)) ('alpha_LRG', np.float64(1.0965066944147002)) ('f_sigv_LRG', np.float64(1.000102017222164)) ('log_Mcent_LRG', np.float64(12.746194491952663)) ('sigma_M_LRG', np.float64(0.31209505728791154))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.474091428088514)) ('M_1_LRG', np.float64(13.805322922322718)) ('alpha_LRG', np.float64(1.1075337134203405)) ('f_sigv_LRG', np.float64(0.9418118667459139)) ('log_Mcent_LRG', np.float64(12.79009505413416)) ('sigma_M_LRG', np.float64(0.3771636707540037))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.35361794369061)) ('M_1_LRG', np.float64(13.89877988811631)) ('alpha_LRG', np.float64(1.040519953256267)) ('f_sigv_LRG', np.float64(1.0338572232225465)) ('log_Mcent_LRG', np.float64(12.83309821190727)) ('sigma_M_LRG', np.float64(0.3911925463952135))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.42814428271835)) ('M_1_LRG', np.float64(13.908906822501576)) ('alpha_LRG', np.float64(1.0787745836011777)) ('f_sigv_LRG', np.float64(0.9155793461540225)) ('log_Mcent_LRG', np.float64(12.881719865631661)) ('sigma_M_LRG', np.float64(0.4631426916580703))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.409743328086858)) ('M_1_LRG', np.float64(13.903904673165416)) ('alpha_LRG', np.float64(1.023256150543646)) ('f_sigv_LRG', np.float64(0.9940895218464721)) ('log_Mcent_LRG', np.float64(12.81757590187)) ('sigma_M_LRG', np.float64(0.3721692261722521))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.457758636662048)) ('M_1_LRG', np.float64(13.904179604194931)) ('alpha_LRG', np.float64(0.9573973379025691)) ('f_sigv_LRG', np.float64(0.9919639814510521)) ('log_Mcent_LRG', np.float64(12.862108207733788)) ('sigma_M_LRG', np.float64(0.44292732172622035))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.520392749618493)) ('M_1_LRG', np.float64(14.016494452194387)) ('alpha_LRG', np.float64(0.9536813507401675)) ('f_sigv_LRG', np.float64(1.0209893442539044)) ('log_Mcent_LRG', np.float64(12.971204433072407)) ('sigma_M_LRG', np.float64(0.5232150811388965))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.550453216541598)) ('M_1_LRG', np.float64(13.963389992152354)) ('alpha_LRG', np.float64(0.9153697590841053)) ('f_sigv_LRG', np.float64(1.0391879139799887)) ('log_Mcent_LRG', np.float64(12.901293832419004)) ('sigma_M_LRG', np.float64(0.48678896839732083))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.477561695627385)) ('M_1_LRG', np.float64(13.825350916531288)) ('alpha_LRG', np.float64(1.031982301177725)) ('f_sigv_LRG', np.float64(0.9759944119819418)) ('log_Mcent_LRG', np.float64(12.783439462787738)) ('sigma_M_LRG', np.float64(0.36747225426963825))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.690631805573833)) ('M_1_LRG', np.float64(13.814026055117218)) ('alpha_LRG', np.float64(0.9106004217709276)) ('f_sigv_LRG', np.float64(0.9593410312433164)) ('log_Mcent_LRG', np.float64(12.799112388115809)) ('sigma_M_LRG', np.float64(0.40629762462106106))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.423004905675475)) ('M_1_LRG', np.float64(13.836286230528419)) ('alpha_LRG', np.float64(1.0993977992250934)) ('f_sigv_LRG', np.float64(0.9641268369201152)) ('log_Mcent_LRG', np.float64(12.801837160373797)) ('sigma_M_LRG', np.float64(0.36919390560745613))
[Interation 3] chi2=944.7039409340784
[Interation 3] chi2=905.0114433395584
[Interation 3] chi2=893.8287950111314
[Interation 3] chi2=786.0928207174137
[Interation 3] chi2=810.4206575054179
[Interation 3] chi2=915.696274726434
[Interation 3] chi2=963.618324184992
[Interation 3] chi2=944.8148682938404
[Interation 3] chi2=955.7793197554445
[Interation 3] chi2=900.3358668734702
[Interation 3] chi2=859.689229801151
[Interation 3] chi2=830.2123969085651
[Interation 4] ('M_0_LRG', np.float64(12.484446015411642)) ('M_1_LRG', np.float64(13.872397817908842)) ('alpha_LRG', np.float64(1.0400645382591547)) ('f_sigv_LRG', np.float64(0.9721185567935803)) ('log_Mcent_LRG', np.float64(12.840254568656572)) ('sigma_M_LRG', np.float64(0.419225213769533))
[Interation 4] ('M_0_LRG', np.float64(12.483279433834728)) ('M_1_LRG', np.float64(13.857345780562845)) ('alpha_LRG', np.float64(1.0500838655468077)) ('f_sigv_LRG', np.float64(0.9701080071514284)) ('log_Mcent_LRG', np.float64(12.83219176295375)) ('sigma_M_LRG', np.float64(0.41260761482019725))
[Interation 4] ('M_0_LRG', np.float64(12.39804449419619)) ('M_1_LRG', np.float64(13.870923056570959)) ('alpha_LRG', np.float64(1.08223409277493)) ('f_sigv_LRG', np.float64(0.968963330760468)) ('log_Mcent_LRG', np.float64(12.840102954220223)) ('sigma_M_LRG', np.float64(0.41948227959558737))
[Interation 4] ('M_0_LRG', np.float64(12.31471877362742)) ('M_1_LRG', np.float64(13.887479832174849)) ('alpha_LRG', np.float64(1.1199647239138555)) ('f_sigv_LRG', np.float64(0.9683959299042717)) ('log_Mcent_LRG', np.float64(12.852582744911198)) ('sigma_M_LRG', np.float64(0.42357996255865493))
[Interation 4] chi2=908.0797434608218
[Interation 4] chi2=776.7434117126809
[Interation 4] chi2=703.0527425133241
[Interation 4] chi2=769.8434334375653
[Interation 4] ('M_0_LRG', np.float64(12.484745809600508)) ('M_1_LRG', np.float64(13.886086639985441)) ('alpha_LRG', np.float64(1.0435383487229135)) ('f_sigv_LRG', np.float64(0.9753700061614451)) ('log_Mcent_LRG', np.float64(12.863210336463112)) ('sigma_M_LRG', np.float64(0.4410722381382163))
[Interation 4] ('M_0_LRG', np.float64(12.397072842910214)) ('M_1_LRG', np.float64(13.881692284782051)) ('alpha_LRG', np.float64(1.0894401927240733)) ('f_sigv_LRG', np.float64(0.9749809102804395)) ('log_Mcent_LRG', np.float64(12.849073676859998)) ('sigma_M_LRG', np.float64(0.4210914425291836))
[Interation 4] ('M_0_LRG', np.float64(12.454231374298601)) ('M_1_LRG', np.float64(13.866314777569217)) ('alpha_LRG', np.float64(1.0628748071526617)) ('f_sigv_LRG', np.float64(0.9551285865456787)) ('log_Mcent_LRG', np.float64(12.85517131238608)) ('sigma_M_LRG', np.float64(0.4429148092452542))
[Interation 4] ('M_0_LRG', np.float64(12.413890366556782)) ('M_1_LRG', np.float64(13.889570111486032)) ('alpha_LRG', np.float64(1.0837313268782691)) ('f_sigv_LRG', np.float64(0.9696308943413312)) ('log_Mcent_LRG', np.float64(12.858873230220416)) ('sigma_M_LRG', np.float64(0.4315252205199093))
[Interation 4] ('M_0_LRG', np.float64(12.391219223877162)) ('M_1_LRG', np.float64(13.877796018612537)) ('alpha_LRG', np.float64(1.0891142427227969)) ('f_sigv_LRG', np.float64(0.974118915581556)) ('log_Mcent_LRG', np.float64(12.84480984497411)) ('sigma_M_LRG', np.float64(0.41888369374378276))
[Interation 4] ('M_0_LRG', np.float64(12.392259795050037)) ('M_1_LRG', np.float64(13.858049053495218)) ('alpha_LRG', np.float64(1.0907592894094544)) ('f_sigv_LRG', np.float64(0.9692608442485706)) ('log_Mcent_LRG', np.float64(12.825640544077942)) ('sigma_M_LRG', np.float64(0.401788859170852))
[Interation 4] ('M_0_LRG', np.float64(12.433617123445542)) ('M_1_LRG', np.float64(13.889029959334879)) ('alpha_LRG', np.float64(1.0735759789852983)) ('f_sigv_LRG', np.float64(0.9764653709026143)) ('log_Mcent_LRG', np.float64(12.864720678514516)) ('sigma_M_LRG', np.float64(0.43871711106131456))
[Interation 4] ('M_0_LRG', np.float64(12.480970533854943)) ('M_1_LRG', np.float64(13.881866476009899)) ('alpha_LRG', np.float64(1.0344707211868462)) ('f_sigv_LRG', np.float64(0.9750311036792327)) ('log_Mcent_LRG', np.float64(12.846630645218664)) ('sigma_M_LRG', np.float64(0.4226603811130402))
[Interation 4] ('M_0_LRG', np.float64(12.510732738267492)) ('M_1_LRG', np.float64(13.875691648380888)) ('alpha_LRG', np.float64(1.0329977222710716)) ('f_sigv_LRG', np.float64(0.9722501508010047)) ('log_Mcent_LRG', np.float64(12.853235036717983)) ('sigma_M_LRG', np.float64(0.43542004153035846))
[Interation 4] ('M_0_LRG', np.float64(12.278257878622364)) ('M_1_LRG', np.float64(13.908220952842095)) ('alpha_LRG', np.float64(1.1328462868078286)) ('f_sigv_LRG', np.float64(0.9783566293993791)) ('log_Mcent_LRG', np.float64(12.871845159348934)) ('sigma_M_LRG', np.float64(0.43966271348479796))
[Interation 4] ('M_0_LRG', np.float64(12.432123875192037)) ('M_1_LRG', np.float64(13.895223457348786)) ('alpha_LRG', np.float64(1.0554059057041165)) ('f_sigv_LRG', np.float64(0.9783672224602055)) ('log_Mcent_LRG', np.float64(12.860733607266218)) ('sigma_M_LRG', np.float64(0.43395320090806533))
[Interation 4] ('M_0_LRG', np.float64(12.338030351571456)) ('M_1_LRG', np.float64(13.904358135605762)) ('alpha_LRG', np.float64(1.1050251379961087)) ('f_sigv_LRG', np.float64(0.9802123430973693)) ('log_Mcent_LRG', np.float64(12.879929342750092)) ('sigma_M_LRG', np.float64(0.45538171299100483))
[Interation 4] chi2=845.8241805494157
[Interation 4] chi2=824.8112967639696
[Interation 4] chi2=820.7959616868778
[Interation 4] chi2=838.5646880322496
[Interation 4] chi2=867.1190038164824
[Interation 4] chi2=840.8674959228955
[Interation 4] chi2=805.2162672058411
[Interation 4] chi2=832.0125209947219
[Interation 4] chi2=856.9480854485048
[Interation 4] chi2=757.5686551376529
[Interation 4] chi2=880.1413227172469
[Interation 4] chi2=874.9458985616344
[Interation 5] ('M_0_LRG', np.float64(12.275073215851663)) ('M_1_LRG', np.float64(13.913853428118937)) ('alpha_LRG', np.float64(1.1181096001258588)) ('f_sigv_LRG', np.float64(0.9846551903944389)) ('log_Mcent_LRG', np.float64(12.874566355953657)) ('sigma_M_LRG', np.float64(0.4426124481215681))
[Interation 5] ('M_0_LRG', np.float64(12.474462545859959)) ('M_1_LRG', np.float64(13.864520976534857)) ('alpha_LRG', np.float64(1.0457133912117407)) ('f_sigv_LRG', np.float64(0.974169808920153)) ('log_Mcent_LRG', np.float64(12.840631050780644)) ('sigma_M_LRG', np.float64(0.42392472517056545))
[Interation 5] ('M_0_LRG', np.float64(12.46297720889481)) ('M_1_LRG', np.float64(13.872859705657977)) ('alpha_LRG', np.float64(1.0602673771637383)) ('f_sigv_LRG', np.float64(0.9670249442674946)) ('log_Mcent_LRG', np.float64(12.852450418573213)) ('sigma_M_LRG', np.float64(0.434211515804272))
[Interation 5] ('M_0_LRG', np.float64(12.445794547540155)) ('M_1_LRG', np.float64(13.87697317827526)) ('alpha_LRG', np.float64(1.0579693503347303)) ('f_sigv_LRG', np.float64(0.9706427691656415)) ('log_Mcent_LRG', np.float64(12.849054872795296)) ('sigma_M_LRG', np.float64(0.4289779881414063))
[Interation 5] chi2=811.6108602399222
[Interation 5] chi2=842.4296026586693
[Interation 5] chi2=863.442912742647
[Interation 5] chi2=853.1100383557738
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_03.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.356987916958959)) ('M_1_LRG', np.float64(13.885940568370888)) ('alpha_LRG', np.float64(1.0946708114482304)) ('f_sigv_LRG', np.float64(0.9757603222897686)) ('log_Mcent_LRG', np.float64(12.857561677732752)) ('sigma_M_LRG', np.float64(0.433868286087282))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3309593200683594
Start satellite assignement
Satellite assignement done 0.09639596939086914
LRG mock catalogue done 0.18037629127502441
564673 central galaxies, 96986 satellites, fraction of satellite 0.15 
Done overall time  LRG 0.7048478126525879
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_03.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:29
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:29
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:29
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:29
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:29
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:29
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:29
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:29
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:29
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:29
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.438433249617644)) ('M_1_LRG', np.float64(13.448626921951474)) ('alpha_LRG', np.float64(0.9593972031583694)) ('f_sigv_LRG', np.float64(0.9469671794607495)) ('log_Mcent_LRG', np.float64(12.75441423975574)) ('sigma_M_LRG', np.float64(0.5156854335586739))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.55939478233799)) ('M_1_LRG', np.float64(13.50786366538719)) ('alpha_LRG', np.float64(1.0205252596488652)) ('f_sigv_LRG', np.float64(0.956398015606248)) ('log_Mcent_LRG', np.float64(12.727001339786638)) ('sigma_M_LRG', np.float64(0.46343930880900086))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.518634670829421)) ('M_1_LRG', np.float64(13.440206248615471)) ('alpha_LRG', np.float64(1.0227331973690945)) ('f_sigv_LRG', np.float64(0.9971456412272386)) ('log_Mcent_LRG', np.float64(12.769988599800143)) ('sigma_M_LRG', np.float64(0.4424466253554065))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.448131074016654)) ('M_1_LRG', np.float64(13.442643965617872)) ('alpha_LRG', np.float64(0.9562249511143275)) ('f_sigv_LRG', np.float64(1.065265966472614)) ('log_Mcent_LRG', np.float64(12.761551631623547)) ('sigma_M_LRG', np.float64(0.4327127831695718))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.55338635050652)) ('M_1_LRG', np.float64(13.471716383628852)) ('alpha_LRG', np.float64(0.9473900515961622)) ('f_sigv_LRG', np.float64(1.0005283655150623)) ('log_Mcent_LRG', np.float64(12.791619325026886)) ('sigma_M_LRG', np.float64(0.4775196547442486))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.474999978429132)) ('M_1_LRG', np.float64(13.593346538892623)) ('alpha_LRG', np.float64(0.9903082594136625)) ('f_sigv_LRG', np.float64(0.9377534487421825)) ('log_Mcent_LRG', np.float64(12.728831063649466)) ('sigma_M_LRG', np.float64(0.47288327506560435))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.523790932799379)) ('M_1_LRG', np.float64(13.536668447273232)) ('alpha_LRG', np.float64(1.016478376643022)) ('f_sigv_LRG', np.float64(0.952224177278995)) ('log_Mcent_LRG', np.float64(12.76670402666359)) ('sigma_M_LRG', np.float64(0.4464012705025435))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.5169774198865)) ('M_1_LRG', np.float64(13.549429764766774)) ('alpha_LRG', np.float64(1.080787147964857)) ('f_sigv_LRG', np.float64(1.0423932127542233)) ('log_Mcent_LRG', np.float64(12.813990183439147)) ('sigma_M_LRG', np.float64(0.5443549418941264))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.41719773683662)) ('M_1_LRG', np.float64(13.41359939379592)) ('alpha_LRG', np.float64(0.8772847535031741)) ('f_sigv_LRG', np.float64(0.8852325640449177)) ('log_Mcent_LRG', np.float64(12.730314682662849)) ('sigma_M_LRG', np.float64(0.527265241126131))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.524416174754304)) ('M_1_LRG', np.float64(13.58877413809847)) ('alpha_LRG', np.float64(1.0747925804917773)) ('f_sigv_LRG', np.float64(1.0166976036724247)) ('log_Mcent_LRG', np.float64(12.666108773013537)) ('sigma_M_LRG', np.float64(0.581144826515568))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.454342626346063)) ('M_1_LRG', np.float64(13.6575943836205)) ('alpha_LRG', np.float64(1.0486998904013816)) ('f_sigv_LRG', np.float64(0.9991444232807815)) ('log_Mcent_LRG', np.float64(12.749901575657143)) ('sigma_M_LRG', np.float64(0.4135961236520234))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.508052885244236)) ('M_1_LRG', np.float64(13.599795111487325)) ('alpha_LRG', np.float64(0.909142761908545)) ('f_sigv_LRG', np.float64(1.0162022843348337)) ('log_Mcent_LRG', np.float64(12.846311429760252)) ('sigma_M_LRG', np.float64(0.5083417716232571))
[Interation 5] chi2=3116.276348150794
[Interation 5] chi2=4984.74022586889
[Interation 5] chi2=10579.851623166775
[Interation 5] chi2=9525.969916603368
[Interation 5] chi2=7292.982388525442
[Interation 5] chi2=2028.879136474193
[Interation 5] chi2=4285.53533504513
[Interation 5] chi2=4613.198179805113
[Interation 5] chi2=5358.023205192416
[Interation 5] chi2=8327.930769280176
[Interation 5] chi2=1626.1688865768133
[Interation 5] chi2=4649.215969383663
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 6] ('M_0_LRG', np.float64(12.465466609488884)) ('M_1_LRG', np.float64(13.826204422813316)) ('alpha_LRG', np.float64(1.0815025588163838)) ('f_sigv_LRG', np.float64(0.9702996383309757)) ('log_Mcent_LRG', np.float64(12.788090199684232)) ('sigma_M_LRG', np.float64(0.36231960613049874))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 6] ('M_0_LRG', np.float64(12.528873068560248)) ('M_1_LRG', np.float64(13.818804903280386)) ('alpha_LRG', np.float64(1.0260016307020101)) ('f_sigv_LRG', np.float64(0.9804250114964785)) ('log_Mcent_LRG', np.float64(12.794852489065779)) ('sigma_M_LRG', np.float64(0.38016700200046666))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 6] ('M_0_LRG', np.float64(12.539986952204387)) ('M_1_LRG', np.float64(13.84673415534387)) ('alpha_LRG', np.float64(1.036210123632421)) ('f_sigv_LRG', np.float64(0.969741925981534)) ('log_Mcent_LRG', np.float64(12.822433274176518)) ('sigma_M_LRG', np.float64(0.40489499790089695))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 6] ('M_0_LRG', np.float64(12.655599355217136)) ('M_1_LRG', np.float64(13.840198536506259)) ('alpha_LRG', np.float64(0.9503203983436512)) ('f_sigv_LRG', np.float64(0.982381097215399)) ('log_Mcent_LRG', np.float64(12.836060622035514)) ('sigma_M_LRG', np.float64(0.4304159474620939))
[Interation 6] chi2=896.2402661904899
[Interation 6] chi2=837.2450180679701
[Interation 6] chi2=853.8177311486896
[Interation 6] chi2=906.4822065590348
[Interation 6] ('M_0_LRG', np.float64(12.543541318755002)) ('M_1_LRG', np.float64(13.837368743366932)) ('alpha_LRG', np.float64(1.0470819624539263)) ('f_sigv_LRG', np.float64(0.9432937546869548)) ('log_Mcent_LRG', np.float64(12.835014658281825)) ('sigma_M_LRG', np.float64(0.431706208036329))
[Interation 6] ('M_0_LRG', np.float64(12.598067460930878)) ('M_1_LRG', np.float64(13.85397318404124)) ('alpha_LRG', np.float64(1.0113434865614628)) ('f_sigv_LRG', np.float64(0.945007128189786)) ('log_Mcent_LRG', np.float64(12.833564573238867)) ('sigma_M_LRG', np.float64(0.42111824735652015))
[Interation 6] ('M_0_LRG', np.float64(12.578387126691652)) ('M_1_LRG', np.float64(13.79652383120182)) ('alpha_LRG', np.float64(1.037628364933052)) ('f_sigv_LRG', np.float64(0.9564244895773946)) ('log_Mcent_LRG', np.float64(12.781593101861905)) ('sigma_M_LRG', np.float64(0.38246663796413816))
[Interation 6] ('M_0_LRG', np.float64(12.6013274499169)) ('M_1_LRG', np.float64(13.84891070498151)) ('alpha_LRG', np.float64(0.998783337563679)) ('f_sigv_LRG', np.float64(0.9638649259743872)) ('log_Mcent_LRG', np.float64(12.847804980631391)) ('sigma_M_LRG', np.float64(0.44250838272954074))
[Interation 6] ('M_0_LRG', np.float64(12.458531649699086)) ('M_1_LRG', np.float64(13.882489573273174)) ('alpha_LRG', np.float64(1.0491084524013363)) ('f_sigv_LRG', np.float64(0.9692726764541543)) ('log_Mcent_LRG', np.float64(12.857966321953034)) ('sigma_M_LRG', np.float64(0.4388040128531371))
[Interation 6] ('M_0_LRG', np.float64(12.487077962904669)) ('M_1_LRG', np.float64(13.82597779052684)) ('alpha_LRG', np.float64(1.077096007555607)) ('f_sigv_LRG', np.float64(0.9540821214113964)) ('log_Mcent_LRG', np.float64(12.798873315166752)) ('sigma_M_LRG', np.float64(0.38401873997204944))
[Interation 6] ('M_0_LRG', np.float64(12.432773645370176)) ('M_1_LRG', np.float64(13.857728612158539)) ('alpha_LRG', np.float64(1.0779700640325542)) ('f_sigv_LRG', np.float64(0.9759941173493809)) ('log_Mcent_LRG', np.float64(12.824246871528384)) ('sigma_M_LRG', np.float64(0.4084411987892379))
[Interation 6] ('M_0_LRG', np.float64(12.505178966315615)) ('M_1_LRG', np.float64(13.839616163089108)) ('alpha_LRG', np.float64(1.0594489707953259)) ('f_sigv_LRG', np.float64(0.9524944869707036)) ('log_Mcent_LRG', np.float64(12.820243095208514)) ('sigma_M_LRG', np.float64(0.4084019292065889))
[Interation 6] ('M_0_LRG', np.float64(12.50115928496112)) ('M_1_LRG', np.float64(13.928157531318877)) ('alpha_LRG', np.float64(1.0619111664003908)) ('f_sigv_LRG', np.float64(0.9539485667553304)) ('log_Mcent_LRG', np.float64(12.924960941955536)) ('sigma_M_LRG', np.float64(0.5081788061583608))
[Interation 6] ('M_0_LRG', np.float64(12.545909278074204)) ('M_1_LRG', np.float64(13.822968324185698)) ('alpha_LRG', np.float64(1.0179507195807964)) ('f_sigv_LRG', np.float64(0.9800305462552221)) ('log_Mcent_LRG', np.float64(12.792829932770706)) ('sigma_M_LRG', np.float64(0.37758238055790916))
[Interation 6] ('M_0_LRG', np.float64(12.440294380736798)) ('M_1_LRG', np.float64(13.899878155072285)) ('alpha_LRG', np.float64(1.060722546645662)) ('f_sigv_LRG', np.float64(0.9698937485863872)) ('log_Mcent_LRG', np.float64(12.893562805153008)) ('sigma_M_LRG', np.float64(0.48178279640540833))
[Interation 6] ('M_0_LRG', np.float64(12.567367869510784)) ('M_1_LRG', np.float64(13.865441818321889)) ('alpha_LRG', np.float64(1.0117706870886642)) ('f_sigv_LRG', np.float64(0.96944434610599)) ('log_Mcent_LRG', np.float64(12.864214327798011)) ('sigma_M_LRG', np.float64(0.45762945115473946))
[Interation 6] chi2=812.7383175638813
[Interation 6] chi2=755.3506026628829
[Interation 6] chi2=753.0149165943594
[Interation 6] chi2=788.8882578010665
[Interation 6] chi2=863.7379848397061
[Interation 6] chi2=827.9059448212176
[Interation 6] chi2=870.5113451526132
[Interation 6] chi2=821.9838639845162
[Interation 6] chi2=888.5288959784384
[Interation 6] chi2=888.3438699899946
[Interation 6] chi2=842.3234484046368
[Interation 6] chi2=906.4533944882131
[Interation 7] ('M_0_LRG', np.float64(12.527717694457557)) ('M_1_LRG', np.float64(13.857265511501039)) ('alpha_LRG', np.float64(1.046811477534129)) ('f_sigv_LRG', np.float64(0.9682976879076167)) ('log_Mcent_LRG', np.float64(12.828653898892831)) ('sigma_M_LRG', np.float64(0.41219370144921086))
[Interation 7] ('M_0_LRG', np.float64(12.464872920826824)) ('M_1_LRG', np.float64(13.864017739936898)) ('alpha_LRG', np.float64(1.0771066482827356)) ('f_sigv_LRG', np.float64(0.9669991829462641)) ('log_Mcent_LRG', np.float64(12.839662087221487)) ('sigma_M_LRG', np.float64(0.42015206397253435))
[Interation 7] ('M_0_LRG', np.float64(12.494853019735325)) ('M_1_LRG', np.float64(13.848742282306326)) ('alpha_LRG', np.float64(1.0622120335896104)) ('f_sigv_LRG', np.float64(0.9634480129170713)) ('log_Mcent_LRG', np.float64(12.826204152104166)) ('sigma_M_LRG', np.float64(0.4092462248089573))
[Interation 7] ('M_0_LRG', np.float64(12.49450220991298)) ('M_1_LRG', np.float64(13.868742084192759)) ('alpha_LRG', np.float64(1.052057334216401)) ('f_sigv_LRG', np.float64(0.9737486602123286)) ('log_Mcent_LRG', np.float64(12.836920768998011)) ('sigma_M_LRG', np.float64(0.41798270135276383))
[Interation 7] chi2=873.3544040327355
[Interation 7] chi2=823.6257423009757
[Interation 7] chi2=818.440260957686
[Interation 7] chi2=744.056021753026
[Interation 7] ('M_0_LRG', np.float64(12.473192603276845)) ('M_1_LRG', np.float64(13.871307472606548)) ('alpha_LRG', np.float64(1.0733183042333108)) ('f_sigv_LRG', np.float64(0.9562001058400191)) ('log_Mcent_LRG', np.float64(12.859874432378364)) ('sigma_M_LRG', np.float64(0.4441364626538188))
[Interation 7] ('M_0_LRG', np.float64(12.57692901032979)) ('M_1_LRG', np.float64(13.834219952056145)) ('alpha_LRG', np.float64(1.02443163117212)) ('f_sigv_LRG', np.float64(0.9631514107788142)) ('log_Mcent_LRG', np.float64(12.812336742961568)) ('sigma_M_LRG', np.float64(0.3969007374125586))
[Interation 7] ('M_0_LRG', np.float64(12.529963609827252)) ('M_1_LRG', np.float64(13.858891194085222)) ('alpha_LRG', np.float64(1.0279138983243497)) ('f_sigv_LRG', np.float64(0.9829728263626065)) ('log_Mcent_LRG', np.float64(12.838595046604722)) ('sigma_M_LRG', np.float64(0.4168814330406227))
[Interation 7] ('M_0_LRG', np.float64(12.521844444470226)) ('M_1_LRG', np.float64(13.85907984994221)) ('alpha_LRG', np.float64(1.0490425355033488)) ('f_sigv_LRG', np.float64(0.9653185495166358)) ('log_Mcent_LRG', np.float64(12.83291988743494)) ('sigma_M_LRG', np.float64(0.4150159835379693))
[Interation 7] ('M_0_LRG', np.float64(12.532510114892117)) ('M_1_LRG', np.float64(13.854382136360067)) ('alpha_LRG', np.float64(1.0687758697692402)) ('f_sigv_LRG', np.float64(0.9483919952146391)) ('log_Mcent_LRG', np.float64(12.85435174300774)) ('sigma_M_LRG', np.float64(0.44232764610382147))
[Interation 7] ('M_0_LRG', np.float64(12.587825495924847)) ('M_1_LRG', np.float64(13.84193708986156)) ('alpha_LRG', np.float64(1.0167344969651118)) ('f_sigv_LRG', np.float64(0.9554760934070241)) ('log_Mcent_LRG', np.float64(12.83417692753021)) ('sigma_M_LRG', np.float64(0.42514642399882446))
[Interation 7] ('M_0_LRG', np.float64(12.496847919216304)) ('M_1_LRG', np.float64(13.87135966727342)) ('alpha_LRG', np.float64(1.062112526802653)) ('f_sigv_LRG', np.float64(0.9474384673378292)) ('log_Mcent_LRG', np.float64(12.857613405071046)) ('sigma_M_LRG', np.float64(0.4496460579706268))
[Interation 7] ('M_0_LRG', np.float64(12.494546745089732)) ('M_1_LRG', np.float64(13.860770717248627)) ('alpha_LRG', np.float64(1.0682238595343267)) ('f_sigv_LRG', np.float64(0.9603363442816558)) ('log_Mcent_LRG', np.float64(12.845248722557105)) ('sigma_M_LRG', np.float64(0.432504812894504))
[Interation 7] ('M_0_LRG', np.float64(12.463989876504849)) ('M_1_LRG', np.float64(13.842345896338456)) ('alpha_LRG', np.float64(1.0936879963572552)) ('f_sigv_LRG', np.float64(0.9507134973913066)) ('log_Mcent_LRG', np.float64(12.8286704897355)) ('sigma_M_LRG', np.float64(0.4182907409397014))
[Interation 7] ('M_0_LRG', np.float64(12.504263253595925)) ('M_1_LRG', np.float64(13.872057733148806)) ('alpha_LRG', np.float64(1.0452371746534466)) ('f_sigv_LRG', np.float64(0.967785291159867)) ('log_Mcent_LRG', np.float64(12.848359071508781)) ('sigma_M_LRG', np.float64(0.4303659691933319))
[Interation 7] ('M_0_LRG', np.float64(12.505340534764406)) ('M_1_LRG', np.float64(13.864729079434575)) ('alpha_LRG', np.float64(1.058569616540582)) ('f_sigv_LRG', np.float64(0.9539527408161899)) ('log_Mcent_LRG', np.float64(12.848512465751696)) ('sigma_M_LRG', np.float64(0.43441256280899576))
[Interation 7] ('M_0_LRG', np.float64(12.485664099576214)) ('M_1_LRG', np.float64(13.856471148361628)) ('alpha_LRG', np.float64(1.0588938261190175)) ('f_sigv_LRG', np.float64(0.9753848525174595)) ('log_Mcent_LRG', np.float64(12.83319116385753)) ('sigma_M_LRG', np.float64(0.4158644646758365))
[Interation 7] chi2=872.3267691470448
[Interation 7] chi2=756.681780372427
[Interation 7] chi2=810.4229609751198
[Interation 7] chi2=900.5532387975998
[Interation 7] chi2=771.4664827678578
[Interation 7] chi2=785.1874462359372
[Interation 7] chi2=841.3726158462174
[Interation 7] chi2=764.4297747214226
[Interation 7] chi2=840.128981169642
[Interation 7] chi2=834.1063450989263
[Interation 7] chi2=770.334931749635
[Interation 7] chi2=773.9355466212991
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_04.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.525003138044843)) ('M_1_LRG', np.float64(13.848970515812814)) ('alpha_LRG', np.float64(1.055986454373584)) ('f_sigv_LRG', np.float64(0.9579121794863714)) ('log_Mcent_LRG', np.float64(12.841041144692346)) ('sigma_M_LRG', np.float64(0.43022934975239746))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3617258071899414
Start satellite assignement
Satellite assignement done 0.08034086227416992
LRG mock catalogue done 0.15731191635131836
586454 central galaxies, 96227 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6973695755004883
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_04.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.469020995965172)) ('M_1_LRG', np.float64(13.882892277432832)) ('alpha_LRG', np.float64(1.185000898902386)) ('f_sigv_LRG', np.float64(0.875563045229614)) ('log_Mcent_LRG', np.float64(12.892480763246017)) ('sigma_M_LRG', np.float64(0.46619760294194945))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.472528806596287)) ('M_1_LRG', np.float64(13.78733999920553)) ('alpha_LRG', np.float64(0.9281027635391967)) ('f_sigv_LRG', np.float64(0.9612689594230173)) ('log_Mcent_LRG', np.float64(12.823354200363086)) ('sigma_M_LRG', np.float64(0.5196956575615741))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.624859717240044)) ('M_1_LRG', np.float64(13.82422641896141)) ('alpha_LRG', np.float64(0.938247517304968)) ('f_sigv_LRG', np.float64(1.086873288667282)) ('log_Mcent_LRG', np.float64(12.887840127426045)) ('sigma_M_LRG', np.float64(0.48500616392929796))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.517133227701438)) ('M_1_LRG', np.float64(13.869017987771496)) ('alpha_LRG', np.float64(1.0019423533967635)) ('f_sigv_LRG', np.float64(1.0781789226792016)) ('log_Mcent_LRG', np.float64(12.828668195743127)) ('sigma_M_LRG', np.float64(0.41285239971359344))
[Interation 8] chi2=1009.6947990563751
[Interation 8] chi2=1660.820015563767
[Interation 8] chi2=1339.728056253557
[Interation 8] chi2=1027.2151066822005
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.599284467220178)) ('M_1_LRG', np.float64(13.823644990693893)) ('alpha_LRG', np.float64(0.9808434979287635)) ('f_sigv_LRG', np.float64(0.9980579138468455)) ('log_Mcent_LRG', np.float64(12.80214790125006)) ('sigma_M_LRG', np.float64(0.379823691101015))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.587415122675315)) ('M_1_LRG', np.float64(13.835884916095159)) ('alpha_LRG', np.float64(0.9548447483107035)) ('f_sigv_LRG', np.float64(1.005786187184708)) ('log_Mcent_LRG', np.float64(12.782143274297496)) ('sigma_M_LRG', np.float64(0.37301694211151265))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.533061244919937)) ('M_1_LRG', np.float64(13.83845242782685)) ('alpha_LRG', np.float64(0.9768494757230863)) ('f_sigv_LRG', np.float64(0.9964397027045233)) ('log_Mcent_LRG', np.float64(12.826662774898523)) ('sigma_M_LRG', np.float64(0.42032839592984805))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.528365326151555)) ('M_1_LRG', np.float64(13.848319594829864)) ('alpha_LRG', np.float64(0.9866842816483641)) ('f_sigv_LRG', np.float64(1.0141787744518551)) ('log_Mcent_LRG', np.float64(12.804335973556777)) ('sigma_M_LRG', np.float64(0.384415046363782))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.515789333889686)) ('M_1_LRG', np.float64(13.869126129631333)) ('alpha_LRG', np.float64(1.0205318486717307)) ('f_sigv_LRG', np.float64(0.9658113867112242)) ('log_Mcent_LRG', np.float64(12.83110518729625)) ('sigma_M_LRG', np.float64(0.4108301062089161))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.573730393134067)) ('M_1_LRG', np.float64(13.83633381651814)) ('alpha_LRG', np.float64(1.0250126894449647)) ('f_sigv_LRG', np.float64(0.9209256210737731)) ('log_Mcent_LRG', np.float64(12.817797342671154)) ('sigma_M_LRG', np.float64(0.39690502093161145))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.505848633352922)) ('M_1_LRG', np.float64(13.853056236464598)) ('alpha_LRG', np.float64(1.030897391043611)) ('f_sigv_LRG', np.float64(0.9633735113632576)) ('log_Mcent_LRG', np.float64(12.823341521389642)) ('sigma_M_LRG', np.float64(0.41167335607510314))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.540739502098429)) ('M_1_LRG', np.float64(13.824118176377242)) ('alpha_LRG', np.float64(1.0287873519974404)) ('f_sigv_LRG', np.float64(0.9867865260819276)) ('log_Mcent_LRG', np.float64(12.805192942649965)) ('sigma_M_LRG', np.float64(0.39672473682602744))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.605730725330789)) ('M_1_LRG', np.float64(13.811016445495282)) ('alpha_LRG', np.float64(1.0169686477595443)) ('f_sigv_LRG', np.float64(0.9633514505335405)) ('log_Mcent_LRG', np.float64(12.817256337001485)) ('sigma_M_LRG', np.float64(0.4131262163040868))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.545923746067036)) ('M_1_LRG', np.float64(13.825083679153071)) ('alpha_LRG', np.float64(1.0029992648220758)) ('f_sigv_LRG', np.float64(0.9789628408333519)) ('log_Mcent_LRG', np.float64(12.781466837316522)) ('sigma_M_LRG', np.float64(0.3600325160408192))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.42726678557279)) ('M_1_LRG', np.float64(13.853768256530474)) ('alpha_LRG', np.float64(1.0688923065103013)) ('f_sigv_LRG', np.float64(0.9990131945593105)) ('log_Mcent_LRG', np.float64(12.808610769573567)) ('sigma_M_LRG', np.float64(0.37657900407965694))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.510843122805882)) ('M_1_LRG', np.float64(13.828740083349292)) ('alpha_LRG', np.float64(1.0075824012332688)) ('f_sigv_LRG', np.float64(0.9988253676229915)) ('log_Mcent_LRG', np.float64(12.79295444736023)) ('sigma_M_LRG', np.float64(0.3685625159549859))
[Interation 8] chi2=836.231256152438
[Interation 8] chi2=824.9598416486022
[Interation 8] chi2=823.5551110441381
[Interation 8] chi2=812.9702744425645
[Interation 8] chi2=798.8418581943806
[Interation 8] chi2=897.9790598550336
[Interation 8] chi2=868.7483149267498
[Interation 8] chi2=836.5064362563253
[Interation 8] chi2=870.1244704514295
[Interation 8] chi2=904.1894007672438
[Interation 8] chi2=923.0324898835424
[Interation 8] chi2=841.6601896663956
[Interation 9] ('M_0_LRG', np.float64(12.505313430396598)) ('M_1_LRG', np.float64(13.86239811909411)) ('alpha_LRG', np.float64(1.0454904223829682)) ('f_sigv_LRG', np.float64(0.9796726686767175)) ('log_Mcent_LRG', np.float64(12.832148974814896)) ('sigma_M_LRG', np.float64(0.4128261794637085))
[Interation 9] ('M_0_LRG', np.float64(12.466782246371762)) ('M_1_LRG', np.float64(13.879222767607226)) ('alpha_LRG', np.float64(1.0439769460628594)) ('f_sigv_LRG', np.float64(0.9879722713818881)) ('log_Mcent_LRG', np.float64(12.838164805600805)) ('sigma_M_LRG', np.float64(0.4163219788299768))
[Interation 9] ('M_0_LRG', np.float64(12.568077512550488)) ('M_1_LRG', np.float64(13.85805499016426)) ('alpha_LRG', np.float64(1.0122556819172157)) ('f_sigv_LRG', np.float64(0.9862212560299771)) ('log_Mcent_LRG', np.float64(12.832131683175344)) ('sigma_M_LRG', np.float64(0.4115384276766589))
[Interation 9] ('M_0_LRG', np.float64(12.47556910822533)) ('M_1_LRG', np.float64(13.838935248762585)) ('alpha_LRG', np.float64(1.054070654166621)) ('f_sigv_LRG', np.float64(0.9914778617856925)) ('log_Mcent_LRG', np.float64(12.790160805526734)) ('sigma_M_LRG', np.float64(0.365763925121102))
[Interation 9] chi2=843.7051410554683
[Interation 9] chi2=822.9232203540284
[Interation 9] chi2=888.9564765901239
[Interation 9] chi2=903.1829029930764
[Interation 9] ('M_0_LRG', np.float64(12.440726924931752)) ('M_1_LRG', np.float64(13.869885431457593)) ('alpha_LRG', np.float64(1.073752790195315)) ('f_sigv_LRG', np.float64(0.9436125934713764)) ('log_Mcent_LRG', np.float64(12.855838277078918)) ('sigma_M_LRG', np.float64(0.4433159288244295))
[Interation 9] ('M_0_LRG', np.float64(12.475754267682559)) ('M_1_LRG', np.float64(13.873867814681196)) ('alpha_LRG', np.float64(1.050611371725304)) ('f_sigv_LRG', np.float64(0.9585910659545592)) ('log_Mcent_LRG', np.float64(12.851303798290932)) ('sigma_M_LRG', np.float64(0.43197373042466974))
[Interation 9] ('M_0_LRG', np.float64(12.414162895269559)) ('M_1_LRG', np.float64(13.872198987164928)) ('alpha_LRG', np.float64(1.0591506415383325)) ('f_sigv_LRG', np.float64(0.9881940819099305)) ('log_Mcent_LRG', np.float64(12.834408628552874)) ('sigma_M_LRG', np.float64(0.40992287296759533))
[Interation 9] ('M_0_LRG', np.float64(12.527062003461136)) ('M_1_LRG', np.float64(13.821647980704997)) ('alpha_LRG', np.float64(1.0448162166840995)) ('f_sigv_LRG', np.float64(0.9640867843985402)) ('log_Mcent_LRG', np.float64(12.80796674748754)) ('sigma_M_LRG', np.float64(0.40042822180014365))
[Interation 9] ('M_0_LRG', np.float64(12.507301785840651)) ('M_1_LRG', np.float64(13.859525250790053)) ('alpha_LRG', np.float64(1.0267784163410871)) ('f_sigv_LRG', np.float64(0.9811307215818798)) ('log_Mcent_LRG', np.float64(12.828346404852265)) ('sigma_M_LRG', np.float64(0.4096843286298588))
[Interation 9] ('M_0_LRG', np.float64(12.547504283648381)) ('M_1_LRG', np.float64(13.852679546899235)) ('alpha_LRG', np.float64(1.0187332765887596)) ('f_sigv_LRG', np.float64(0.9747911750553013)) ('log_Mcent_LRG', np.float64(12.82567920122717)) ('sigma_M_LRG', np.float64(0.40697412043460535))
[Interation 9] ('M_0_LRG', np.float64(12.449310103188797)) ('M_1_LRG', np.float64(13.879883692769429)) ('alpha_LRG', np.float64(1.0483759213594246)) ('f_sigv_LRG', np.float64(0.985610154777594)) ('log_Mcent_LRG', np.float64(12.84478936467988)) ('sigma_M_LRG', np.float64(0.41710999938540705))
[Interation 9] ('M_0_LRG', np.float64(12.430984088463289)) ('M_1_LRG', np.float64(13.86574691895382)) ('alpha_LRG', np.float64(1.0703329221034368)) ('f_sigv_LRG', np.float64(0.9801008695647857)) ('log_Mcent_LRG', np.float64(12.831723846344742)) ('sigma_M_LRG', np.float64(0.40838858831211106))
[Interation 9] ('M_0_LRG', np.float64(12.589626117837096)) ('M_1_LRG', np.float64(13.868884564052678)) ('alpha_LRG', np.float64(1.0048868089160663)) ('f_sigv_LRG', np.float64(0.9699224292435812)) ('log_Mcent_LRG', np.float64(12.853375114379865)) ('sigma_M_LRG', np.float64(0.43897484960882804))
[Interation 9] ('M_0_LRG', np.float64(12.382383682699148)) ('M_1_LRG', np.float64(13.888060703511142)) ('alpha_LRG', np.float64(1.0707171485676028)) ('f_sigv_LRG', np.float64(0.9967172123427742)) ('log_Mcent_LRG', np.float64(12.83480131952872)) ('sigma_M_LRG', np.float64(0.4024970895757536))
[Interation 9] ('M_0_LRG', np.float64(12.495533362237294)) ('M_1_LRG', np.float64(13.871059353708562)) ('alpha_LRG', np.float64(1.0535269608013678)) ('f_sigv_LRG', np.float64(0.9671932543073104)) ('log_Mcent_LRG', np.float64(12.854479335650433)) ('sigma_M_LRG', np.float64(0.43995467358168844))
[Interation 9] ('M_0_LRG', np.float64(12.439683432247625)) ('M_1_LRG', np.float64(13.867953312019596)) ('alpha_LRG', np.float64(1.0665148628544359)) ('f_sigv_LRG', np.float64(0.9744557526126973)) ('log_Mcent_LRG', np.float64(12.841946632635395)) ('sigma_M_LRG', np.float64(0.4259410637125174))
[Interation 9] chi2=877.9793819995044
[Interation 9] chi2=801.6967640548755
[Interation 9] chi2=854.5749216875413
[Interation 9] chi2=815.25071555077
[Interation 9] chi2=775.1638051036209
[Interation 9] chi2=843.4138056325587
[Interation 9] chi2=855.4508753832273
[Interation 9] chi2=793.9839203546001
[Interation 9] chi2=801.067203823354
[Interation 9] chi2=852.2590729690116
[Interation 9] chi2=886.1997308045793
[Interation 9] chi2=838.1726915161761
[Interation 10] ('M_0_LRG', np.float64(12.401382648747093)) ('M_1_LRG', np.float64(13.87832802172165)) ('alpha_LRG', np.float64(1.0762535409466902)) ('f_sigv_LRG', np.float64(0.9893080603681391)) ('log_Mcent_LRG', np.float64(12.840308972035695)) ('sigma_M_LRG', np.float64(0.4139327898960535))
[Interation 10] ('M_0_LRG', np.float64(12.464776853043077)) ('M_1_LRG', np.float64(13.8557849695324)) ('alpha_LRG', np.float64(1.050026243802296)) ('f_sigv_LRG', np.float64(0.9745933136446182)) ('log_Mcent_LRG', np.float64(12.825023987449349)) ('sigma_M_LRG', np.float64(0.4061626526457096))
[Interation 10] ('M_0_LRG', np.float64(12.406364461862298)) ('M_1_LRG', np.float64(13.873052938638484)) ('alpha_LRG', np.float64(1.08536315118527)) ('f_sigv_LRG', np.float64(0.975961179755548)) ('log_Mcent_LRG', np.float64(12.846082643163069)) ('sigma_M_LRG', np.float64(0.4246866318699469))
[Interation 10] ('M_0_LRG', np.float64(12.4611944808158)) ('M_1_LRG', np.float64(13.868931348879272)) ('alpha_LRG', np.float64(1.0611390527362812)) ('f_sigv_LRG', np.float64(0.9660693296179402)) ('log_Mcent_LRG', np.float64(12.844175847172679)) ('sigma_M_LRG', np.float64(0.4267630740901474))
[Interation 10] chi2=825.6626747499199
[Interation 10] chi2=816.864440896432
[Interation 10] chi2=800.2175144403972
[Interation 10] chi2=807.2427730057378
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_05.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.429519094178863)) ('M_1_LRG', np.float64(13.879856554283299)) ('alpha_LRG', np.float64(1.0708783528842964)) ('f_sigv_LRG', np.float64(0.9786022252854396)) ('log_Mcent_LRG', np.float64(12.852072486633881)) ('sigma_M_LRG', np.float64(0.4302878070577823))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.35706520080566406
Start satellite assignement
Satellite assignement done 0.07973980903625488
LRG mock catalogue done 0.15631413459777832
568680 central galaxies, 95754 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.7045140266418457
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_05.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.535390036532743)) ('M_1_LRG', np.float64(13.467031840965534)) ('alpha_LRG', np.float64(0.9970364469368391)) ('f_sigv_LRG', np.float64(0.905067172917415)) ('log_Mcent_LRG', np.float64(12.805656762992989)) ('sigma_M_LRG', np.float64(0.579654585494554))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.573367171760236)) ('M_1_LRG', np.float64(13.557306137335894)) ('alpha_LRG', np.float64(0.87906394969901)) ('f_sigv_LRG', np.float64(0.9350520202064596)) ('log_Mcent_LRG', np.float64(12.746478577587329)) ('sigma_M_LRG', np.float64(0.5279383956434077))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.514214454690958)) ('M_1_LRG', np.float64(13.504685749854575)) ('alpha_LRG', np.float64(0.9827602256787483)) ('f_sigv_LRG', np.float64(0.9747580658469713)) ('log_Mcent_LRG', np.float64(12.613801441222149)) ('sigma_M_LRG', np.float64(0.43694319445807994))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.51920250803719)) ('M_1_LRG', np.float64(13.49205531042887)) ('alpha_LRG', np.float64(0.893003226385436)) ('f_sigv_LRG', np.float64(0.9905529566112755)) ('log_Mcent_LRG', np.float64(12.64812125371145)) ('sigma_M_LRG', np.float64(0.40415258448607694))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.385613493365563)) ('M_1_LRG', np.float64(13.54169729326241)) ('alpha_LRG', np.float64(1.0453684556597427)) ('f_sigv_LRG', np.float64(0.9451520870745318)) ('log_Mcent_LRG', np.float64(12.653802510670705)) ('sigma_M_LRG', np.float64(0.4994128562384452))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.686687108932418)) ('M_1_LRG', np.float64(13.685370403321057)) ('alpha_LRG', np.float64(0.9922637721424088)) ('f_sigv_LRG', np.float64(0.9338291606720943)) ('log_Mcent_LRG', np.float64(12.78693578927563)) ('sigma_M_LRG', np.float64(0.4817686323400642))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.497915575924624)) ('M_1_LRG', np.float64(13.41184076048257)) ('alpha_LRG', np.float64(1.002467941839078)) ('f_sigv_LRG', np.float64(0.9642686445355909)) ('log_Mcent_LRG', np.float64(12.63212002822502)) ('sigma_M_LRG', np.float64(0.5302455089355448))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.424126196244071)) ('M_1_LRG', np.float64(13.724987213076702)) ('alpha_LRG', np.float64(1.044399423333153)) ('f_sigv_LRG', np.float64(1.078198548655798)) ('log_Mcent_LRG', np.float64(12.77105180803724)) ('sigma_M_LRG', np.float64(0.4946433578560403))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.33919970903393)) ('M_1_LRG', np.float64(13.554987317981906)) ('alpha_LRG', np.float64(0.9905342088859937)) ('f_sigv_LRG', np.float64(1.0698468216650876)) ('log_Mcent_LRG', np.float64(12.749521786475638)) ('sigma_M_LRG', np.float64(0.4449143190635357))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.58264696991211)) ('M_1_LRG', np.float64(13.339042238947403)) ('alpha_LRG', np.float64(0.9844014189521504)) ('f_sigv_LRG', np.float64(1.0914526055283305)) ('log_Mcent_LRG', np.float64(12.642343046587582)) ('sigma_M_LRG', np.float64(0.4591134177684128))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.4920938808433)) ('M_1_LRG', np.float64(13.57891202081567)) ('alpha_LRG', np.float64(1.0127193054510102)) ('f_sigv_LRG', np.float64(1.0283980756013709)) ('log_Mcent_LRG', np.float64(12.707898565631748)) ('sigma_M_LRG', np.float64(0.4246858086042463))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.53089153287339)) ('M_1_LRG', np.float64(13.590279165688399)) ('alpha_LRG', np.float64(1.0130850043882242)) ('f_sigv_LRG', np.float64(0.9440886783109942)) ('log_Mcent_LRG', np.float64(12.68485091186667)) ('sigma_M_LRG', np.float64(0.4495132567427765))
[Interation 10] chi2=4470.492614258869
[Interation 10] chi2=2579.022961439602
[Interation 10] chi2=3395.0753934639242
[Interation 10] chi2=1374.5524198527926
[Interation 10] chi2=2729.0499168032975
[Interation 10] chi2=2630.712918645988
[Interation 10] chi2=3956.4471574276286
[Interation 10] chi2=3970.767933315125
[Interation 10] chi2=4889.658442121759
[Interation 10] chi2=5881.587602895659
[Interation 10] chi2=2234.0108600523668
[Interation 10] chi2=2307.673441213979
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 11] ('M_0_LRG', np.float64(12.58227517273901)) ('M_1_LRG', np.float64(13.884958272493154)) ('alpha_LRG', np.float64(0.9456902770600749)) ('f_sigv_LRG', np.float64(0.9943390675355465)) ('log_Mcent_LRG', np.float64(12.820951593865596)) ('sigma_M_LRG', np.float64(0.3884794325116646))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 11] ('M_0_LRG', np.float64(12.552907662019273)) ('M_1_LRG', np.float64(13.80668285427807)) ('alpha_LRG', np.float64(1.0492398441128055)) ('f_sigv_LRG', np.float64(0.9846766793812279)) ('log_Mcent_LRG', np.float64(12.781613205287933)) ('sigma_M_LRG', np.float64(0.35661961445359563))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 11] ('M_0_LRG', np.float64(12.552552753764282)) ('M_1_LRG', np.float64(13.863207148125444)) ('alpha_LRG', np.float64(1.0237471138916452)) ('f_sigv_LRG', np.float64(0.9777041638699095)) ('log_Mcent_LRG', np.float64(12.858199278254002)) ('sigma_M_LRG', np.float64(0.4385104172131773))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 11] ('M_0_LRG', np.float64(12.57727703666437)) ('M_1_LRG', np.float64(13.840411993465265)) ('alpha_LRG', np.float64(1.0031481220897849)) ('f_sigv_LRG', np.float64(0.9612992134198335)) ('log_Mcent_LRG', np.float64(12.782377089913005)) ('sigma_M_LRG', np.float64(0.3528866115381566))
[Interation 11] chi2=971.8114430220818
[Interation 11] chi2=898.6983854656982
[Interation 11] chi2=926.1951872940659
[Interation 11] chi2=976.2697735967578
[Interation 11] ('M_0_LRG', np.float64(12.61264790664289)) ('M_1_LRG', np.float64(13.841173764305829)) ('alpha_LRG', np.float64(0.9940765822774033)) ('f_sigv_LRG', np.float64(0.962442853378011)) ('log_Mcent_LRG', np.float64(12.818761913724767)) ('sigma_M_LRG', np.float64(0.3973827862257936))
[Interation 11] ('M_0_LRG', np.float64(12.6879900866124)) ('M_1_LRG', np.float64(13.824679849651123)) ('alpha_LRG', np.float64(0.9586651286003465)) ('f_sigv_LRG', np.float64(0.9637475990292305)) ('log_Mcent_LRG', np.float64(12.818988708545344)) ('sigma_M_LRG', np.float64(0.40463325076198514))
[Interation 11] ('M_0_LRG', np.float64(12.637003404510953)) ('M_1_LRG', np.float64(13.822707000936765)) ('alpha_LRG', np.float64(0.9786188758350033)) ('f_sigv_LRG', np.float64(0.9481467374132236)) ('log_Mcent_LRG', np.float64(12.820587234266025)) ('sigma_M_LRG', np.float64(0.4223442613732097))
[Interation 11] ('M_0_LRG', np.float64(12.654715468739042)) ('M_1_LRG', np.float64(13.85223905955991)) ('alpha_LRG', np.float64(0.9700411083417473)) ('f_sigv_LRG', np.float64(0.9535077688866148)) ('log_Mcent_LRG', np.float64(12.824952538877909)) ('sigma_M_LRG', np.float64(0.4108253293524933))
[Interation 11] ('M_0_LRG', np.float64(12.540475866313207)) ('M_1_LRG', np.float64(13.844386031062264)) ('alpha_LRG', np.float64(1.0393550145832091)) ('f_sigv_LRG', np.float64(0.9661483342776737)) ('log_Mcent_LRG', np.float64(12.829720242729044)) ('sigma_M_LRG', np.float64(0.41892192499024977))
[Interation 11] ('M_0_LRG', np.float64(12.59793007694617)) ('M_1_LRG', np.float64(13.842828966648034)) ('alpha_LRG', np.float64(0.9922555796510861)) ('f_sigv_LRG', np.float64(0.9653899276458312)) ('log_Mcent_LRG', np.float64(12.80640919425089)) ('sigma_M_LRG', np.float64(0.38233936368545196))
[Interation 11] ('M_0_LRG', np.float64(12.495229543217377)) ('M_1_LRG', np.float64(13.882313133819302)) ('alpha_LRG', np.float64(1.0562195191598018)) ('f_sigv_LRG', np.float64(0.986937017896523)) ('log_Mcent_LRG', np.float64(12.841538165140394)) ('sigma_M_LRG', np.float64(0.4158524550365294))
[Interation 11] ('M_0_LRG', np.float64(12.605063653247386)) ('M_1_LRG', np.float64(13.854216389525224)) ('alpha_LRG', np.float64(0.9704912053305804)) ('f_sigv_LRG', np.float64(0.9707977870349902)) ('log_Mcent_LRG', np.float64(12.821403806535798)) ('sigma_M_LRG', np.float64(0.4138927100332397))
[Interation 11] ('M_0_LRG', np.float64(12.59008433516822)) ('M_1_LRG', np.float64(13.79485669995061)) ('alpha_LRG', np.float64(1.011680511175485)) ('f_sigv_LRG', np.float64(0.9810917639313463)) ('log_Mcent_LRG', np.float64(12.781493929346372)) ('sigma_M_LRG', np.float64(0.3734264080062053))
[Interation 11] ('M_0_LRG', np.float64(12.532547805738915)) ('M_1_LRG', np.float64(13.812543902458298)) ('alpha_LRG', np.float64(1.0286739207725697)) ('f_sigv_LRG', np.float64(0.9867328419826217)) ('log_Mcent_LRG', np.float64(12.774028409273003)) ('sigma_M_LRG', np.float64(0.3529176147542049))
[Interation 11] ('M_0_LRG', np.float64(12.600768942659458)) ('M_1_LRG', np.float64(13.846829588413096)) ('alpha_LRG', np.float64(0.9793518059201357)) ('f_sigv_LRG', np.float64(0.9698582570406856)) ('log_Mcent_LRG', np.float64(12.826428381650613)) ('sigma_M_LRG', np.float64(0.4219794054999515))
[Interation 11] ('M_0_LRG', np.float64(12.61428205200862)) ('M_1_LRG', np.float64(13.85903344738807)) ('alpha_LRG', np.float64(1.0096019191292904)) ('f_sigv_LRG', np.float64(0.9725471798353896)) ('log_Mcent_LRG', np.float64(12.844855098385226)) ('sigma_M_LRG', np.float64(0.42600362330457264))
[Interation 11] chi2=823.9270459549988
[Interation 11] chi2=839.6095084657726
[Interation 11] chi2=846.3643573161299
[Interation 11] chi2=880.6262823207242
[Interation 11] chi2=848.0436922059313
[Interation 11] chi2=858.6660478895102
[Interation 11] chi2=963.6551385633595
[Interation 11] chi2=786.5680935476987
[Interation 11] chi2=885.9837457641202
[Interation 11] chi2=828.9544519459793
[Interation 11] chi2=863.8749561418706
[Interation 11] chi2=822.4289566018526
[Interation 12] ('M_0_LRG', np.float64(12.564291600273695)) ('M_1_LRG', np.float64(13.874147921305289)) ('alpha_LRG', np.float64(1.0176535528653103)) ('f_sigv_LRG', np.float64(0.9694837838976075)) ('log_Mcent_LRG', np.float64(12.863000529363909)) ('sigma_M_LRG', np.float64(0.4519246416457123))
[Interation 12] ('M_0_LRG', np.float64(12.543107026939962)) ('M_1_LRG', np.float64(13.837677566395056)) ('alpha_LRG', np.float64(1.035079540843171)) ('f_sigv_LRG', np.float64(0.9656244827533383)) ('log_Mcent_LRG', np.float64(12.828994147008672)) ('sigma_M_LRG', np.float64(0.4210279984142055))
[Interation 12] ('M_0_LRG', np.float64(12.493185942017458)) ('M_1_LRG', np.float64(13.840541628271039)) ('alpha_LRG', np.float64(1.0798477198767042)) ('f_sigv_LRG', np.float64(0.9633576674236524)) ('log_Mcent_LRG', np.float64(12.82912856139135)) ('sigma_M_LRG', np.float64(0.41854872635749274))
[Interation 12] ('M_0_LRG', np.float64(12.62401435557686)) ('M_1_LRG', np.float64(13.835652492627656)) ('alpha_LRG', np.float64(0.9854975828989605)) ('f_sigv_LRG', np.float64(0.9857349762151193)) ('log_Mcent_LRG', np.float64(12.813480551044623)) ('sigma_M_LRG', np.float64(0.3981174845863118))
[Interation 12] chi2=881.8685651095763
[Interation 12] chi2=868.198900575347
[Interation 12] chi2=962.7094911432051
[Interation 12] chi2=874.6307451795299
[Interation 12] ('M_0_LRG', np.float64(12.547386248838508)) ('M_1_LRG', np.float64(13.849152695037084)) ('alpha_LRG', np.float64(1.030544445753264)) ('f_sigv_LRG', np.float64(0.9834725697119319)) ('log_Mcent_LRG', np.float64(12.832711097774961)) ('sigma_M_LRG', np.float64(0.41893548871227865))
[Interation 12] ('M_0_LRG', np.float64(12.53520400028875)) ('M_1_LRG', np.float64(13.865482533238023)) ('alpha_LRG', np.float64(1.0394261024308686)) ('f_sigv_LRG', np.float64(0.9499330271794444)) ('log_Mcent_LRG', np.float64(12.857557670628042)) ('sigma_M_LRG', np.float64(0.45071097247599856))
[Interation 12] ('M_0_LRG', np.float64(12.567314487904378)) ('M_1_LRG', np.float64(13.850757298160067)) ('alpha_LRG', np.float64(1.0186798452960464)) ('f_sigv_LRG', np.float64(0.9724043503454785)) ('log_Mcent_LRG', np.float64(12.833485287227528)) ('sigma_M_LRG', np.float64(0.42098298473317985))
[Interation 12] ('M_0_LRG', np.float64(12.566196174919302)) ('M_1_LRG', np.float64(13.818662681748016)) ('alpha_LRG', np.float64(1.0441705572936621)) ('f_sigv_LRG', np.float64(0.9591047417338613)) ('log_Mcent_LRG', np.float64(12.810690379791277)) ('sigma_M_LRG', np.float64(0.3956732975830102))
[Interation 12] ('M_0_LRG', np.float64(12.547555533666527)) ('M_1_LRG', np.float64(13.857432539234269)) ('alpha_LRG', np.float64(1.029551653533544)) ('f_sigv_LRG', np.float64(0.9689191925131548)) ('log_Mcent_LRG', np.float64(12.836514193395255)) ('sigma_M_LRG', np.float64(0.4207933290344208))
[Interation 12] ('M_0_LRG', np.float64(12.535238661343678)) ('M_1_LRG', np.float64(13.88834471681926)) ('alpha_LRG', np.float64(1.0161643703543108)) ('f_sigv_LRG', np.float64(0.9661929082492305)) ('log_Mcent_LRG', np.float64(12.864990887933006)) ('sigma_M_LRG', np.float64(0.4553438050182669))
[Interation 12] ('M_0_LRG', np.float64(12.528097714273539)) ('M_1_LRG', np.float64(13.886223924280769)) ('alpha_LRG', np.float64(1.0232921376375723)) ('f_sigv_LRG', np.float64(0.9723635854149583)) ('log_Mcent_LRG', np.float64(12.861872633336509)) ('sigma_M_LRG', np.float64(0.4450288922611235))
[Interation 12] ('M_0_LRG', np.float64(12.559634876653275)) ('M_1_LRG', np.float64(13.852173039723729)) ('alpha_LRG', np.float64(1.025687845588737)) ('f_sigv_LRG', np.float64(0.9644099201163407)) ('log_Mcent_LRG', np.float64(12.83626440836461)) ('sigma_M_LRG', np.float64(0.424613541215661))
[Interation 12] ('M_0_LRG', np.float64(12.53350311761009)) ('M_1_LRG', np.float64(13.861859185944262)) ('alpha_LRG', np.float64(1.0299240102035727)) ('f_sigv_LRG', np.float64(0.9651873359311134)) ('log_Mcent_LRG', np.float64(12.833222314370214)) ('sigma_M_LRG', np.float64(0.42015038399357824))
[Interation 12] ('M_0_LRG', np.float64(12.549071064550013)) ('M_1_LRG', np.float64(13.828700629681723)) ('alpha_LRG', np.float64(1.0396766488354459)) ('f_sigv_LRG', np.float64(0.961766818788258)) ('log_Mcent_LRG', np.float64(12.804617142352276)) ('sigma_M_LRG', np.float64(0.3900914210213938))
[Interation 12] ('M_0_LRG', np.float64(12.563206550146075)) ('M_1_LRG', np.float64(13.857107634183627)) ('alpha_LRG', np.float64(1.013871736574642)) ('f_sigv_LRG', np.float64(0.9633853569944708)) ('log_Mcent_LRG', np.float64(12.83413708015658)) ('sigma_M_LRG', np.float64(0.42145923152247483))
[Interation 12] ('M_0_LRG', np.float64(12.556575087384825)) ('M_1_LRG', np.float64(13.843587411082664)) ('alpha_LRG', np.float64(1.0206428172241895)) ('f_sigv_LRG', np.float64(0.9727251419904452)) ('log_Mcent_LRG', np.float64(12.811909013961278)) ('sigma_M_LRG', np.float64(0.3980421219103028))
[Interation 12] chi2=833.6555215428657
[Interation 12] chi2=843.7735686487797
[Interation 12] chi2=814.3499499355843
[Interation 12] chi2=845.8714825870754
[Interation 12] chi2=875.1801356695491
[Interation 12] chi2=824.2745362458309
[Interation 12] chi2=838.1044331287783
[Interation 12] chi2=895.533793731749
[Interation 12] chi2=835.5046298942649
[Interation 12] chi2=840.1883642057337
[Interation 12] chi2=809.1716502109166
[Interation 12] chi2=799.0934758066162
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_06.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.545277238606355)) ('M_1_LRG', np.float64(13.870442050335944)) ('alpha_LRG', np.float64(1.0196747825830486)) ('f_sigv_LRG', np.float64(0.9779225307352347)) ('log_Mcent_LRG', np.float64(12.868095005148268)) ('sigma_M_LRG', np.float64(0.4617428387803774))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3407249450683594
Start satellite assignement
Satellite assignement done 0.0783383846282959
LRG mock catalogue done 0.15409302711486816
572210 central galaxies, 93153 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.690333366394043
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_06.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:19
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:20
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:21
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:22
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Load smu measurements at z0.6-0.8 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:18
Load correlation matrix for LRG at z0.725 ...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:18
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load smu measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Load correlation matrix for LRG at z0.725 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load rppi measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.616476362984189)) ('M_1_LRG', np.float64(13.933617956079738)) ('alpha_LRG', np.float64(1.0350725625193071)) ('f_sigv_LRG', np.float64(0.831708172272645)) ('log_Mcent_LRG', np.float64(12.859228241088472)) ('sigma_M_LRG', np.float64(0.39972263676409725))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.540286085813042)) ('M_1_LRG', np.float64(13.861327005038486)) ('alpha_LRG', np.float64(1.1438793489053407)) ('f_sigv_LRG', np.float64(0.8940465474316196)) ('log_Mcent_LRG', np.float64(12.77535615672196)) ('sigma_M_LRG', np.float64(0.37427085019011513))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.59647265733722)) ('M_1_LRG', np.float64(13.715279419877236)) ('alpha_LRG', np.float64(0.9409839128074773)) ('f_sigv_LRG', np.float64(0.7759002474616035)) ('log_Mcent_LRG', np.float64(12.747129789074382)) ('sigma_M_LRG', np.float64(0.467501589033846))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.503855653432925)) ('M_1_LRG', np.float64(13.82615439546182)) ('alpha_LRG', np.float64(1.293052577740201)) ('f_sigv_LRG', np.float64(1.0611349367406642)) ('log_Mcent_LRG', np.float64(12.877369529285929)) ('sigma_M_LRG', np.float64(0.42357087275259003))
[Interation 13] chi2=1440.345631549381
[Interation 13] chi2=2662.7960507897237
[Interation 13] chi2=1509.640222622257
[Interation 13] chi2=2089.3051301977202
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.355702577745337)) ('M_1_LRG', np.float64(13.9378192160906)) ('alpha_LRG', np.float64(1.090854175622497)) ('f_sigv_LRG', np.float64(0.983534549769681)) ('log_Mcent_LRG', np.float64(12.915700686171046)) ('sigma_M_LRG', np.float64(0.4830783709078394))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.502040643353512)) ('M_1_LRG', np.float64(13.914266097390263)) ('alpha_LRG', np.float64(1.0408679779920986)) ('f_sigv_LRG', np.float64(0.9985146287531168)) ('log_Mcent_LRG', np.float64(12.8964603716723)) ('sigma_M_LRG', np.float64(0.4712602282812743))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.480065212857031)) ('M_1_LRG', np.float64(13.918597898343066)) ('alpha_LRG', np.float64(1.0268740439450383)) ('f_sigv_LRG', np.float64(0.9521411392121782)) ('log_Mcent_LRG', np.float64(12.893422966840744)) ('sigma_M_LRG', np.float64(0.4686773449391626))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.343603918695491)) ('M_1_LRG', np.float64(13.914906896763213)) ('alpha_LRG', np.float64(1.0512157246986902)) ('f_sigv_LRG', np.float64(1.016796990606149)) ('log_Mcent_LRG', np.float64(12.838493969990742)) ('sigma_M_LRG', np.float64(0.4007907223071722))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.705515519558007)) ('M_1_LRG', np.float64(13.809814396231493)) ('alpha_LRG', np.float64(0.9523480049512216)) ('f_sigv_LRG', np.float64(0.9733343976179847)) ('log_Mcent_LRG', np.float64(12.792590794658043)) ('sigma_M_LRG', np.float64(0.37496883468383047))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.506858349652012)) ('M_1_LRG', np.float64(13.921619164699619)) ('alpha_LRG', np.float64(1.0126971121248032)) ('f_sigv_LRG', np.float64(1.0046964675197032)) ('log_Mcent_LRG', np.float64(12.903055895932141)) ('sigma_M_LRG', np.float64(0.4651908287537582))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.747897804809039)) ('M_1_LRG', np.float64(13.828373719756087)) ('alpha_LRG', np.float64(0.8736130813013958)) ('f_sigv_LRG', np.float64(0.9747463819211167)) ('log_Mcent_LRG', np.float64(12.777533340133242)) ('sigma_M_LRG', np.float64(0.3558381762756341))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.591758773996105)) ('M_1_LRG', np.float64(13.85169995791671)) ('alpha_LRG', np.float64(1.0306536915496862)) ('f_sigv_LRG', np.float64(0.9283034435034473)) ('log_Mcent_LRG', np.float64(12.849731943595609)) ('sigma_M_LRG', np.float64(0.4427622717049709))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.517714564199531)) ('M_1_LRG', np.float64(13.894952811924217)) ('alpha_LRG', np.float64(1.0342317532856051)) ('f_sigv_LRG', np.float64(0.9487365928817513)) ('log_Mcent_LRG', np.float64(12.881396240421033)) ('sigma_M_LRG', np.float64(0.46196141737045204))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.417315556831003)) ('M_1_LRG', np.float64(13.869041166624301)) ('alpha_LRG', np.float64(1.0693160808886923)) ('f_sigv_LRG', np.float64(0.9879889825011217)) ('log_Mcent_LRG', np.float64(12.827004188775733)) ('sigma_M_LRG', np.float64(0.3971774591619418))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.517074854461953)) ('M_1_LRG', np.float64(13.933365963797877)) ('alpha_LRG', np.float64(0.9604450279027678)) ('f_sigv_LRG', np.float64(1.0069980801869545)) ('log_Mcent_LRG', np.float64(12.895414174008975)) ('sigma_M_LRG', np.float64(0.47317137135443565))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.492860314959259)) ('M_1_LRG', np.float64(13.870469282026287)) ('alpha_LRG', np.float64(1.0097486783140839)) ('f_sigv_LRG', np.float64(0.9525070437769068)) ('log_Mcent_LRG', np.float64(12.838256336127337)) ('sigma_M_LRG', np.float64(0.4298243433803275))
[Interation 13] chi2=858.9727017540981
[Interation 13] chi2=895.2156056473791
[Interation 13] chi2=833.4996162634918
[Interation 13] chi2=856.4164644104918
[Interation 13] chi2=842.8598046629052
[Interation 13] chi2=873.5930637860138
[Interation 13] chi2=879.2512721785027
[Interation 13] chi2=892.9746648831132
[Interation 13] chi2=832.7870427753737
[Interation 13] chi2=837.7928772414124
[Interation 13] chi2=869.0116273576508
[Interation 13] chi2=928.3658476535467
[Interation 14] ('M_0_LRG', np.float64(12.43897349519396)) ('M_1_LRG', np.float64(13.890961745586026)) ('alpha_LRG', np.float64(1.040755742848758)) ('f_sigv_LRG', np.float64(0.9770949808876488)) ('log_Mcent_LRG', np.float64(12.8421461583839)) ('sigma_M_LRG', np.float64(0.4166705304544133))
[Interation 14] ('M_0_LRG', np.float64(12.595625145962194)) ('M_1_LRG', np.float64(13.861626099624983)) ('alpha_LRG', np.float64(0.9928762010124076)) ('f_sigv_LRG', np.float64(0.9750749115773443)) ('log_Mcent_LRG', np.float64(12.835063949691026)) ('sigma_M_LRG', np.float64(0.41207081866271233))
[Interation 14] ('M_0_LRG', np.float64(12.589295459451787)) ('M_1_LRG', np.float64(13.846095604139778)) ('alpha_LRG', np.float64(0.9933618122446753)) ('f_sigv_LRG', np.float64(0.9793139196070038)) ('log_Mcent_LRG', np.float64(12.803170822955202)) ('sigma_M_LRG', np.float64(0.3816499746140516))
[Interation 14] ('M_0_LRG', np.float64(12.448060105709573)) ('M_1_LRG', np.float64(13.877705361039482)) ('alpha_LRG', np.float64(1.0512768601931846)) ('f_sigv_LRG', np.float64(0.9812791911626506)) ('log_Mcent_LRG', np.float64(12.831609699826773)) ('sigma_M_LRG', np.float64(0.40157996021333536))
[Interation 14] chi2=828.6685681544697
[Interation 14] chi2=781.7263572052113
[Interation 14] chi2=838.2981862529576
[Interation 14] chi2=880.7092551745868
[Interation 14] ('M_0_LRG', np.float64(12.478670427469666)) ('M_1_LRG', np.float64(13.894033486010002)) ('alpha_LRG', np.float64(1.022914817213714)) ('f_sigv_LRG', np.float64(0.9872428586330756)) ('log_Mcent_LRG', np.float64(12.860697128457888)) ('sigma_M_LRG', np.float64(0.43931501274931994))
[Interation 14] ('M_0_LRG', np.float64(12.411445567605462)) ('M_1_LRG', np.float64(13.917852131185596)) ('alpha_LRG', np.float64(1.0329372721677852)) ('f_sigv_LRG', np.float64(0.9859237317563669)) ('log_Mcent_LRG', np.float64(12.870802148815903)) ('sigma_M_LRG', np.float64(0.4507874896673906))
[Interation 14] ('M_0_LRG', np.float64(12.543156673977741)) ('M_1_LRG', np.float64(13.877445148282144)) ('alpha_LRG', np.float64(1.0131517012375304)) ('f_sigv_LRG', np.float64(0.962009832982739)) ('log_Mcent_LRG', np.float64(12.860087837923835)) ('sigma_M_LRG', np.float64(0.444988219415539))
[Interation 14] ('M_0_LRG', np.float64(12.510090380238076)) ('M_1_LRG', np.float64(13.906546722925128)) ('alpha_LRG', np.float64(0.9865363640003113)) ('f_sigv_LRG', np.float64(0.9885918698127406)) ('log_Mcent_LRG', np.float64(12.866456697618291)) ('sigma_M_LRG', np.float64(0.44641030796494396))
[Interation 14] ('M_0_LRG', np.float64(12.515286825851215)) ('M_1_LRG', np.float64(13.873967738698717)) ('alpha_LRG', np.float64(1.0288489013891269)) ('f_sigv_LRG', np.float64(0.9652773243928722)) ('log_Mcent_LRG', np.float64(12.847892169048187)) ('sigma_M_LRG', np.float64(0.43125106150931))
[Interation 14] ('M_0_LRG', np.float64(12.445498820392313)) ('M_1_LRG', np.float64(13.888109654840543)) ('alpha_LRG', np.float64(1.0691863208769559)) ('f_sigv_LRG', np.float64(0.9524837841984264)) ('log_Mcent_LRG', np.float64(12.874147688929618)) ('sigma_M_LRG', np.float64(0.4553704409368856))
[Interation 14] ('M_0_LRG', np.float64(12.52874782474546)) ('M_1_LRG', np.float64(13.857222811942705)) ('alpha_LRG', np.float64(1.02939045875895)) ('f_sigv_LRG', np.float64(0.9853247500520577)) ('log_Mcent_LRG', np.float64(12.822886645981459)) ('sigma_M_LRG', np.float64(0.3969507155559633))
[Interation 14] ('M_0_LRG', np.float64(12.543760060467868)) ('M_1_LRG', np.float64(13.85861324945977)) ('alpha_LRG', np.float64(1.0213705839145755)) ('f_sigv_LRG', np.float64(0.962916411134247)) ('log_Mcent_LRG', np.float64(12.834768857581818)) ('sigma_M_LRG', np.float64(0.41900312080757635))
[Interation 14] ('M_0_LRG', np.float64(12.53311056672052)) ('M_1_LRG', np.float64(13.83697769764692)) ('alpha_LRG', np.float64(1.0530347164455414)) ('f_sigv_LRG', np.float64(0.9659132216979683)) ('log_Mcent_LRG', np.float64(12.817349276695866)) ('sigma_M_LRG', np.float64(0.3946530650602661))
[Interation 14] ('M_0_LRG', np.float64(12.518572710431934)) ('M_1_LRG', np.float64(13.884421394838153)) ('alpha_LRG', np.float64(1.0206594951339463)) ('f_sigv_LRG', np.float64(0.9699711279599288)) ('log_Mcent_LRG', np.float64(12.865872796170976)) ('sigma_M_LRG', np.float64(0.4510484470340198))
[Interation 14] ('M_0_LRG', np.float64(12.486503049045481)) ('M_1_LRG', np.float64(13.853531753754964)) ('alpha_LRG', np.float64(1.075099373385032)) ('f_sigv_LRG', np.float64(0.942424851125824)) ('log_Mcent_LRG', np.float64(12.848705831182896)) ('sigma_M_LRG', np.float64(0.4399000429793139))
[Interation 14] ('M_0_LRG', np.float64(12.605380637811182)) ('M_1_LRG', np.float64(13.852259036655225)) ('alpha_LRG', np.float64(1.0021326282053769)) ('f_sigv_LRG', np.float64(0.9549094759304794)) ('log_Mcent_LRG', np.float64(12.850153829059662)) ('sigma_M_LRG', np.float64(0.44117886753990354))
[Interation 14] chi2=812.1617381587452
[Interation 14] chi2=847.1105078742246
[Interation 14] chi2=865.7618846035737
[Interation 14] chi2=857.5568523278569
[Interation 14] chi2=812.15127804446
[Interation 14] chi2=811.9587247091694
[Interation 14] chi2=844.3609571824297
[Interation 14] chi2=878.9870644880849
[Interation 14] chi2=903.4883276531405
[Interation 14] chi2=821.323933266699
[Interation 14] chi2=827.1097937162494
[Interation 14] chi2=844.5671867878826
[Interation 15] ('M_0_LRG', np.float64(12.476604180334512)) ('M_1_LRG', np.float64(13.891298214841727)) ('alpha_LRG', np.float64(1.0223496020164315)) ('f_sigv_LRG', np.float64(0.9805295398533436)) ('log_Mcent_LRG', np.float64(12.864471982086078)) ('sigma_M_LRG', np.float64(0.4443170929397777))
[Interation 15] ('M_0_LRG', np.float64(12.424334683841456)) ('M_1_LRG', np.float64(13.894300978648221)) ('alpha_LRG', np.float64(1.0519860691880718)) ('f_sigv_LRG', np.float64(0.9783107015730287)) ('log_Mcent_LRG', np.float64(12.863920461744339)) ('sigma_M_LRG', np.float64(0.4408196308762194))
[Interation 15] ('M_0_LRG', np.float64(12.44708270825615)) ('M_1_LRG', np.float64(13.887374378750108)) ('alpha_LRG', np.float64(1.052483714521182)) ('f_sigv_LRG', np.float64(0.9683500885159174)) ('log_Mcent_LRG', np.float64(12.857107217645556)) ('sigma_M_LRG', np.float64(0.4373827609284307))
[Interation 15] ('M_0_LRG', np.float64(12.433228113644006)) ('M_1_LRG', np.float64(13.885168047933412)) ('alpha_LRG', np.float64(1.0622263976536586)) ('f_sigv_LRG', np.float64(0.9682302675084806)) ('log_Mcent_LRG', np.float64(12.860954618816882)) ('sigma_M_LRG', np.float64(0.4426305452417302))
[Interation 15] chi2=806.3868631467917
[Interation 15] chi2=853.5312118546453
[Interation 15] chi2=775.9940651241856
[Interation 15] chi2=842.4098339442714
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_07.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.408198650042749)) ('M_1_LRG', np.float64(13.89415345586261)) ('alpha_LRG', np.float64(1.0690721516219652)) ('f_sigv_LRG', np.float64(0.9703308924844888)) ('log_Mcent_LRG', np.float64(12.865219926035902)) ('sigma_M_LRG', np.float64(0.44474095460685453))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3522939682006836
Start satellite assignement
Satellite assignement done 0.08002233505249023
LRG mock catalogue done 0.15296673774719238
561117 central galaxies, 94847 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.699303150177002
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_07.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:17
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:17
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:18
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:18
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:18
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:19
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:19
Load smu measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:21
Load smu measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.725 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:23
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Load rppi measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:25
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Load rppi measurements at z0.6-0.8 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:19
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:19
Load rppi measurements at z0.6-0.8 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.58028178685055)) ('M_1_LRG', np.float64(13.637976362475975)) ('alpha_LRG', np.float64(0.9830796873649525)) ('f_sigv_LRG', np.float64(0.9205557666705263)) ('log_Mcent_LRG', np.float64(12.762694492197337)) ('sigma_M_LRG', np.float64(0.44897834321442087))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.527270836904709)) ('M_1_LRG', np.float64(13.447722778480468)) ('alpha_LRG', np.float64(0.9757193720567744)) ('f_sigv_LRG', np.float64(0.9321010732351936)) ('log_Mcent_LRG', np.float64(12.716842567585324)) ('sigma_M_LRG', np.float64(0.45858879506342465))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.469730814731536)) ('M_1_LRG', np.float64(13.431452690642953)) ('alpha_LRG', np.float64(0.9969075181286801)) ('f_sigv_LRG', np.float64(0.8922762037909093)) ('log_Mcent_LRG', np.float64(12.638315646481239)) ('sigma_M_LRG', np.float64(0.46122055975115334))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.483582159663777)) ('M_1_LRG', np.float64(13.53976006758941)) ('alpha_LRG', np.float64(0.8858369035687955)) ('f_sigv_LRG', np.float64(0.8844937703318144)) ('log_Mcent_LRG', np.float64(12.856076746590713)) ('sigma_M_LRG', np.float64(0.5828737272423462))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.53727142742735)) ('M_1_LRG', np.float64(13.55207487936369)) ('alpha_LRG', np.float64(0.9760925151505917)) ('f_sigv_LRG', np.float64(1.0453814633614245)) ('log_Mcent_LRG', np.float64(12.729446831029115)) ('sigma_M_LRG', np.float64(0.4736560467893377))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.514072251566938)) ('M_1_LRG', np.float64(13.547178417305771)) ('alpha_LRG', np.float64(1.0137073898063969)) ('f_sigv_LRG', np.float64(1.0524438808096215)) ('log_Mcent_LRG', np.float64(12.687696357147864)) ('sigma_M_LRG', np.float64(0.4793326104727822))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.524076323086828)) ('M_1_LRG', np.float64(13.581023255746308)) ('alpha_LRG', np.float64(1.0710262964998445)) ('f_sigv_LRG', np.float64(1.011284898842667)) ('log_Mcent_LRG', np.float64(12.79050669580009)) ('sigma_M_LRG', np.float64(0.46204179899815584))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.518231538838918)) ('M_1_LRG', np.float64(13.643883011360062)) ('alpha_LRG', np.float64(1.02500816834061)) ('f_sigv_LRG', np.float64(0.9935831751324706)) ('log_Mcent_LRG', np.float64(12.809908379084899)) ('sigma_M_LRG', np.float64(0.5223975829474801))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.442090691518455)) ('M_1_LRG', np.float64(13.333330800074105)) ('alpha_LRG', np.float64(1.0157336715445116)) ('f_sigv_LRG', np.float64(1.0428881487465658)) ('log_Mcent_LRG', np.float64(12.716849464357729)) ('sigma_M_LRG', np.float64(0.45573102356021894))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.49547038318737)) ('M_1_LRG', np.float64(13.389939635928133)) ('alpha_LRG', np.float64(1.1272124013709377)) ('f_sigv_LRG', np.float64(0.9965474946239495)) ('log_Mcent_LRG', np.float64(12.814936355898823)) ('sigma_M_LRG', np.float64(0.554844674560728))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.603009038281112)) ('M_1_LRG', np.float64(13.531435352699441)) ('alpha_LRG', np.float64(0.8726622789713421)) ('f_sigv_LRG', np.float64(0.9392489692002001)) ('log_Mcent_LRG', np.float64(12.749300620600117)) ('sigma_M_LRG', np.float64(0.5310599253236985))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.597950463384386)) ('M_1_LRG', np.float64(13.533918507438582)) ('alpha_LRG', np.float64(0.9790211485328535)) ('f_sigv_LRG', np.float64(0.8803204833013673)) ('log_Mcent_LRG', np.float64(12.70932219794673)) ('sigma_M_LRG', np.float64(0.45311820444977635))
[Interation 15] chi2=1675.6597997780646
[Interation 15] chi2=4344.8203278539395
[Interation 15] chi2=3247.7528015970984
[Interation 15] chi2=5310.024608643582
[Interation 15] chi2=2765.680179501142
[Interation 15] chi2=3497.732473002338
[Interation 15] chi2=3905.0316855850797
[Interation 15] chi2=2106.0448511407894
[Interation 15] chi2=11597.654152671967
[Interation 15] chi2=16680.262732545143
[Interation 15] chi2=2774.198397771167
[Interation 15] chi2=2122.930764973807
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 16] ('M_0_LRG', np.float64(12.475946360716446)) ('M_1_LRG', np.float64(13.876515850262969)) ('alpha_LRG', np.float64(1.0592464026492354)) ('f_sigv_LRG', np.float64(0.9625225799990458)) ('log_Mcent_LRG', np.float64(12.83773327036121)) ('sigma_M_LRG', np.float64(0.4217291276438851))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 16] ('M_0_LRG', np.float64(12.524774183888209)) ('M_1_LRG', np.float64(13.81411695995529)) ('alpha_LRG', np.float64(1.0340862520864964)) ('f_sigv_LRG', np.float64(0.9894513416914676)) ('log_Mcent_LRG', np.float64(12.775125775214077)) ('sigma_M_LRG', np.float64(0.35790694046425364))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 16] ('M_0_LRG', np.float64(12.506056949670402)) ('M_1_LRG', np.float64(13.829646264309952)) ('alpha_LRG', np.float64(1.0607317183747602)) ('f_sigv_LRG', np.float64(0.9461481211467463)) ('log_Mcent_LRG', np.float64(12.791976880827333)) ('sigma_M_LRG', np.float64(0.37700352634578727))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 16] ('M_0_LRG', np.float64(12.516138853154999)) ('M_1_LRG', np.float64(13.853525726372448)) ('alpha_LRG', np.float64(1.0342169421310023)) ('f_sigv_LRG', np.float64(0.9710662824881842)) ('log_Mcent_LRG', np.float64(12.839991329816401)) ('sigma_M_LRG', np.float64(0.42815270841326963))
[Interation 16] chi2=831.1590164534807
[Interation 16] chi2=844.686338014987
[Interation 16] chi2=899.5228087154428
[Interation 16] chi2=866.4726412711667
[Interation 16] ('M_0_LRG', np.float64(12.385588720438042)) ('M_1_LRG', np.float64(13.882706446374947)) ('alpha_LRG', np.float64(1.1032809663179357)) ('f_sigv_LRG', np.float64(0.9610818048143484)) ('log_Mcent_LRG', np.float64(12.854615874251035)) ('sigma_M_LRG', np.float64(0.43565750824988797))
[Interation 16] ('M_0_LRG', np.float64(12.51598676615579)) ('M_1_LRG', np.float64(13.83229408641373)) ('alpha_LRG', np.float64(1.0609520872435492)) ('f_sigv_LRG', np.float64(0.9748699060866861)) ('log_Mcent_LRG', np.float64(12.8220053667935)) ('sigma_M_LRG', np.float64(0.4093635097158917))
[Interation 16] ('M_0_LRG', np.float64(12.467985830263416)) ('M_1_LRG', np.float64(13.864051405212336)) ('alpha_LRG', np.float64(1.0821924470079147)) ('f_sigv_LRG', np.float64(0.9514075900928356)) ('log_Mcent_LRG', np.float64(12.84470680030336)) ('sigma_M_LRG', np.float64(0.43549303270640644))
[Interation 16] ('M_0_LRG', np.float64(12.472581406412807)) ('M_1_LRG', np.float64(13.881646939899538)) ('alpha_LRG', np.float64(1.0697735133655333)) ('f_sigv_LRG', np.float64(0.9601819831425423)) ('log_Mcent_LRG', np.float64(12.871937806532317)) ('sigma_M_LRG', np.float64(0.46130384555610093))
[Interation 16] ('M_0_LRG', np.float64(12.471747959644453)) ('M_1_LRG', np.float64(13.893023173086712)) ('alpha_LRG', np.float64(1.0421036521553297)) ('f_sigv_LRG', np.float64(0.981757569648801)) ('log_Mcent_LRG', np.float64(12.867391880282456)) ('sigma_M_LRG', np.float64(0.44285874759988336))
[Interation 16] ('M_0_LRG', np.float64(12.372539862590866)) ('M_1_LRG', np.float64(13.893869153207751)) ('alpha_LRG', np.float64(1.1119623045918816)) ('f_sigv_LRG', np.float64(0.9642856044164505)) ('log_Mcent_LRG', np.float64(12.865130234930552)) ('sigma_M_LRG', np.float64(0.4362292707341147))
[Interation 16] ('M_0_LRG', np.float64(12.433639839861227)) ('M_1_LRG', np.float64(13.83763408740676)) ('alpha_LRG', np.float64(1.097617794644931)) ('f_sigv_LRG', np.float64(0.9631462381655066)) ('log_Mcent_LRG', np.float64(12.82523268011644)) ('sigma_M_LRG', np.float64(0.4167216282855179))
[Interation 16] ('M_0_LRG', np.float64(12.495606866094482)) ('M_1_LRG', np.float64(13.88542950677411)) ('alpha_LRG', np.float64(1.0335983879670894)) ('f_sigv_LRG', np.float64(0.984957869075852)) ('log_Mcent_LRG', np.float64(12.855070415472316)) ('sigma_M_LRG', np.float64(0.42984409304779037))
[Interation 16] ('M_0_LRG', np.float64(12.427081701429065)) ('M_1_LRG', np.float64(13.852582807329842)) ('alpha_LRG', np.float64(1.0904324004932817)) ('f_sigv_LRG', np.float64(0.9763560218664543)) ('log_Mcent_LRG', np.float64(12.831937860825036)) ('sigma_M_LRG', np.float64(0.4161432286813644))
[Interation 16] ('M_0_LRG', np.float64(12.452108633995767)) ('M_1_LRG', np.float64(13.831390794391005)) ('alpha_LRG', np.float64(1.0858551828600156)) ('f_sigv_LRG', np.float64(0.9760799266979152)) ('log_Mcent_LRG', np.float64(12.806824207116177)) ('sigma_M_LRG', np.float64(0.3896350996275716))
[Interation 16] ('M_0_LRG', np.float64(12.584463581667206)) ('M_1_LRG', np.float64(13.837108124769955)) ('alpha_LRG', np.float64(1.0253623639992329)) ('f_sigv_LRG', np.float64(0.9575919604330024)) ('log_Mcent_LRG', np.float64(12.814005194237312)) ('sigma_M_LRG', np.float64(0.3983159926002656))
[Interation 16] ('M_0_LRG', np.float64(12.44022655651774)) ('M_1_LRG', np.float64(13.86422619944145)) ('alpha_LRG', np.float64(1.0880533630037938)) ('f_sigv_LRG', np.float64(0.961329560520472)) ('log_Mcent_LRG', np.float64(12.8409146331157)) ('sigma_M_LRG', np.float64(0.42620770244116024))
[Interation 16] chi2=857.1267255911529
[Interation 16] chi2=837.1175721760541
[Interation 16] chi2=886.8546840113146
[Interation 16] chi2=785.7614669795995
[Interation 16] chi2=886.1663133702395
[Interation 16] chi2=865.2401232257535
[Interation 16] chi2=854.2975734686567
[Interation 16] chi2=871.1993451113341
[Interation 16] chi2=841.3622074724113
[Interation 16] chi2=802.1596906771991
[Interation 16] chi2=826.9885835941197
[Interation 16] chi2=841.2378287230589
[Interation 17] ('M_0_LRG', np.float64(12.42436795296891)) ('M_1_LRG', np.float64(13.8572468113486)) ('alpha_LRG', np.float64(1.0962785670194841)) ('f_sigv_LRG', np.float64(0.952826284697341)) ('log_Mcent_LRG', np.float64(12.828733815122561)) ('sigma_M_LRG', np.float64(0.41115510164861363))
[Interation 17] ('M_0_LRG', np.float64(12.424556556109174)) ('M_1_LRG', np.float64(13.853341594468692)) ('alpha_LRG', np.float64(1.1003002438142588)) ('f_sigv_LRG', np.float64(0.9559056350946216)) ('log_Mcent_LRG', np.float64(12.828769259610917)) ('sigma_M_LRG', np.float64(0.41517178884367734))
[Interation 17] ('M_0_LRG', np.float64(12.410207818319776)) ('M_1_LRG', np.float64(13.86902783765608)) ('alpha_LRG', np.float64(1.1091992088713007)) ('f_sigv_LRG', np.float64(0.9633211299874282)) ('log_Mcent_LRG', np.float64(12.848820151280513)) ('sigma_M_LRG', np.float64(0.4291531938812303))
[Interation 17] ('M_0_LRG', np.float64(12.424930676761203)) ('M_1_LRG', np.float64(13.867276958425194)) ('alpha_LRG', np.float64(1.090060341956914)) ('f_sigv_LRG', np.float64(0.9602154701416907)) ('log_Mcent_LRG', np.float64(12.844781793113173)) ('sigma_M_LRG', np.float64(0.42639552021672017))
[Interation 17] chi2=845.0303557546921
[Interation 17] chi2=858.0720680835343
[Interation 17] chi2=774.9444725183776
[Interation 17] chi2=816.9196109406693
[Interation 17] ('M_0_LRG', np.float64(12.430990914148282)) ('M_1_LRG', np.float64(13.87547826565359)) ('alpha_LRG', np.float64(1.0859860827627634)) ('f_sigv_LRG', np.float64(0.9648956832841575)) ('log_Mcent_LRG', np.float64(12.858194498325442)) ('sigma_M_LRG', np.float64(0.44216645237007346))
[Interation 17] ('M_0_LRG', np.float64(12.406098101316694)) ('M_1_LRG', np.float64(13.874316295268258)) ('alpha_LRG', np.float64(1.1013360129168694)) ('f_sigv_LRG', np.float64(0.9646930393962049)) ('log_Mcent_LRG', np.float64(12.850360809359083)) ('sigma_M_LRG', np.float64(0.4308925671798466))
[Interation 17] ('M_0_LRG', np.float64(12.436735910072152)) ('M_1_LRG', np.float64(13.866692863603872)) ('alpha_LRG', np.float64(1.0914516939952588)) ('f_sigv_LRG', np.float64(0.9628986869629385)) ('log_Mcent_LRG', np.float64(12.849719595795497)) ('sigma_M_LRG', np.float64(0.43443288617834513))
[Interation 17] ('M_0_LRG', np.float64(12.447690811133802)) ('M_1_LRG', np.float64(13.861511592344966)) ('alpha_LRG', np.float64(1.0880298949914464)) ('f_sigv_LRG', np.float64(0.965754921093264)) ('log_Mcent_LRG', np.float64(12.84448243189222)) ('sigma_M_LRG', np.float64(0.4283339327615302))
[Interation 17] ('M_0_LRG', np.float64(12.406501024131565)) ('M_1_LRG', np.float64(13.879361049476357)) ('alpha_LRG', np.float64(1.0997280853822635)) ('f_sigv_LRG', np.float64(0.9620982642166542)) ('log_Mcent_LRG', np.float64(12.860375521778803)) ('sigma_M_LRG', np.float64(0.44385667089285047))
[Interation 17] ('M_0_LRG', np.float64(12.390529470082651)) ('M_1_LRG', np.float64(13.874931874667176)) ('alpha_LRG', np.float64(1.1183304859080396)) ('f_sigv_LRG', np.float64(0.955934893390177)) ('log_Mcent_LRG', np.float64(12.860414515248472)) ('sigma_M_LRG', np.float64(0.44625458383032485))
[Interation 17] ('M_0_LRG', np.float64(12.422322839989338)) ('M_1_LRG', np.float64(13.87945396754573)) ('alpha_LRG', np.float64(1.0888782156917525)) ('f_sigv_LRG', np.float64(0.9670164175682332)) ('log_Mcent_LRG', np.float64(12.856080146937444)) ('sigma_M_LRG', np.float64(0.4376722336710957))
[Interation 17] ('M_0_LRG', np.float64(12.429039234748664)) ('M_1_LRG', np.float64(13.876839922945504)) ('alpha_LRG', np.float64(1.0885233969509305)) ('f_sigv_LRG', np.float64(0.9611186003974705)) ('log_Mcent_LRG', np.float64(12.860839162315203)) ('sigma_M_LRG', np.float64(0.44600561588288223))
[Interation 17] ('M_0_LRG', np.float64(12.443329968960295)) ('M_1_LRG', np.float64(13.873775606481852)) ('alpha_LRG', np.float64(1.0815012891700946)) ('f_sigv_LRG', np.float64(0.9631468788673423)) ('log_Mcent_LRG', np.float64(12.85213324910039)) ('sigma_M_LRG', np.float64(0.4332233652795717))
[Interation 17] ('M_0_LRG', np.float64(12.402142875047051)) ('M_1_LRG', np.float64(13.875315790908527)) ('alpha_LRG', np.float64(1.0994453155676884)) ('f_sigv_LRG', np.float64(0.9618486467834336)) ('log_Mcent_LRG', np.float64(12.851795764936163)) ('sigma_M_LRG', np.float64(0.433601951535786))
[Interation 17] ('M_0_LRG', np.float64(12.376920384492639)) ('M_1_LRG', np.float64(13.887576057631348)) ('alpha_LRG', np.float64(1.1168852494104435)) ('f_sigv_LRG', np.float64(0.9618556227260407)) ('log_Mcent_LRG', np.float64(12.869110172802483)) ('sigma_M_LRG', np.float64(0.451502769591445))
[Interation 17] ('M_0_LRG', np.float64(12.437126194980118)) ('M_1_LRG', np.float64(13.855090459524561)) ('alpha_LRG', np.float64(1.0780699614683364)) ('f_sigv_LRG', np.float64(0.9623357686863694)) ('log_Mcent_LRG', np.float64(12.82024951195807)) ('sigma_M_LRG', np.float64(0.4000855295751567))
[Interation 17] chi2=880.1371528968057
[Interation 17] chi2=737.4740178825417
[Interation 17] chi2=855.3455619475355
[Interation 17] chi2=841.4990016587711
[Interation 17] chi2=855.1627007847437
[Interation 17] chi2=773.3822549459646
[Interation 17] chi2=908.9957938910745
[Interation 17] chi2=883.0324970559385
[Interation 17] chi2=822.3559918113333
[Interation 17] chi2=859.5808203940406
[Interation 17] chi2=845.0422624503649
[Interation 17] chi2=849.6182545012979
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_08.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.430450221861278)) ('M_1_LRG', np.float64(13.888396389090696)) ('alpha_LRG', np.float64(1.0848413528999865)) ('f_sigv_LRG', np.float64(0.9608637796771143)) ('log_Mcent_LRG', np.float64(12.870623169905839)) ('sigma_M_LRG', np.float64(0.45290903458404325))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3511536121368408
Start satellite assignement
Satellite assignement done 0.07729434967041016
LRG mock catalogue done 0.15168476104736328
559884 central galaxies, 91868 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6995105743408203
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_08.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Load rppi measurements at z0.6-0.8 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Load rppi measurements at z0.6-0.8 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:22
Load rppi measurements at z0.6-0.8 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.58177887635608)) ('M_1_LRG', np.float64(13.813539204628443)) ('alpha_LRG', np.float64(1.006974645494285)) ('f_sigv_LRG', np.float64(0.8532485661970247)) ('log_Mcent_LRG', np.float64(12.764331336282856)) ('sigma_M_LRG', np.float64(0.41966923558266866))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.575455836126606)) ('M_1_LRG', np.float64(13.48562224816005)) ('alpha_LRG', np.float64(0.923592195825275)) ('f_sigv_LRG', np.float64(1.0702013147317702)) ('log_Mcent_LRG', np.float64(12.718587668501664)) ('sigma_M_LRG', np.float64(0.4309004907345814))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.361911350198923)) ('M_1_LRG', np.float64(13.444776584281815)) ('alpha_LRG', np.float64(0.9770468841268664)) ('f_sigv_LRG', np.float64(1.1135689818080734)) ('log_Mcent_LRG', np.float64(12.776070184965297)) ('sigma_M_LRG', np.float64(0.4913863419155398))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.46094148278495)) ('M_1_LRG', np.float64(13.617736027516393)) ('alpha_LRG', np.float64(0.9805792379937655)) ('f_sigv_LRG', np.float64(1.0479079557687916)) ('log_Mcent_LRG', np.float64(12.669657426209012)) ('sigma_M_LRG', np.float64(0.5062266290888126))
[Interation 18] chi2=1466.9441988788856
[Interation 18] chi2=3619.174395678997
[Interation 18] chi2=8167.0593582180245
[Interation 18] chi2=5050.439576964076
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.454340738576825)) ('M_1_LRG', np.float64(13.85871265058359)) ('alpha_LRG', np.float64(1.0317762315182726)) ('f_sigv_LRG', np.float64(1.004568775529432)) ('log_Mcent_LRG', np.float64(12.80644870912287)) ('sigma_M_LRG', np.float64(0.3793679397486017))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.533763678446153)) ('M_1_LRG', np.float64(13.933278449580953)) ('alpha_LRG', np.float64(0.9652268379459971)) ('f_sigv_LRG', np.float64(0.9773157997058854)) ('log_Mcent_LRG', np.float64(12.928972059252235)) ('sigma_M_LRG', np.float64(0.5121782644668658))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.385754851848526)) ('M_1_LRG', np.float64(13.877846703164277)) ('alpha_LRG', np.float64(1.059383349770583)) ('f_sigv_LRG', np.float64(1.0160635091333299)) ('log_Mcent_LRG', np.float64(12.811273560981984)) ('sigma_M_LRG', np.float64(0.36570462739594056))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.351600754719916)) ('M_1_LRG', np.float64(13.899395698546225)) ('alpha_LRG', np.float64(1.1375426358615768)) ('f_sigv_LRG', np.float64(0.9996208381000616)) ('log_Mcent_LRG', np.float64(12.878118258900143)) ('sigma_M_LRG', np.float64(0.44465096055636916))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.259885189804187)) ('M_1_LRG', np.float64(13.821552838165323)) ('alpha_LRG', np.float64(1.1974590761318866)) ('f_sigv_LRG', np.float64(0.9394844941461812)) ('log_Mcent_LRG', np.float64(12.78863026834573)) ('sigma_M_LRG', np.float64(0.3697471277064508))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.630537179374791)) ('M_1_LRG', np.float64(13.839779998557395)) ('alpha_LRG', np.float64(0.963619854505437)) ('f_sigv_LRG', np.float64(0.9498579411690972)) ('log_Mcent_LRG', np.float64(12.808091603521486)) ('sigma_M_LRG', np.float64(0.39821600122112955))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.44327012795449)) ('M_1_LRG', np.float64(13.901063499218031)) ('alpha_LRG', np.float64(1.0888253142029476)) ('f_sigv_LRG', np.float64(0.992643226827624)) ('log_Mcent_LRG', np.float64(12.898209284565272)) ('sigma_M_LRG', np.float64(0.4713379294657022))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.592186038761087)) ('M_1_LRG', np.float64(13.859255324082953)) ('alpha_LRG', np.float64(1.03575053023888)) ('f_sigv_LRG', np.float64(0.9580716160989552)) ('log_Mcent_LRG', np.float64(12.847059421359505)) ('sigma_M_LRG', np.float64(0.427757957526665))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.413792732822827)) ('M_1_LRG', np.float64(13.886553691578106)) ('alpha_LRG', np.float64(1.070185072846921)) ('f_sigv_LRG', np.float64(1.0062782178194887)) ('log_Mcent_LRG', np.float64(12.854035569241425)) ('sigma_M_LRG', np.float64(0.4208380333134079))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.431944399656738)) ('M_1_LRG', np.float64(13.886186241340924)) ('alpha_LRG', np.float64(1.1397774875472422)) ('f_sigv_LRG', np.float64(0.9344532326817977)) ('log_Mcent_LRG', np.float64(12.888452656540002)) ('sigma_M_LRG', np.float64(0.45242653335643235))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.463257463474262)) ('M_1_LRG', np.float64(13.862489853730418)) ('alpha_LRG', np.float64(1.0471074628110024)) ('f_sigv_LRG', np.float64(1.0101247264034805)) ('log_Mcent_LRG', np.float64(12.824043990577366)) ('sigma_M_LRG', np.float64(0.3913752308571975))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.435534023187486)) ('M_1_LRG', np.float64(13.908371319861695)) ('alpha_LRG', np.float64(1.0684308012982837)) ('f_sigv_LRG', np.float64(0.982918174578138)) ('log_Mcent_LRG', np.float64(12.87892613564829)) ('sigma_M_LRG', np.float64(0.44780226149679414))
[Interation 18] chi2=911.4467845039393
[Interation 18] chi2=873.4016259873483
[Interation 18] chi2=799.3413481686023
[Interation 18] chi2=961.3050999326209
[Interation 18] chi2=906.3749753931673
[Interation 18] chi2=843.5563683014813
[Interation 18] chi2=957.5913724823926
[Interation 18] chi2=883.5462660409693
[Interation 18] chi2=835.2682588698578
[Interation 18] chi2=849.196623659467
[Interation 18] chi2=877.6793502147539
[Interation 18] chi2=887.1221034244561
[Interation 19] ('M_0_LRG', np.float64(12.47101681388279)) ('M_1_LRG', np.float64(13.86626004851152)) ('alpha_LRG', np.float64(1.054751019047994)) ('f_sigv_LRG', np.float64(0.9701633108939115)) ('log_Mcent_LRG', np.float64(12.853299301042135)) ('sigma_M_LRG', np.float64(0.4471347514840744))
[Interation 19] ('M_0_LRG', np.float64(12.408674172721183)) ('M_1_LRG', np.float64(13.935313383624798)) ('alpha_LRG', np.float64(1.0535636580064607)) ('f_sigv_LRG', np.float64(0.9812107327320931)) ('log_Mcent_LRG', np.float64(12.907274330431047)) ('sigma_M_LRG', np.float64(0.4855244483078494))
[Interation 19] ('M_0_LRG', np.float64(12.41420835958702)) ('M_1_LRG', np.float64(13.893713775940107)) ('alpha_LRG', np.float64(1.0884586030349241)) ('f_sigv_LRG', np.float64(0.990805682373703)) ('log_Mcent_LRG', np.float64(12.886902943093899)) ('sigma_M_LRG', np.float64(0.47396508409821914))
[Interation 19] ('M_0_LRG', np.float64(12.449354905224537)) ('M_1_LRG', np.float64(13.87980018610342)) ('alpha_LRG', np.float64(1.0499661785294143)) ('f_sigv_LRG', np.float64(1.0036196258588423)) ('log_Mcent_LRG', np.float64(12.850196657827937)) ('sigma_M_LRG', np.float64(0.42609617146344686))
[Interation 19] chi2=833.4322078671519
[Interation 19] chi2=851.3657359891422
[Interation 19] chi2=864.8489617089807
[Interation 19] chi2=864.9738372813579
[Interation 19] ('M_0_LRG', np.float64(12.468062638729556)) ('M_1_LRG', np.float64(13.870807711274626)) ('alpha_LRG', np.float64(1.046987720446421)) ('f_sigv_LRG', np.float64(0.9753878512220078)) ('log_Mcent_LRG', np.float64(12.83765277114451)) ('sigma_M_LRG', np.float64(0.42130910469742194))
[Interation 19] ('M_0_LRG', np.float64(12.455785680012484)) ('M_1_LRG', np.float64(13.878883977312217)) ('alpha_LRG', np.float64(1.0685159489573686)) ('f_sigv_LRG', np.float64(0.9760067797547524)) ('log_Mcent_LRG', np.float64(12.860533403468466)) ('sigma_M_LRG', np.float64(0.44460381418848394))
[Interation 19] ('M_0_LRG', np.float64(12.498879749338544)) ('M_1_LRG', np.float64(13.852450667489608)) ('alpha_LRG', np.float64(1.0593833174492668)) ('f_sigv_LRG', np.float64(0.9619089067672772)) ('log_Mcent_LRG', np.float64(12.83604856717245)) ('sigma_M_LRG', np.float64(0.42484300637057815))
[Interation 19] ('M_0_LRG', np.float64(12.355437087636377)) ('M_1_LRG', np.float64(13.904827148733615)) ('alpha_LRG', np.float64(1.0822747935872572)) ('f_sigv_LRG', np.float64(0.9901652061602777)) ('log_Mcent_LRG', np.float64(12.872058020125635)) ('sigma_M_LRG', np.float64(0.44729163333402827))
[Interation 19] ('M_0_LRG', np.float64(12.537812943956268)) ('M_1_LRG', np.float64(13.823065835982252)) ('alpha_LRG', np.float64(1.0487589873180228)) ('f_sigv_LRG', np.float64(0.964997528574325)) ('log_Mcent_LRG', np.float64(12.799677150264822)) ('sigma_M_LRG', np.float64(0.38927150897843543))
[Interation 19] ('M_0_LRG', np.float64(12.343951002628486)) ('M_1_LRG', np.float64(13.901150217993038)) ('alpha_LRG', np.float64(1.1068067185269537)) ('f_sigv_LRG', np.float64(0.967882645582241)) ('log_Mcent_LRG', np.float64(12.880912275653678)) ('sigma_M_LRG', np.float64(0.45886442621218193))
[Interation 19] ('M_0_LRG', np.float64(12.404319190372565)) ('M_1_LRG', np.float64(13.881210760748436)) ('alpha_LRG', np.float64(1.0794548151682255)) ('f_sigv_LRG', np.float64(0.9693037544992394)) ('log_Mcent_LRG', np.float64(12.850218629334986)) ('sigma_M_LRG', np.float64(0.4313478131481409))
[Interation 19] ('M_0_LRG', np.float64(12.353449590586477)) ('M_1_LRG', np.float64(13.890307375161338)) ('alpha_LRG', np.float64(1.0793987823659854)) ('f_sigv_LRG', np.float64(1.0096443678257234)) ('log_Mcent_LRG', np.float64(12.848812690750039)) ('sigma_M_LRG', np.float64(0.4208804634595672))
[Interation 19] ('M_0_LRG', np.float64(12.326979159280457)) ('M_1_LRG', np.float64(13.908292142323122)) ('alpha_LRG', np.float64(1.0958459025317207)) ('f_sigv_LRG', np.float64(1.0002429040272496)) ('log_Mcent_LRG', np.float64(12.86076149937859)) ('sigma_M_LRG', np.float64(0.4276955384006068))
[Interation 19] ('M_0_LRG', np.float64(12.429762457966241)) ('M_1_LRG', np.float64(13.877919739430721)) ('alpha_LRG', np.float64(1.0778044182110347)) ('f_sigv_LRG', np.float64(0.9745270127327114)) ('log_Mcent_LRG', np.float64(12.855578159251548)) ('sigma_M_LRG', np.float64(0.43727047016629944))
[Interation 19] ('M_0_LRG', np.float64(12.33920084898562)) ('M_1_LRG', np.float64(13.883991453866493)) ('alpha_LRG', np.float64(1.0992556987251696)) ('f_sigv_LRG', np.float64(0.9904421974603205)) ('log_Mcent_LRG', np.float64(12.846251954698216)) ('sigma_M_LRG', np.float64(0.4216093748217878))
[Interation 19] ('M_0_LRG', np.float64(12.40118777253791)) ('M_1_LRG', np.float64(13.873625153003404)) ('alpha_LRG', np.float64(1.0858919095947697)) ('f_sigv_LRG', np.float64(0.9758957243219488)) ('log_Mcent_LRG', np.float64(12.840537921694418)) ('sigma_M_LRG', np.float64(0.41596663094153324))
[Interation 19] chi2=909.4841215626572
[Interation 19] chi2=840.7529013917864
[Interation 19] chi2=890.737766468917
[Interation 19] chi2=841.4476409960716
[Interation 19] chi2=789.2922600745377
[Interation 19] chi2=823.1793867531361
[Interation 19] chi2=905.3768626094039
[Interation 19] chi2=776.4964216837792
[Interation 19] chi2=873.9497634256401
[Interation 19] chi2=839.3558987871822
[Interation 19] chi2=854.3809738274708
[Interation 19] chi2=804.0060554791394
[Interation 20] ('M_0_LRG', np.float64(12.344425465381413)) ('M_1_LRG', np.float64(13.893039116319663)) ('alpha_LRG', np.float64(1.099946828039677)) ('f_sigv_LRG', np.float64(0.9788395684667981)) ('log_Mcent_LRG', np.float64(12.865139390759103)) ('sigma_M_LRG', np.float64(0.4453647987282801))
[Interation 20] ('M_0_LRG', np.float64(12.454704258192695)) ('M_1_LRG', np.float64(13.872255462832106)) ('alpha_LRG', np.float64(1.0715119919975182)) ('f_sigv_LRG', np.float64(0.9686710657002959)) ('log_Mcent_LRG', np.float64(12.854715634283682)) ('sigma_M_LRG', np.float64(0.4393013954062206))
[Interation 20] ('M_0_LRG', np.float64(12.436342736531762)) ('M_1_LRG', np.float64(13.881256917883467)) ('alpha_LRG', np.float64(1.0707037736604303)) ('f_sigv_LRG', np.float64(0.9827340622563275)) ('log_Mcent_LRG', np.float64(12.86378303681873)) ('sigma_M_LRG', np.float64(0.44888353444109774))
[Interation 20] ('M_0_LRG', np.float64(12.448403551189136)) ('M_1_LRG', np.float64(13.866535972865837)) ('alpha_LRG', np.float64(1.0724092033673736)) ('f_sigv_LRG', np.float64(0.9771551368126715)) ('log_Mcent_LRG', np.float64(12.83873315082148)) ('sigma_M_LRG', np.float64(0.42159429933676557))
[Interation 20] chi2=793.8709323042276
[Interation 20] chi2=857.8627552310512
[Interation 20] chi2=835.660445856456
[Interation 20] chi2=844.6467013961012
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_09.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.386593857373901)) ('M_1_LRG', np.float64(13.88638621366795)) ('alpha_LRG', np.float64(1.0951355204272963)) ('f_sigv_LRG', np.float64(0.9812272842199247)) ('log_Mcent_LRG', np.float64(12.867340280552957)) ('sigma_M_LRG', np.float64(0.4514951366988646))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3472282886505127
Start satellite assignement
Satellite assignement done 0.07918214797973633
LRG mock catalogue done 0.15371394157409668
563738 central galaxies, 94729 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6786484718322754
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_09.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:21
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Load rppi measurements at z0.6-0.8 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:21
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.584220027053826)) ('M_1_LRG', np.float64(13.571659254398137)) ('alpha_LRG', np.float64(1.0846296484374542)) ('f_sigv_LRG', np.float64(1.0404291571617343)) ('log_Mcent_LRG', np.float64(12.683560660807666)) ('sigma_M_LRG', np.float64(0.3335926944795508))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.628594382463833)) ('M_1_LRG', np.float64(13.865273645078894)) ('alpha_LRG', np.float64(0.9663896806746957)) ('f_sigv_LRG', np.float64(1.0184961718310366)) ('log_Mcent_LRG', np.float64(12.721160781621052)) ('sigma_M_LRG', np.float64(0.3449764655339609))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.748014796970644)) ('M_1_LRG', np.float64(13.807607933004649)) ('alpha_LRG', np.float64(0.9922116426937245)) ('f_sigv_LRG', np.float64(1.0057467992172255)) ('log_Mcent_LRG', np.float64(12.778719152102118)) ('sigma_M_LRG', np.float64(0.4582557532548106))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.4774838185172)) ('M_1_LRG', np.float64(12.953930350828152)) ('alpha_LRG', np.float64(0.987286702160243)) ('f_sigv_LRG', np.float64(1.020235200929185)) ('log_Mcent_LRG', np.float64(12.680764407325437)) ('sigma_M_LRG', np.float64(0.7240793958124295))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.518017879401798)) ('M_1_LRG', np.float64(13.50776337723765)) ('alpha_LRG', np.float64(1.1122166965992972)) ('f_sigv_LRG', np.float64(0.8335188766693713)) ('log_Mcent_LRG', np.float64(12.659987792381306)) ('sigma_M_LRG', np.float64(0.4857248550475941))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.896962808753452)) ('M_1_LRG', np.float64(13.116696550919917)) ('alpha_LRG', np.float64(0.9884288740045709)) ('f_sigv_LRG', np.float64(0.882913147603451)) ('log_Mcent_LRG', np.float64(12.641437012256153)) ('sigma_M_LRG', np.float64(0.5817209448754648))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.478042393816656)) ('M_1_LRG', np.float64(13.676673968068856)) ('alpha_LRG', np.float64(0.9216774452583574)) ('f_sigv_LRG', np.float64(1.1667982000031676)) ('log_Mcent_LRG', np.float64(12.757861007972442)) ('sigma_M_LRG', np.float64(0.3827733835090741))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.639223924328013)) ('M_1_LRG', np.float64(13.496738108785623)) ('alpha_LRG', np.float64(1.0117172887492516)) ('f_sigv_LRG', np.float64(1.0048994784999918)) ('log_Mcent_LRG', np.float64(12.795965924894048)) ('sigma_M_LRG', np.float64(0.5093405258514567))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.639970611714942)) ('M_1_LRG', np.float64(13.626893662252707)) ('alpha_LRG', np.float64(0.9026533511258299)) ('f_sigv_LRG', np.float64(1.0858881141331842)) ('log_Mcent_LRG', np.float64(12.584993369636281)) ('sigma_M_LRG', np.float64(0.23759589921913388))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.597281706761922)) ('M_1_LRG', np.float64(13.450757249213131)) ('alpha_LRG', np.float64(1.1909584381693432)) ('f_sigv_LRG', np.float64(0.9777539317743242)) ('log_Mcent_LRG', np.float64(12.732581201742294)) ('sigma_M_LRG', np.float64(0.6080181895386079))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.676474780284627)) ('M_1_LRG', np.float64(13.778321795660728)) ('alpha_LRG', np.float64(0.7965015049344971)) ('f_sigv_LRG', np.float64(0.7515981895603752)) ('log_Mcent_LRG', np.float64(12.810243176256575)) ('sigma_M_LRG', np.float64(0.3537287909852024))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.487773911726581)) ('M_1_LRG', np.float64(13.548665092965555)) ('alpha_LRG', np.float64(0.9122027966845183)) ('f_sigv_LRG', np.float64(1.032699441531435)) ('log_Mcent_LRG', np.float64(12.642422225558112)) ('sigma_M_LRG', np.float64(0.3649385875209341))
[Interation 20] chi2=2165.3388104396313
[Interation 20] chi2=2299.9175767396264
[Interation 20] chi2=2892.9707316992462
[Interation 20] chi2=17900.52646374378
[Interation 20] chi2=2913.0580261116334
[Interation 20] chi2=2550.35665949135
[Interation 20] chi2=9903.564896253341
[Interation 20] chi2=5054.391307676039
[Interation 20] chi2=2534.1531484464085
[Interation 20] chi2=6882.380780598447
[Interation 20] chi2=9398.048424162258
[Interation 20] chi2=2323.211171575626
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 21] ('M_0_LRG', np.float64(12.468511829977446)) ('M_1_LRG', np.float64(13.883306128074716)) ('alpha_LRG', np.float64(0.9909582603178132)) ('f_sigv_LRG', np.float64(1.046348263659168)) ('log_Mcent_LRG', np.float64(12.84593139762822)) ('sigma_M_LRG', np.float64(0.43625232962412275))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 21] ('M_0_LRG', np.float64(12.673277377288887)) ('M_1_LRG', np.float64(13.732022429709188)) ('alpha_LRG', np.float64(0.9958569263328716)) ('f_sigv_LRG', np.float64(0.9432886488117495)) ('log_Mcent_LRG', np.float64(12.680177501539637)) ('sigma_M_LRG', np.float64(0.24056511965676014))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 21] ('M_0_LRG', np.float64(12.552870968925303)) ('M_1_LRG', np.float64(13.749827280438035)) ('alpha_LRG', np.float64(1.103692521883062)) ('f_sigv_LRG', np.float64(0.9469339936456082)) ('log_Mcent_LRG', np.float64(12.753462170484585)) ('sigma_M_LRG', np.float64(0.3301439131432439))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 21] ('M_0_LRG', np.float64(12.526576346974402)) ('M_1_LRG', np.float64(13.892265845758073)) ('alpha_LRG', np.float64(1.0449030103012382)) ('f_sigv_LRG', np.float64(0.9624773276359894)) ('log_Mcent_LRG', np.float64(12.90593412219677)) ('sigma_M_LRG', np.float64(0.512237981301207))
[Interation 21] chi2=935.1568144068442
[Interation 21] chi2=993.4435524810763
[Interation 21] chi2=872.5682093542745
[Interation 21] chi2=905.0236506084362
[Interation 21] ('M_0_LRG', np.float64(12.600526807068517)) ('M_1_LRG', np.float64(13.883140073195126)) ('alpha_LRG', np.float64(1.0053330449744813)) ('f_sigv_LRG', np.float64(0.9581383408303977)) ('log_Mcent_LRG', np.float64(12.888064222177409)) ('sigma_M_LRG', np.float64(0.47843390463234076))
[Interation 21] ('M_0_LRG', np.float64(12.642335987671586)) ('M_1_LRG', np.float64(13.85543794417727)) ('alpha_LRG', np.float64(0.9876122263321379)) ('f_sigv_LRG', np.float64(0.965778131108889)) ('log_Mcent_LRG', np.float64(12.839049274819335)) ('sigma_M_LRG', np.float64(0.41412366350112684))
[Interation 21] ('M_0_LRG', np.float64(12.584194573775333)) ('M_1_LRG', np.float64(13.857422401987915)) ('alpha_LRG', np.float64(1.0214254297368337)) ('f_sigv_LRG', np.float64(0.9612492522706063)) ('log_Mcent_LRG', np.float64(12.844949784828547)) ('sigma_M_LRG', np.float64(0.42314946519565727))
[Interation 21] ('M_0_LRG', np.float64(12.656232787177318)) ('M_1_LRG', np.float64(13.798214819558684)) ('alpha_LRG', np.float64(1.0033448181027151)) ('f_sigv_LRG', np.float64(0.9568643744985291)) ('log_Mcent_LRG', np.float64(12.781083287715248)) ('sigma_M_LRG', np.float64(0.3594164163636993))
[Interation 21] ('M_0_LRG', np.float64(12.611306724185726)) ('M_1_LRG', np.float64(13.822033236910684)) ('alpha_LRG', np.float64(0.9888319038798081)) ('f_sigv_LRG', np.float64(0.966941563856881)) ('log_Mcent_LRG', np.float64(12.809946450564661)) ('sigma_M_LRG', np.float64(0.3998933316223632))
[Interation 21] ('M_0_LRG', np.float64(12.576323472575769)) ('M_1_LRG', np.float64(13.858025788050705)) ('alpha_LRG', np.float64(0.9947239237990353)) ('f_sigv_LRG', np.float64(0.9678666422560197)) ('log_Mcent_LRG', np.float64(12.830791084701948)) ('sigma_M_LRG', np.float64(0.4170252554524708))
[Interation 21] ('M_0_LRG', np.float64(12.626615935117943)) ('M_1_LRG', np.float64(13.851394979791392)) ('alpha_LRG', np.float64(1.0031437356027733)) ('f_sigv_LRG', np.float64(0.9669604340041941)) ('log_Mcent_LRG', np.float64(12.842735411358928)) ('sigma_M_LRG', np.float64(0.42592564767312846))
[Interation 21] ('M_0_LRG', np.float64(12.64335554105171)) ('M_1_LRG', np.float64(13.852538369833072)) ('alpha_LRG', np.float64(0.9917197414421126)) ('f_sigv_LRG', np.float64(0.9441895416316239)) ('log_Mcent_LRG', np.float64(12.860042184762179)) ('sigma_M_LRG', np.float64(0.4535973296797022))
[Interation 21] ('M_0_LRG', np.float64(12.597139544145723)) ('M_1_LRG', np.float64(13.863470396827918)) ('alpha_LRG', np.float64(0.9997029365148795)) ('f_sigv_LRG', np.float64(0.9691905504894068)) ('log_Mcent_LRG', np.float64(12.842861290658233)) ('sigma_M_LRG', np.float64(0.4260323985302137))
[Interation 21] ('M_0_LRG', np.float64(12.548665999316391)) ('M_1_LRG', np.float64(13.85916277765636)) ('alpha_LRG', np.float64(1.055536931005579)) ('f_sigv_LRG', np.float64(0.9593072882891794)) ('log_Mcent_LRG', np.float64(12.85641687732301)) ('sigma_M_LRG', np.float64(0.439942494844245))
[Interation 21] ('M_0_LRG', np.float64(12.588618726990035)) ('M_1_LRG', np.float64(13.829609580702552)) ('alpha_LRG', np.float64(1.0090265818134176)) ('f_sigv_LRG', np.float64(0.9578136339011122)) ('log_Mcent_LRG', np.float64(12.805447850016337)) ('sigma_M_LRG', np.float64(0.39448807753663717))
[Interation 21] ('M_0_LRG', np.float64(12.583318794492396)) ('M_1_LRG', np.float64(13.857131392176022)) ('alpha_LRG', np.float64(1.0224127901124105)) ('f_sigv_LRG', np.float64(0.9735626496557851)) ('log_Mcent_LRG', np.float64(12.842607557096265)) ('sigma_M_LRG', np.float64(0.42618308371729613))
[Interation 21] chi2=782.3974737635419
[Interation 21] chi2=835.9263294463971
[Interation 21] chi2=823.0164201474967
[Interation 21] chi2=859.1133733624328
[Interation 21] chi2=857.9829351931809
[Interation 21] chi2=823.7386745734381
[Interation 21] chi2=862.1997483634676
[Interation 21] chi2=808.9632255441537
[Interation 21] chi2=880.1714302754789
[Interation 21] chi2=825.2324671060178
[Interation 21] chi2=773.1558162129852
[Interation 21] chi2=933.508070625145
[Interation 22] ('M_0_LRG', np.float64(12.57999045540037)) ('M_1_LRG', np.float64(13.837723378661481)) ('alpha_LRG', np.float64(1.0142125678958054)) ('f_sigv_LRG', np.float64(0.9717394708125329)) ('log_Mcent_LRG', np.float64(12.81891647763096)) ('sigma_M_LRG', np.float64(0.3996506205537189))
[Interation 22] ('M_0_LRG', np.float64(12.526807220315256)) ('M_1_LRG', np.float64(13.898011819074528)) ('alpha_LRG', np.float64(1.0364404747952978)) ('f_sigv_LRG', np.float64(0.9631402022563219)) ('log_Mcent_LRG', np.float64(12.880388082266473)) ('sigma_M_LRG', np.float64(0.463476851715851))
[Interation 22] ('M_0_LRG', np.float64(12.614648561034814)) ('M_1_LRG', np.float64(13.848647821522297)) ('alpha_LRG', np.float64(1.002486442079369)) ('f_sigv_LRG', np.float64(0.9635254668374251)) ('log_Mcent_LRG', np.float64(12.842265265598078)) ('sigma_M_LRG', np.float64(0.42977007842132986))
[Interation 22] ('M_0_LRG', np.float64(12.612426699697556)) ('M_1_LRG', np.float64(13.851759809525722)) ('alpha_LRG', np.float64(0.989414642363339)) ('f_sigv_LRG', np.float64(0.9637262069231836)) ('log_Mcent_LRG', np.float64(12.832624079891595)) ('sigma_M_LRG', np.float64(0.41883199638388785))
[Interation 22] chi2=784.5539242964978
[Interation 22] chi2=850.0372726368986
[Interation 22] chi2=797.3166294787277
[Interation 22] chi2=877.257116083288
[Interation 22] ('M_0_LRG', np.float64(12.596435962613285)) ('M_1_LRG', np.float64(13.84131334957448)) ('alpha_LRG', np.float64(1.0133180987761)) ('f_sigv_LRG', np.float64(0.95246002904989)) ('log_Mcent_LRG', np.float64(12.835919160624861)) ('sigma_M_LRG', np.float64(0.4281558585976566))
[Interation 22] ('M_0_LRG', np.float64(12.600616789162046)) ('M_1_LRG', np.float64(13.837213373412254)) ('alpha_LRG', np.float64(1.0038499863270047)) ('f_sigv_LRG', np.float64(0.9704874375575331)) ('log_Mcent_LRG', np.float64(12.816617458447467)) ('sigma_M_LRG', np.float64(0.39827487422675195))
[Interation 22] ('M_0_LRG', np.float64(12.607009834969011)) ('M_1_LRG', np.float64(13.848866908043481)) ('alpha_LRG', np.float64(0.997832446196672)) ('f_sigv_LRG', np.float64(0.9712410453393713)) ('log_Mcent_LRG', np.float64(12.825674939807962)) ('sigma_M_LRG', np.float64(0.4059698700852335))
[Interation 22] ('M_0_LRG', np.float64(12.618411773591047)) ('M_1_LRG', np.float64(13.843822176552745)) ('alpha_LRG', np.float64(0.9935532481734308)) ('f_sigv_LRG', np.float64(0.9601189194543569)) ('log_Mcent_LRG', np.float64(12.828766537865562)) ('sigma_M_LRG', np.float64(0.4167448894589182))
[Interation 22] ('M_0_LRG', np.float64(12.604515891275623)) ('M_1_LRG', np.float64(13.855181258329512)) ('alpha_LRG', np.float64(1.0044276286756448)) ('f_sigv_LRG', np.float64(0.9642699736042032)) ('log_Mcent_LRG', np.float64(12.844590574037207)) ('sigma_M_LRG', np.float64(0.42839827530362506))
[Interation 22] ('M_0_LRG', np.float64(12.602637217627194)) ('M_1_LRG', np.float64(13.85414407131202)) ('alpha_LRG', np.float64(1.0115112338857641)) ('f_sigv_LRG', np.float64(0.9542160933753577)) ('log_Mcent_LRG', np.float64(12.843033738524312)) ('sigma_M_LRG', np.float64(0.43046367453330187))
[Interation 22] ('M_0_LRG', np.float64(12.625444245086632)) ('M_1_LRG', np.float64(13.808081408470514)) ('alpha_LRG', np.float64(0.9875554481056887)) ('f_sigv_LRG', np.float64(0.9726639077048215)) ('log_Mcent_LRG', np.float64(12.775329353301977)) ('sigma_M_LRG', np.float64(0.35770718919965616))
[Interation 22] ('M_0_LRG', np.float64(12.61582653516824)) ('M_1_LRG', np.float64(13.829465166072987)) ('alpha_LRG', np.float64(0.9924075567100552)) ('f_sigv_LRG', np.float64(0.9758377966624759)) ('log_Mcent_LRG', np.float64(12.804112394502805)) ('sigma_M_LRG', np.float64(0.38449737776913984))
[Interation 22] ('M_0_LRG', np.float64(12.601060162063332)) ('M_1_LRG', np.float64(13.82424496141465)) ('alpha_LRG', np.float64(0.9994276740883584)) ('f_sigv_LRG', np.float64(0.9572125083057973)) ('log_Mcent_LRG', np.float64(12.805377484102053)) ('sigma_M_LRG', np.float64(0.39640786750825474))
[Interation 22] ('M_0_LRG', np.float64(12.621064813245612)) ('M_1_LRG', np.float64(13.81814783106772)) ('alpha_LRG', np.float64(0.9996163762719984)) ('f_sigv_LRG', np.float64(0.9513100791528528)) ('log_Mcent_LRG', np.float64(12.801289009835221)) ('sigma_M_LRG', np.float64(0.39371113879650066))
[Interation 22] ('M_0_LRG', np.float64(12.596729888828396)) ('M_1_LRG', np.float64(13.855423236972198)) ('alpha_LRG', np.float64(0.9998505389828317)) ('f_sigv_LRG', np.float64(0.9642718590700017)) ('log_Mcent_LRG', np.float64(12.834290302640177)) ('sigma_M_LRG', np.float64(0.41781007732233244))
[Interation 22] ('M_0_LRG', np.float64(12.618441955494431)) ('M_1_LRG', np.float64(13.84273725572174)) ('alpha_LRG', np.float64(0.9977545832804418)) ('f_sigv_LRG', np.float64(0.9585144782211674)) ('log_Mcent_LRG', np.float64(12.831582126211114)) ('sigma_M_LRG', np.float64(0.4202603777180093))
[Interation 22] chi2=761.3250043726888
[Interation 22] chi2=794.7036103499707
[Interation 22] chi2=781.2332788266143
[Interation 22] chi2=880.5714897898771
[Interation 22] chi2=785.0469891820738
[Interation 22] chi2=767.2441770380283
[Interation 22] chi2=786.898195032761
[Interation 22] chi2=791.2364438111533
[Interation 22] chi2=762.3582028170739
[Interation 22] chi2=828.163142700968
[Interation 22] chi2=714.3465648601273
[Interation 22] chi2=829.5338711768482
[Interation 23] ('M_0_LRG', np.float64(12.63094364384871)) ('M_1_LRG', np.float64(13.8342910850691)) ('alpha_LRG', np.float64(0.9856505384685568)) ('f_sigv_LRG', np.float64(0.9712106195988747)) ('log_Mcent_LRG', np.float64(12.807141690858517)) ('sigma_M_LRG', np.float64(0.38701309961507047))
[Interation 23] ('M_0_LRG', np.float64(12.575468970379008)) ('M_1_LRG', np.float64(13.813089065853212)) ('alpha_LRG', np.float64(1.0196249665221524)) ('f_sigv_LRG', np.float64(0.9654499740953307)) ('log_Mcent_LRG', np.float64(12.788894824045178)) ('sigma_M_LRG', np.float64(0.3768498682675262))
[Interation 23] ('M_0_LRG', np.float64(12.592044162904179)) ('M_1_LRG', np.float64(13.839589509450274)) ('alpha_LRG', np.float64(1.0125069214077174)) ('f_sigv_LRG', np.float64(0.9596955419061339)) ('log_Mcent_LRG', np.float64(12.82473036957313)) ('sigma_M_LRG', np.float64(0.4119583625906613))
[Interation 23] ('M_0_LRG', np.float64(12.607718445683767)) ('M_1_LRG', np.float64(13.86017373841023)) ('alpha_LRG', np.float64(1.0049032729117116)) ('f_sigv_LRG', np.float64(0.9537601263392526)) ('log_Mcent_LRG', np.float64(12.852860536890988)) ('sigma_M_LRG', np.float64(0.4429850403210499))
[Interation 23] chi2=824.4900689550976
[Interation 23] chi2=801.7444481310664
[Interation 23] chi2=822.4972560548844
[Interation 23] chi2=881.8964734154549
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_10.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.597304160591358)) ('M_1_LRG', np.float64(13.853776914092201)) ('alpha_LRG', np.float64(1.0048082646617853)) ('f_sigv_LRG', np.float64(0.9635637953201809)) ('log_Mcent_LRG', np.float64(12.838915888572327)) ('sigma_M_LRG', np.float64(0.4250827339034187))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3290221691131592
Start satellite assignement
Satellite assignement done 0.07788681983947754
LRG mock catalogue done 0.166978120803833
584810 central galaxies, 93315 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.7276768684387207
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_10.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:25
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:25
Load rppi measurements at z0.6-0.8 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:25
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:25
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Load rppi measurements at z0.6-0.8 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:20
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.566758438813856)) ('M_1_LRG', np.float64(13.833222760941108)) ('alpha_LRG', np.float64(1.0177245111896762)) ('f_sigv_LRG', np.float64(0.9718313813590707)) ('log_Mcent_LRG', np.float64(12.803191896745364)) ('sigma_M_LRG', np.float64(0.3806767506340172))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.518539285932778)) ('M_1_LRG', np.float64(13.865417825544247)) ('alpha_LRG', np.float64(1.022437954134967)) ('f_sigv_LRG', np.float64(0.9746389574482269)) ('log_Mcent_LRG', np.float64(12.836662198804737)) ('sigma_M_LRG', np.float64(0.4151094031470216))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.52372174158029)) ('M_1_LRG', np.float64(13.887226791519288)) ('alpha_LRG', np.float64(0.9958871840422068)) ('f_sigv_LRG', np.float64(0.9807547468884649)) ('log_Mcent_LRG', np.float64(12.844342078188152)) ('sigma_M_LRG', np.float64(0.42078736362713576))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.55404179415549)) ('M_1_LRG', np.float64(13.889659780410568)) ('alpha_LRG', np.float64(0.9973323702534664)) ('f_sigv_LRG', np.float64(1.0079322569838518)) ('log_Mcent_LRG', np.float64(12.872932756452256)) ('sigma_M_LRG', np.float64(0.4558435252345676))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.583235632257294)) ('M_1_LRG', np.float64(13.844056593046535)) ('alpha_LRG', np.float64(0.9464471942112436)) ('f_sigv_LRG', np.float64(0.9966769406041848)) ('log_Mcent_LRG', np.float64(12.781619340438594)) ('sigma_M_LRG', np.float64(0.3557473294868776))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.50275868003585)) ('M_1_LRG', np.float64(13.873656709992307)) ('alpha_LRG', np.float64(1.034435943928502)) ('f_sigv_LRG', np.float64(0.9807774541091205)) ('log_Mcent_LRG', np.float64(12.845036677998456)) ('sigma_M_LRG', np.float64(0.4315139946841718))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.500571648721813)) ('M_1_LRG', np.float64(13.827112356095506)) ('alpha_LRG', np.float64(1.088828580874123)) ('f_sigv_LRG', np.float64(0.9369413938893774)) ('log_Mcent_LRG', np.float64(12.814134228310154)) ('sigma_M_LRG', np.float64(0.4043036186781549))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.503673595781875)) ('M_1_LRG', np.float64(13.834501129875317)) ('alpha_LRG', np.float64(1.0237229457358452)) ('f_sigv_LRG', np.float64(0.9899505117186858)) ('log_Mcent_LRG', np.float64(12.773911982610507)) ('sigma_M_LRG', np.float64(0.3369310098805016))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.549115706258544)) ('M_1_LRG', np.float64(13.866125462358974)) ('alpha_LRG', np.float64(0.9990806665074395)) ('f_sigv_LRG', np.float64(0.9715387288593661)) ('log_Mcent_LRG', np.float64(12.846240658656924)) ('sigma_M_LRG', np.float64(0.4335815511079062))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.492496843904483)) ('M_1_LRG', np.float64(13.852564281707842)) ('alpha_LRG', np.float64(1.0361607455669035)) ('f_sigv_LRG', np.float64(0.9866932987047442)) ('log_Mcent_LRG', np.float64(12.812982818408585)) ('sigma_M_LRG', np.float64(0.38267201901977654))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.601017839744753)) ('M_1_LRG', np.float64(13.828492805431276)) ('alpha_LRG', np.float64(1.021896382913192)) ('f_sigv_LRG', np.float64(0.9764633646377724)) ('log_Mcent_LRG', np.float64(12.820597901623366)) ('sigma_M_LRG', np.float64(0.40491631457069693))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.387911434675495)) ('M_1_LRG', np.float64(13.820208449729144)) ('alpha_LRG', np.float64(1.1854330237008142)) ('f_sigv_LRG', np.float64(0.9603519142021428)) ('log_Mcent_LRG', np.float64(12.805227281982814)) ('sigma_M_LRG', np.float64(0.3848657298808071))
[Interation 23] chi2=795.9057144448058
[Interation 23] chi2=865.2687540608068
[Interation 23] chi2=832.8497861117644
[Interation 23] chi2=838.3608161953271
[Interation 23] chi2=866.5941328545248
[Interation 23] chi2=824.1330528855873
[Interation 23] chi2=815.7312276782784
[Interation 23] chi2=913.3394968336389
[Interation 23] chi2=781.6987438937585
[Interation 23] chi2=854.2229180131226
[Interation 23] chi2=774.6277185256448
[Interation 23] chi2=967.4499122953482
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 24] ('M_0_LRG', np.float64(12.590636398979374)) ('M_1_LRG', np.float64(13.828268682889226)) ('alpha_LRG', np.float64(1.0268074692298996)) ('f_sigv_LRG', np.float64(0.963361768927901)) ('log_Mcent_LRG', np.float64(12.793974457469222)) ('sigma_M_LRG', np.float64(0.37260200882353656))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 24] ('M_0_LRG', np.float64(12.56377121111246)) ('M_1_LRG', np.float64(13.859636680095441)) ('alpha_LRG', np.float64(1.0162569867978342)) ('f_sigv_LRG', np.float64(0.975617037046474)) ('log_Mcent_LRG', np.float64(12.850946532882372)) ('sigma_M_LRG', np.float64(0.43645846193854787))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 24] ('M_0_LRG', np.float64(12.48723747552045)) ('M_1_LRG', np.float64(13.87805100377713)) ('alpha_LRG', np.float64(1.0557954003263748)) ('f_sigv_LRG', np.float64(0.966820903940491)) ('log_Mcent_LRG', np.float64(12.853733591550101)) ('sigma_M_LRG', np.float64(0.42782967154568974))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 24] ('M_0_LRG', np.float64(12.521131901797924)) ('M_1_LRG', np.float64(13.848944742891659)) ('alpha_LRG', np.float64(1.014771083725261)) ('f_sigv_LRG', np.float64(0.960642079807933)) ('log_Mcent_LRG', np.float64(12.831087967820276)) ('sigma_M_LRG', np.float64(0.43052449898950373))
[Interation 24] chi2=959.0517589466202
[Interation 24] chi2=823.2638999804049
[Interation 24] chi2=883.5447086522535
[Interation 24] chi2=838.1749255603563
[Interation 24] ('M_0_LRG', np.float64(12.449749612710844)) ('M_1_LRG', np.float64(13.87743461373241)) ('alpha_LRG', np.float64(1.0742297399109122)) ('f_sigv_LRG', np.float64(0.961949920256345)) ('log_Mcent_LRG', np.float64(12.857682584169643)) ('sigma_M_LRG', np.float64(0.43676259839072107))
[Interation 24] ('M_0_LRG', np.float64(12.468305592941407)) ('M_1_LRG', np.float64(13.89440702896285)) ('alpha_LRG', np.float64(1.0593437481127346)) ('f_sigv_LRG', np.float64(0.9684254879711841)) ('log_Mcent_LRG', np.float64(12.883005609808889)) ('sigma_M_LRG', np.float64(0.4606103368866468))
[Interation 24] ('M_0_LRG', np.float64(12.43276085940701)) ('M_1_LRG', np.float64(13.889959497480914)) ('alpha_LRG', np.float64(1.0760524410581191)) ('f_sigv_LRG', np.float64(0.9791705289476772)) ('log_Mcent_LRG', np.float64(12.869887822243419)) ('sigma_M_LRG', np.float64(0.4470708718932138))
[Interation 24] ('M_0_LRG', np.float64(12.394920662790895)) ('M_1_LRG', np.float64(13.89852735484712)) ('alpha_LRG', np.float64(1.0933463697861554)) ('f_sigv_LRG', np.float64(0.976157098309145)) ('log_Mcent_LRG', np.float64(12.898259369952656)) ('sigma_M_LRG', np.float64(0.47813740059274445))
[Interation 24] ('M_0_LRG', np.float64(12.448500848451351)) ('M_1_LRG', np.float64(13.894853270526909)) ('alpha_LRG', np.float64(1.068783496961046)) ('f_sigv_LRG', np.float64(0.9686326541005139)) ('log_Mcent_LRG', np.float64(12.881940617377843)) ('sigma_M_LRG', np.float64(0.461193477210601))
[Interation 24] ('M_0_LRG', np.float64(12.494565674269653)) ('M_1_LRG', np.float64(13.874230745408388)) ('alpha_LRG', np.float64(1.0565999778900428)) ('f_sigv_LRG', np.float64(0.961855776803326)) ('log_Mcent_LRG', np.float64(12.86415784038189)) ('sigma_M_LRG', np.float64(0.44848338818758743))
[Interation 24] ('M_0_LRG', np.float64(12.441284554926137)) ('M_1_LRG', np.float64(13.872138954582866)) ('alpha_LRG', np.float64(1.0788613773387672)) ('f_sigv_LRG', np.float64(0.9685159861412672)) ('log_Mcent_LRG', np.float64(12.858763032801763)) ('sigma_M_LRG', np.float64(0.44142003610429986))
[Interation 24] ('M_0_LRG', np.float64(12.430899066969097)) ('M_1_LRG', np.float64(13.885555377997862)) ('alpha_LRG', np.float64(1.0855937321448066)) ('f_sigv_LRG', np.float64(0.9703158695700336)) ('log_Mcent_LRG', np.float64(12.865034252350137)) ('sigma_M_LRG', np.float64(0.4436118270872933))
[Interation 24] ('M_0_LRG', np.float64(12.533902467331714)) ('M_1_LRG', np.float64(13.885560517318655)) ('alpha_LRG', np.float64(1.0215335824434955)) ('f_sigv_LRG', np.float64(0.9765985192382625)) ('log_Mcent_LRG', np.float64(12.866547525464537)) ('sigma_M_LRG', np.float64(0.4471045953913226))
[Interation 24] ('M_0_LRG', np.float64(12.54371556349549)) ('M_1_LRG', np.float64(13.857343713521242)) ('alpha_LRG', np.float64(1.0216621297209292)) ('f_sigv_LRG', np.float64(0.9713010981321786)) ('log_Mcent_LRG', np.float64(12.836001446644756)) ('sigma_M_LRG', np.float64(0.42075370550744046))
[Interation 24] ('M_0_LRG', np.float64(12.47352773328449)) ('M_1_LRG', np.float64(13.862674963583894)) ('alpha_LRG', np.float64(1.0626441195231517)) ('f_sigv_LRG', np.float64(0.9725454737005867)) ('log_Mcent_LRG', np.float64(12.844581930273849)) ('sigma_M_LRG', np.float64(0.4280496722982868))
[Interation 24] ('M_0_LRG', np.float64(12.443574622650646)) ('M_1_LRG', np.float64(13.876115016188896)) ('alpha_LRG', np.float64(1.0793930368009368)) ('f_sigv_LRG', np.float64(0.9586503857646598)) ('log_Mcent_LRG', np.float64(12.876764140453204)) ('sigma_M_LRG', np.float64(0.4651946806307914))
[Interation 24] chi2=760.6774297182156
[Interation 24] chi2=740.80424723247
[Interation 24] chi2=821.0288181258542
[Interation 24] chi2=799.9699182879448
[Interation 24] chi2=820.9256596428131
[Interation 24] chi2=868.9225590358319
[Interation 24] chi2=816.1816809781476
[Interation 24] chi2=924.1953633800339
[Interation 24] chi2=841.2129797412573
[Interation 24] chi2=941.1424475354041
[Interation 24] chi2=932.2908288196331
[Interation 24] chi2=765.8758166277181
[Interation 25] ('M_0_LRG', np.float64(12.39330131853611)) ('M_1_LRG', np.float64(13.871389277703571)) ('alpha_LRG', np.float64(1.1043174610438746)) ('f_sigv_LRG', np.float64(0.9571969392661068)) ('log_Mcent_LRG', np.float64(12.87558057619076)) ('sigma_M_LRG', np.float64(0.4664285403478643))
[Interation 25] ('M_0_LRG', np.float64(12.475366096479666)) ('M_1_LRG', np.float64(13.886638543228143)) ('alpha_LRG', np.float64(1.0543319872519967)) ('f_sigv_LRG', np.float64(0.9747190136619643)) ('log_Mcent_LRG', np.float64(12.86349731345442)) ('sigma_M_LRG', np.float64(0.4398132742041507))
[Interation 25] ('M_0_LRG', np.float64(12.477830233881615)) ('M_1_LRG', np.float64(13.877038779160495)) ('alpha_LRG', np.float64(1.056697197031793)) ('f_sigv_LRG', np.float64(0.9771915048866172)) ('log_Mcent_LRG', np.float64(12.857706473558501)) ('sigma_M_LRG', np.float64(0.43832417782281874))
[Interation 25] ('M_0_LRG', np.float64(12.454317800707166)) ('M_1_LRG', np.float64(13.88948109259649)) ('alpha_LRG', np.float64(1.0565416753298658)) ('f_sigv_LRG', np.float64(0.9830485084754798)) ('log_Mcent_LRG', np.float64(12.87183146573913)) ('sigma_M_LRG', np.float64(0.45062064084041936))
[Interation 25] chi2=819.5157299572606
[Interation 25] chi2=796.1253764495184
[Interation 25] chi2=766.9340995388599
[Interation 25] chi2=888.7820838451479
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_11.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.481570982098178)) ('M_1_LRG', np.float64(13.8732642695345)) ('alpha_LRG', np.float64(1.052641214994534)) ('f_sigv_LRG', np.float64(0.9779974321505336)) ('log_Mcent_LRG', np.float64(12.853676947163748)) ('sigma_M_LRG', np.float64(0.43499346171656994))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3352773189544678
Start satellite assignement
Satellite assignement done 0.0805366039276123
LRG mock catalogue done 0.15500998497009277
571548 central galaxies, 95065 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6730170249938965
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_11.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:25
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:20
Load correlation matrix for LRG at z0.725 ...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.536392471512775)) ('M_1_LRG', np.float64(13.505918080071996)) ('alpha_LRG', np.float64(0.9221086119043905)) ('f_sigv_LRG', np.float64(1.0764142311096354)) ('log_Mcent_LRG', np.float64(12.761840184234872)) ('sigma_M_LRG', np.float64(0.47964096560734354))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.594496630479188)) ('M_1_LRG', np.float64(13.98562480058032)) ('alpha_LRG', np.float64(0.8005403680079852)) ('f_sigv_LRG', np.float64(0.7255941095884739)) ('log_Mcent_LRG', np.float64(12.745529761773348)) ('sigma_M_LRG', np.float64(0.30054029102601487))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.52422145229344)) ('M_1_LRG', np.float64(14.08973985228033)) ('alpha_LRG', np.float64(0.905140223641662)) ('f_sigv_LRG', np.float64(1.0240474610450518)) ('log_Mcent_LRG', np.float64(12.854978968961262)) ('sigma_M_LRG', np.float64(0.40299832807023594))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.512038885097333)) ('M_1_LRG', np.float64(13.863449242175404)) ('alpha_LRG', np.float64(1.2050892263453024)) ('f_sigv_LRG', np.float64(0.8314916757221668)) ('log_Mcent_LRG', np.float64(12.68804712662485)) ('sigma_M_LRG', np.float64(0.2420925961089348))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.664210978806803)) ('M_1_LRG', np.float64(13.709550488379545)) ('alpha_LRG', np.float64(1.0881272651650704)) ('f_sigv_LRG', np.float64(0.9350584885858728)) ('log_Mcent_LRG', np.float64(12.916894622485103)) ('sigma_M_LRG', np.float64(0.5727182987462798))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.40181616819483)) ('M_1_LRG', np.float64(13.781990750445908)) ('alpha_LRG', np.float64(1.1079810164780466)) ('f_sigv_LRG', np.float64(1.0553106501451759)) ('log_Mcent_LRG', np.float64(12.767463807188514)) ('sigma_M_LRG', np.float64(0.3217098063453224))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.641239328904984)) ('M_1_LRG', np.float64(14.026962334008486)) ('alpha_LRG', np.float64(1.0093588101858624)) ('f_sigv_LRG', np.float64(0.7949006664702813)) ('log_Mcent_LRG', np.float64(12.782269003834886)) ('sigma_M_LRG', np.float64(0.3110192001920655))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.559045330894318)) ('M_1_LRG', np.float64(13.47327647184074)) ('alpha_LRG', np.float64(1.062507685008561)) ('f_sigv_LRG', np.float64(0.8490957980290358)) ('log_Mcent_LRG', np.float64(12.71053724605374)) ('sigma_M_LRG', np.float64(0.5093076329493211))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.669199122887985)) ('M_1_LRG', np.float64(13.64915063447984)) ('alpha_LRG', np.float64(0.9641396360874607)) ('f_sigv_LRG', np.float64(1.1729627174442192)) ('log_Mcent_LRG', np.float64(12.633555324701959)) ('sigma_M_LRG', np.float64(0.3108234441451688))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.450795886354314)) ('M_1_LRG', np.float64(13.4953459855927)) ('alpha_LRG', np.float64(0.6689667929531283)) ('f_sigv_LRG', np.float64(0.9985508584579996)) ('log_Mcent_LRG', np.float64(12.591990079056005)) ('sigma_M_LRG', np.float64(0.3936406303544772))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.599519070204893)) ('M_1_LRG', np.float64(13.75411480763362)) ('alpha_LRG', np.float64(0.9295377486316581)) ('f_sigv_LRG', np.float64(0.8954921185157803)) ('log_Mcent_LRG', np.float64(12.76955490078316)) ('sigma_M_LRG', np.float64(0.3019591710023448))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.513053213890808)) ('M_1_LRG', np.float64(14.243922536868505)) ('alpha_LRG', np.float64(1.0100968766484522)) ('f_sigv_LRG', np.float64(0.9326812846493393)) ('log_Mcent_LRG', np.float64(12.823866738891368)) ('sigma_M_LRG', np.float64(0.29071264227529037))
[Interation 25] chi2=3953.4622794757324
[Interation 25] chi2=4144.309472772208
[Interation 25] chi2=1489.0629905998976
[Interation 25] chi2=2546.8679922139563
[Interation 25] chi2=1997.923694104748
[Interation 25] chi2=1078.50780033998
[Interation 25] chi2=2934.3574220691075
[Interation 25] chi2=5099.641566006377
[Interation 25] chi2=3149.6593733057066
[Interation 25] chi2=3161.1383341123496
[Interation 25] chi2=3259.3692864223353
[Interation 25] chi2=4669.540534987168
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 26] ('M_0_LRG', np.float64(12.528187302440223)) ('M_1_LRG', np.float64(13.977870989240264)) ('alpha_LRG', np.float64(0.9029761967704772)) ('f_sigv_LRG', np.float64(1.0841040457882065)) ('log_Mcent_LRG', np.float64(12.875554700990612)) ('sigma_M_LRG', np.float64(0.4154820766759325))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 26] ('M_0_LRG', np.float64(12.507601577320584)) ('M_1_LRG', np.float64(13.943216648833857)) ('alpha_LRG', np.float64(1.020609720098356)) ('f_sigv_LRG', np.float64(0.9708186180252849)) ('log_Mcent_LRG', np.float64(12.924793752695036)) ('sigma_M_LRG', np.float64(0.49996848164778185))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 26] ('M_0_LRG', np.float64(12.43657267671513)) ('M_1_LRG', np.float64(13.721586487208437)) ('alpha_LRG', np.float64(1.0929357771842583)) ('f_sigv_LRG', np.float64(0.9693803126127692)) ('log_Mcent_LRG', np.float64(12.678070009406268)) ('sigma_M_LRG', np.float64(0.283292021268591))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 26] ('M_0_LRG', np.float64(12.437380653329816)) ('M_1_LRG', np.float64(13.773130671202141)) ('alpha_LRG', np.float64(1.088680940356604)) ('f_sigv_LRG', np.float64(0.9533391688998125)) ('log_Mcent_LRG', np.float64(12.713540810934498)) ('sigma_M_LRG', np.float64(0.2829835451069206))
[Interation 26] chi2=955.1761371953294
[Interation 26] chi2=896.9780416252912
[Interation 26] chi2=972.7919647114187
[Interation 26] chi2=869.3861860194168
[Interation 26] ('M_0_LRG', np.float64(12.557109403317245)) ('M_1_LRG', np.float64(13.860297367870771)) ('alpha_LRG', np.float64(1.02788428770041)) ('f_sigv_LRG', np.float64(0.9790550765299982)) ('log_Mcent_LRG', np.float64(12.831606399666441)) ('sigma_M_LRG', np.float64(0.4053595651520465))
[Interation 26] ('M_0_LRG', np.float64(12.550936873543787)) ('M_1_LRG', np.float64(13.898240298807451)) ('alpha_LRG', np.float64(1.015473859949253)) ('f_sigv_LRG', np.float64(0.9910411105744825)) ('log_Mcent_LRG', np.float64(12.895418759258266)) ('sigma_M_LRG', np.float64(0.4838000922603959))
[Interation 26] ('M_0_LRG', np.float64(12.552353531486329)) ('M_1_LRG', np.float64(13.870228809849754)) ('alpha_LRG', np.float64(1.0198605014628899)) ('f_sigv_LRG', np.float64(0.9859532187988425)) ('log_Mcent_LRG', np.float64(12.847724630515138)) ('sigma_M_LRG', np.float64(0.42547933272410104))
[Interation 26] ('M_0_LRG', np.float64(12.527018933409467)) ('M_1_LRG', np.float64(13.844244791030317)) ('alpha_LRG', np.float64(1.0295374492623555)) ('f_sigv_LRG', np.float64(0.9938432676580244)) ('log_Mcent_LRG', np.float64(12.819464645743073)) ('sigma_M_LRG', np.float64(0.39920112606749125))
[Interation 26] ('M_0_LRG', np.float64(12.596717293777786)) ('M_1_LRG', np.float64(13.845666632103597)) ('alpha_LRG', np.float64(1.0100056792731227)) ('f_sigv_LRG', np.float64(0.9862537838919967)) ('log_Mcent_LRG', np.float64(12.832882059521026)) ('sigma_M_LRG', np.float64(0.41651473667031924))
[Interation 26] ('M_0_LRG', np.float64(12.51862612292789)) ('M_1_LRG', np.float64(13.908458054905545)) ('alpha_LRG', np.float64(1.015488126263961)) ('f_sigv_LRG', np.float64(1.0064571883682378)) ('log_Mcent_LRG', np.float64(12.876129975330018)) ('sigma_M_LRG', np.float64(0.4456411144841811))
[Interation 26] ('M_0_LRG', np.float64(12.536636868431046)) ('M_1_LRG', np.float64(13.872154018248963)) ('alpha_LRG', np.float64(1.025387094809333)) ('f_sigv_LRG', np.float64(0.9848205249552702)) ('log_Mcent_LRG', np.float64(12.850605345754882)) ('sigma_M_LRG', np.float64(0.43091161422102187))
[Interation 26] ('M_0_LRG', np.float64(12.519693761913917)) ('M_1_LRG', np.float64(13.868833838984669)) ('alpha_LRG', np.float64(1.0437229140317803)) ('f_sigv_LRG', np.float64(0.9669514229293055)) ('log_Mcent_LRG', np.float64(12.835106634972927)) ('sigma_M_LRG', np.float64(0.40992424585037157))
[Interation 26] ('M_0_LRG', np.float64(12.517752402021486)) ('M_1_LRG', np.float64(13.827373499414477)) ('alpha_LRG', np.float64(1.04612649211115)) ('f_sigv_LRG', np.float64(0.9730535248139377)) ('log_Mcent_LRG', np.float64(12.80359667848041)) ('sigma_M_LRG', np.float64(0.38920085994079273))
[Interation 26] ('M_0_LRG', np.float64(12.596068747559285)) ('M_1_LRG', np.float64(13.83520110785203)) ('alpha_LRG', np.float64(1.0251431682044816)) ('f_sigv_LRG', np.float64(0.9551769634351537)) ('log_Mcent_LRG', np.float64(12.815433648409602)) ('sigma_M_LRG', np.float64(0.3985987725696035))
[Interation 26] ('M_0_LRG', np.float64(12.538144270279155)) ('M_1_LRG', np.float64(13.852457224902329)) ('alpha_LRG', np.float64(1.037075319384221)) ('f_sigv_LRG', np.float64(0.9868842746474747)) ('log_Mcent_LRG', np.float64(12.823423963819964)) ('sigma_M_LRG', np.float64(0.4026417952368483))
[Interation 26] ('M_0_LRG', np.float64(12.576392879079902)) ('M_1_LRG', np.float64(13.862346746590127)) ('alpha_LRG', np.float64(1.0468731395389002)) ('f_sigv_LRG', np.float64(0.9558426350885749)) ('log_Mcent_LRG', np.float64(12.864925364425826)) ('sigma_M_LRG', np.float64(0.45133337931221773))
[Interation 26] chi2=873.9447966591454
[Interation 26] chi2=928.5096962453666
[Interation 26] chi2=950.6050159540483
[Interation 26] chi2=800.5315337760987
[Interation 26] chi2=830.96463895754
[Interation 26] chi2=910.4015970565108
[Interation 26] chi2=826.9728798191785
[Interation 26] chi2=889.6750208446787
[Interation 26] chi2=887.7897838810535
[Interation 26] chi2=864.5599992624993
[Interation 26] chi2=887.13232716133
[Interation 26] chi2=806.7885713265403
[Interation 27] ('M_0_LRG', np.float64(12.559582283017797)) ('M_1_LRG', np.float64(13.832778137373825)) ('alpha_LRG', np.float64(1.0416239417353699)) ('f_sigv_LRG', np.float64(0.9774034787680448)) ('log_Mcent_LRG', np.float64(12.819167147399977)) ('sigma_M_LRG', np.float64(0.40354704124105445))
[Interation 27] ('M_0_LRG', np.float64(12.520174823146785)) ('M_1_LRG', np.float64(13.83878988791694)) ('alpha_LRG', np.float64(1.0429057657335503)) ('f_sigv_LRG', np.float64(0.9800609869406995)) ('log_Mcent_LRG', np.float64(12.822584570725951)) ('sigma_M_LRG', np.float64(0.41073577727805677))
[Interation 27] ('M_0_LRG', np.float64(12.52789008286638)) ('M_1_LRG', np.float64(13.915347445311127)) ('alpha_LRG', np.float64(1.0346725297680988)) ('f_sigv_LRG', np.float64(0.9818908339600041)) ('log_Mcent_LRG', np.float64(12.89859354707717)) ('sigma_M_LRG', np.float64(0.4732796691155123))
[Interation 27] ('M_0_LRG', np.float64(12.518122040309752)) ('M_1_LRG', np.float64(13.870277466368805)) ('alpha_LRG', np.float64(1.0583426898109531)) ('f_sigv_LRG', np.float64(0.9663287774460106)) ('log_Mcent_LRG', np.float64(12.847631246859056)) ('sigma_M_LRG', np.float64(0.42202369226678615))
[Interation 27] chi2=887.3755900895643
[Interation 27] chi2=788.5497682359716
[Interation 27] chi2=849.2725663341407
[Interation 27] chi2=879.8577718477758
[Interation 27] ('M_0_LRG', np.float64(12.53630518145816)) ('M_1_LRG', np.float64(13.868849681717089)) ('alpha_LRG', np.float64(1.0286769556036781)) ('f_sigv_LRG', np.float64(0.9893373309782912)) ('log_Mcent_LRG', np.float64(12.854034419157763)) ('sigma_M_LRG', np.float64(0.4354657866475601))
[Interation 27] ('M_0_LRG', np.float64(12.554486773778665)) ('M_1_LRG', np.float64(13.89784958011408)) ('alpha_LRG', np.float64(1.026172078560457)) ('f_sigv_LRG', np.float64(0.9767722352308477)) ('log_Mcent_LRG', np.float64(12.892767284072374)) ('sigma_M_LRG', np.float64(0.4724102688670638))
[Interation 27] ('M_0_LRG', np.float64(12.524672008999131)) ('M_1_LRG', np.float64(13.830549265411387)) ('alpha_LRG', np.float64(1.0664746523484834)) ('f_sigv_LRG', np.float64(0.9590134701957276)) ('log_Mcent_LRG', np.float64(12.824613977497446)) ('sigma_M_LRG', np.float64(0.4179090925101588))
[Interation 27] ('M_0_LRG', np.float64(12.497087263747305)) ('M_1_LRG', np.float64(13.846062814541297)) ('alpha_LRG', np.float64(1.07222297610663)) ('f_sigv_LRG', np.float64(0.9686469579588394)) ('log_Mcent_LRG', np.float64(12.833371810129698)) ('sigma_M_LRG', np.float64(0.4220793140651323))
[Interation 27] ('M_0_LRG', np.float64(12.518892742199895)) ('M_1_LRG', np.float64(13.842911155898548)) ('alpha_LRG', np.float64(1.0620982463095305)) ('f_sigv_LRG', np.float64(0.9668094377959086)) ('log_Mcent_LRG', np.float64(12.829805227819602)) ('sigma_M_LRG', np.float64(0.41582661360894885))
[Interation 27] ('M_0_LRG', np.float64(12.526300688423337)) ('M_1_LRG', np.float64(13.866171728805297)) ('alpha_LRG', np.float64(1.0413653186102987)) ('f_sigv_LRG', np.float64(0.9771047885560167)) ('log_Mcent_LRG', np.float64(12.849366750805602)) ('sigma_M_LRG', np.float64(0.43397461303896945))
[Interation 27] ('M_0_LRG', np.float64(12.554532657464597)) ('M_1_LRG', np.float64(13.868623756932138)) ('alpha_LRG', np.float64(1.0260019430471925)) ('f_sigv_LRG', np.float64(0.9717229531054011)) ('log_Mcent_LRG', np.float64(12.848713280444255)) ('sigma_M_LRG', np.float64(0.4273132115119024))
[Interation 27] ('M_0_LRG', np.float64(12.536166522880857)) ('M_1_LRG', np.float64(13.829595535554478)) ('alpha_LRG', np.float64(1.0566406835296545)) ('f_sigv_LRG', np.float64(0.9420044240772772)) ('log_Mcent_LRG', np.float64(12.82118641678129)) ('sigma_M_LRG', np.float64(0.4194789567280325))
[Interation 27] ('M_0_LRG', np.float64(12.55162237266987)) ('M_1_LRG', np.float64(13.862542351148356)) ('alpha_LRG', np.float64(1.018151501396786)) ('f_sigv_LRG', np.float64(0.9962822259543732)) ('log_Mcent_LRG', np.float64(12.83906133244752)) ('sigma_M_LRG', np.float64(0.4170686959738959))
[Interation 27] ('M_0_LRG', np.float64(12.528027531299434)) ('M_1_LRG', np.float64(13.875457012985775)) ('alpha_LRG', np.float64(1.0476850146120005)) ('f_sigv_LRG', np.float64(0.9689513812708253)) ('log_Mcent_LRG', np.float64(12.856261260852394)) ('sigma_M_LRG', np.float64(0.43535296796396045))
[Interation 27] ('M_0_LRG', np.float64(12.56963157208895)) ('M_1_LRG', np.float64(13.854194025616673)) ('alpha_LRG', np.float64(1.040677269846653)) ('f_sigv_LRG', np.float64(0.9682128741811095)) ('log_Mcent_LRG', np.float64(12.849541058567725)) ('sigma_M_LRG', np.float64(0.4339096047362428))
[Interation 27] ('M_0_LRG', np.float64(12.515565471335066)) ('M_1_LRG', np.float64(13.875360105142091)) ('alpha_LRG', np.float64(1.0538032997512843)) ('f_sigv_LRG', np.float64(0.9710680997312876)) ('log_Mcent_LRG', np.float64(12.859221755735096)) ('sigma_M_LRG', np.float64(0.43879856967977))
[Interation 27] chi2=841.3521102536425
[Interation 27] chi2=841.771057037075
[Interation 27] chi2=856.6171309001888
[Interation 27] chi2=823.025500242862
[Interation 27] chi2=857.4219786161167
[Interation 27] chi2=812.275437010065
[Interation 27] chi2=737.6154273835474
[Interation 27] chi2=842.7815768053591
[Interation 27] chi2=967.633360399606
[Interation 27] chi2=747.0106398047934
[Interation 27] chi2=904.0098251898146
[Interation 27] chi2=826.9671328108517
[Interation 28] ('M_0_LRG', np.float64(12.516517352318436)) ('M_1_LRG', np.float64(13.847698700543203)) ('alpha_LRG', np.float64(1.0583561990222403)) ('f_sigv_LRG', np.float64(0.9581079624413599)) ('log_Mcent_LRG', np.float64(12.827408193467843)) ('sigma_M_LRG', np.float64(0.4153617753369542))
[Interation 28] ('M_0_LRG', np.float64(12.531754661326538)) ('M_1_LRG', np.float64(13.882093004210288)) ('alpha_LRG', np.float64(1.0498879394282223)) ('f_sigv_LRG', np.float64(0.9754438232267444)) ('log_Mcent_LRG', np.float64(12.873285580181344)) ('sigma_M_LRG', np.float64(0.4520898086135429))
[Interation 28] ('M_0_LRG', np.float64(12.53491700374348)) ('M_1_LRG', np.float64(13.854103052649005)) ('alpha_LRG', np.float64(1.0453322757453785)) ('f_sigv_LRG', np.float64(0.9703389796534299)) ('log_Mcent_LRG', np.float64(12.83997284823738)) ('sigma_M_LRG', np.float64(0.42567850191810475))
[Interation 28] ('M_0_LRG', np.float64(12.529228096074991)) ('M_1_LRG', np.float64(13.854538565946571)) ('alpha_LRG', np.float64(1.0489356572832798)) ('f_sigv_LRG', np.float64(0.9800876435306237)) ('log_Mcent_LRG', np.float64(12.838224338597518)) ('sigma_M_LRG', np.float64(0.4195526798929057))
[Interation 28] chi2=882.8622797678294
[Interation 28] chi2=753.1337397042729
[Interation 28] chi2=822.4345117951359
[Interation 28] chi2=916.5302724475147
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_12.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.541227395118003)) ('M_1_LRG', np.float64(13.844526720958692)) ('alpha_LRG', np.float64(1.0309091314081094)) ('f_sigv_LRG', np.float64(0.981289753558693)) ('log_Mcent_LRG', np.float64(12.823250859943318)) ('sigma_M_LRG', np.float64(0.40820719060228283))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.326171875
Start satellite assignement
Satellite assignement done 0.09420347213745117
LRG mock catalogue done 0.17132782936096191
596443 central galaxies, 98194 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6818954944610596
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_12.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:21
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:27
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.4988032804732)) ('M_1_LRG', np.float64(13.8682913669888)) ('alpha_LRG', np.float64(1.0233744713200552)) ('f_sigv_LRG', np.float64(0.9823008860710246)) ('log_Mcent_LRG', np.float64(12.85144458305365)) ('sigma_M_LRG', np.float64(0.43475752157013065))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.417264368787784)) ('M_1_LRG', np.float64(13.910105132093529)) ('alpha_LRG', np.float64(1.0544808980572666)) ('f_sigv_LRG', np.float64(0.9742214163477678)) ('log_Mcent_LRG', np.float64(12.858683577175379)) ('sigma_M_LRG', np.float64(0.4333230154908667))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.600024007955295)) ('M_1_LRG', np.float64(13.883390699146835)) ('alpha_LRG', np.float64(0.9900391066603114)) ('f_sigv_LRG', np.float64(0.9696067453586704)) ('log_Mcent_LRG', np.float64(12.873755391066425)) ('sigma_M_LRG', np.float64(0.45658073786267006))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.570260840105068)) ('M_1_LRG', np.float64(13.87854193456426)) ('alpha_LRG', np.float64(1.028131508990681)) ('f_sigv_LRG', np.float64(0.9715496357716462)) ('log_Mcent_LRG', np.float64(12.875854993492442)) ('sigma_M_LRG', np.float64(0.45952458299770454))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.523911843063772)) ('M_1_LRG', np.float64(13.879009617195623)) ('alpha_LRG', np.float64(1.047289065885668)) ('f_sigv_LRG', np.float64(0.9468088315746438)) ('log_Mcent_LRG', np.float64(12.89279576153111)) ('sigma_M_LRG', np.float64(0.4887261231381577))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.595867015308409)) ('M_1_LRG', np.float64(13.871907253174053)) ('alpha_LRG', np.float64(0.9797869002429048)) ('f_sigv_LRG', np.float64(0.960512948503853)) ('log_Mcent_LRG', np.float64(12.859433363420719)) ('sigma_M_LRG', np.float64(0.45007084986128))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.489357853837173)) ('M_1_LRG', np.float64(13.892965711730836)) ('alpha_LRG', np.float64(1.0698361842063395)) ('f_sigv_LRG', np.float64(0.9686585776251292)) ('log_Mcent_LRG', np.float64(12.899542612838019)) ('sigma_M_LRG', np.float64(0.48225982968273295))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.62932015989579)) ('M_1_LRG', np.float64(13.852760006252728)) ('alpha_LRG', np.float64(0.9714575425821864)) ('f_sigv_LRG', np.float64(0.9723506145503834)) ('log_Mcent_LRG', np.float64(12.819367221683137)) ('sigma_M_LRG', np.float64(0.3996092729419342))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.36169834456753)) ('M_1_LRG', np.float64(13.916852015160496)) ('alpha_LRG', np.float64(1.1291001007793688)) ('f_sigv_LRG', np.float64(0.9511003582158235)) ('log_Mcent_LRG', np.float64(12.917502947678523)) ('sigma_M_LRG', np.float64(0.5056990728296594))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.600022705775856)) ('M_1_LRG', np.float64(13.86225720932273)) ('alpha_LRG', np.float64(0.9913562649154515)) ('f_sigv_LRG', np.float64(0.9731031056090814)) ('log_Mcent_LRG', np.float64(12.836068314327658)) ('sigma_M_LRG', np.float64(0.4119315215903984))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.519031424229887)) ('M_1_LRG', np.float64(13.882874301461213)) ('alpha_LRG', np.float64(1.0338667327645363)) ('f_sigv_LRG', np.float64(0.960268720395994)) ('log_Mcent_LRG', np.float64(12.874402713624153)) ('sigma_M_LRG', np.float64(0.4510148753716008))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.529350413958705)) ('M_1_LRG', np.float64(13.880801030172597)) ('alpha_LRG', np.float64(1.0403975969371722)) ('f_sigv_LRG', np.float64(0.966018371585274)) ('log_Mcent_LRG', np.float64(12.858020530445039)) ('sigma_M_LRG', np.float64(0.4351634486320343))
[Interation 28] chi2=846.5962232596687
[Interation 28] chi2=895.6241261269124
[Interation 28] chi2=795.0213214490723
[Interation 28] chi2=960.1948926473262
[Interation 28] chi2=925.8368927804299
[Interation 28] chi2=810.348551965776
[Interation 28] chi2=858.7454766505413
[Interation 28] chi2=868.0911152598745
[Interation 28] chi2=865.9093411196442
[Interation 28] chi2=786.4258101478969
[Interation 28] chi2=875.9227635681901
[Interation 28] chi2=835.2284086447589
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 29] ('M_0_LRG', np.float64(12.407702042316846)) ('M_1_LRG', np.float64(13.931132680111162)) ('alpha_LRG', np.float64(1.0598165054747588)) ('f_sigv_LRG', np.float64(0.9930340434657043)) ('log_Mcent_LRG', np.float64(12.887116923672803)) ('sigma_M_LRG', np.float64(0.4575306211057171))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 29] ('M_0_LRG', np.float64(12.539647011668402)) ('M_1_LRG', np.float64(13.8452767140001)) ('alpha_LRG', np.float64(1.0188245599593682)) ('f_sigv_LRG', np.float64(0.9474036233720522)) ('log_Mcent_LRG', np.float64(12.825100437632734)) ('sigma_M_LRG', np.float64(0.4144617503633916))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 29] ('M_0_LRG', np.float64(12.435577334160206)) ('M_1_LRG', np.float64(13.90118035429876)) ('alpha_LRG', np.float64(1.0469083279527398)) ('f_sigv_LRG', np.float64(0.9919398450486808)) ('log_Mcent_LRG', np.float64(12.88571843023049)) ('sigma_M_LRG', np.float64(0.47069867940654025))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 29] ('M_0_LRG', np.float64(12.554405225023311)) ('M_1_LRG', np.float64(13.864584520712839)) ('alpha_LRG', np.float64(0.9910903430612024)) ('f_sigv_LRG', np.float64(0.9879362859305888)) ('log_Mcent_LRG', np.float64(12.82479000336838)) ('sigma_M_LRG', np.float64(0.40844183001663703))
[Interation 29] chi2=939.9801650266157
[Interation 29] chi2=799.48756882289
[Interation 29] chi2=876.6776693518426
[Interation 29] chi2=884.7364166060772
[Interation 29] ('M_0_LRG', np.float64(12.481488303784719)) ('M_1_LRG', np.float64(13.878170508757027)) ('alpha_LRG', np.float64(1.0702431420437286)) ('f_sigv_LRG', np.float64(0.9641309059247175)) ('log_Mcent_LRG', np.float64(12.870755865012532)) ('sigma_M_LRG', np.float64(0.4530739001308868))
[Interation 29] ('M_0_LRG', np.float64(12.551725072104837)) ('M_1_LRG', np.float64(13.87478464111681)) ('alpha_LRG', np.float64(1.0275209719696794)) ('f_sigv_LRG', np.float64(0.9734822820735376)) ('log_Mcent_LRG', np.float64(12.861533546470584)) ('sigma_M_LRG', np.float64(0.44247650344548456))
[Interation 29] ('M_0_LRG', np.float64(12.533006573990747)) ('M_1_LRG', np.float64(13.89077251998878)) ('alpha_LRG', np.float64(1.0388602150582382)) ('f_sigv_LRG', np.float64(0.9690697654664994)) ('log_Mcent_LRG', np.float64(12.879959079624976)) ('sigma_M_LRG', np.float64(0.45846490076567203))
[Interation 29] ('M_0_LRG', np.float64(12.474211049184056)) ('M_1_LRG', np.float64(13.876485419322243)) ('alpha_LRG', np.float64(1.0542906513451735)) ('f_sigv_LRG', np.float64(0.9796398115416989)) ('log_Mcent_LRG', np.float64(12.8526671961752)) ('sigma_M_LRG', np.float64(0.43138803049232277))
[Interation 29] ('M_0_LRG', np.float64(12.560028801725238)) ('M_1_LRG', np.float64(13.852179638526499)) ('alpha_LRG', np.float64(1.0380351779611519)) ('f_sigv_LRG', np.float64(0.9634779048506046)) ('log_Mcent_LRG', np.float64(12.836197333599205)) ('sigma_M_LRG', np.float64(0.4192504360516494))
[Interation 29] ('M_0_LRG', np.float64(12.515995068721427)) ('M_1_LRG', np.float64(13.877643735462975)) ('alpha_LRG', np.float64(1.0374674733148794)) ('f_sigv_LRG', np.float64(0.9820784661361285)) ('log_Mcent_LRG', np.float64(12.855669376190153)) ('sigma_M_LRG', np.float64(0.4358259187755451))
[Interation 29] ('M_0_LRG', np.float64(12.507070479596484)) ('M_1_LRG', np.float64(13.849170499339763)) ('alpha_LRG', np.float64(1.033499353497077)) ('f_sigv_LRG', np.float64(0.9777454622221845)) ('log_Mcent_LRG', np.float64(12.821687797291105)) ('sigma_M_LRG', np.float64(0.40491408374310695))
[Interation 29] ('M_0_LRG', np.float64(12.573649777897435)) ('M_1_LRG', np.float64(13.891022016066108)) ('alpha_LRG', np.float64(1.007623775376008)) ('f_sigv_LRG', np.float64(0.9749018382673299)) ('log_Mcent_LRG', np.float64(12.877417163326218)) ('sigma_M_LRG', np.float64(0.45818372663409945))
[Interation 29] ('M_0_LRG', np.float64(12.551294961765285)) ('M_1_LRG', np.float64(13.869036912479283)) ('alpha_LRG', np.float64(1.0495073007628255)) ('f_sigv_LRG', np.float64(0.9586465077076161)) ('log_Mcent_LRG', np.float64(12.865862227767053)) ('sigma_M_LRG', np.float64(0.45253483600596556))
[Interation 29] ('M_0_LRG', np.float64(12.528804620417803)) ('M_1_LRG', np.float64(13.888403985220942)) ('alpha_LRG', np.float64(1.0385373774523017)) ('f_sigv_LRG', np.float64(0.9645303218561847)) ('log_Mcent_LRG', np.float64(12.879051439428027)) ('sigma_M_LRG', np.float64(0.4626515789425475))
[Interation 29] ('M_0_LRG', np.float64(12.589101509316306)) ('M_1_LRG', np.float64(13.852429000601767)) ('alpha_LRG', np.float64(1.0194917448343983)) ('f_sigv_LRG', np.float64(0.9613591263045197)) ('log_Mcent_LRG', np.float64(12.84213506811831)) ('sigma_M_LRG', np.float64(0.42693911506800025))
[Interation 29] ('M_0_LRG', np.float64(12.463274903526763)) ('M_1_LRG', np.float64(13.857627111797877)) ('alpha_LRG', np.float64(1.0733168374051358)) ('f_sigv_LRG', np.float64(0.9737246639378261)) ('log_Mcent_LRG', np.float64(12.83546663604602)) ('sigma_M_LRG', np.float64(0.41731562974063036))
[Interation 29] chi2=904.5498487942399
[Interation 29] chi2=877.3549134634471
[Interation 29] chi2=831.2527946752717
[Interation 29] chi2=861.1080920133193
[Interation 29] chi2=835.6110149585156
[Interation 29] chi2=735.5878876349844
[Interation 29] chi2=865.3827028503812
[Interation 29] chi2=866.0454555193884
[Interation 29] chi2=859.6543845915571
[Interation 29] chi2=830.2033238501969
[Interation 29] chi2=863.4967398459875
[Interation 29] chi2=806.193090968374
[Interation 30] ('M_0_LRG', np.float64(12.541912571694425)) ('M_1_LRG', np.float64(13.840676909992224)) ('alpha_LRG', np.float64(1.0324501412447304)) ('f_sigv_LRG', np.float64(0.9737142731240814)) ('log_Mcent_LRG', np.float64(12.81768005741034)) ('sigma_M_LRG', np.float64(0.40055150045143495))
[Interation 30] ('M_0_LRG', np.float64(12.507892104130828)) ('M_1_LRG', np.float64(13.865467264464652)) ('alpha_LRG', np.float64(1.0483926453571561)) ('f_sigv_LRG', np.float64(0.9697277656704117)) ('log_Mcent_LRG', np.float64(12.848459300628628)) ('sigma_M_LRG', np.float64(0.4341815431950456))
[Interation 30] ('M_0_LRG', np.float64(12.446804777031792)) ('M_1_LRG', np.float64(13.900909087075624)) ('alpha_LRG', np.float64(1.0734609862059923)) ('f_sigv_LRG', np.float64(0.974339139118655)) ('log_Mcent_LRG', np.float64(12.884486724084692)) ('sigma_M_LRG', np.float64(0.4645150780164091))
[Interation 30] ('M_0_LRG', np.float64(12.535888094450103)) ('M_1_LRG', np.float64(13.825777570960216)) ('alpha_LRG', np.float64(1.0483113618529438)) ('f_sigv_LRG', np.float64(0.9640164265509967)) ('log_Mcent_LRG', np.float64(12.802833016896775)) ('sigma_M_LRG', np.float64(0.3884544827653829))
[Interation 30] chi2=785.6653732964213
[Interation 30] chi2=769.6945274637125
[Interation 30] chi2=799.0734095351304
[Interation 30] chi2=826.7227348066529
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_13.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.568941810844306)) ('M_1_LRG', np.float64(13.87232126433387)) ('alpha_LRG', np.float64(1.030239242918)) ('f_sigv_LRG', np.float64(0.9618322641135144)) ('log_Mcent_LRG', np.float64(12.867948174911259)) ('sigma_M_LRG', np.float64(0.45387089515881146))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.34011125564575195
Start satellite assignement
Satellite assignement done 0.07486724853515625
LRG mock catalogue done 0.1484851837158203
564538 central galaxies, 89338 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.668346643447876
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_13.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:33
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:33
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:33
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:33
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:33
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:29
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.562046151685822)) ('M_1_LRG', np.float64(13.501214875447708)) ('alpha_LRG', np.float64(1.0304866177603333)) ('f_sigv_LRG', np.float64(0.8835422011331895)) ('log_Mcent_LRG', np.float64(12.594442453245572)) ('sigma_M_LRG', np.float64(0.29838815113094364))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.688223714737841)) ('M_1_LRG', np.float64(13.512910675144322)) ('alpha_LRG', np.float64(0.8800601469341669)) ('f_sigv_LRG', np.float64(0.7972881555277367)) ('log_Mcent_LRG', np.float64(12.745581598464062)) ('sigma_M_LRG', np.float64(0.4575516569529877))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.63071465086403)) ('M_1_LRG', np.float64(14.368440828555139)) ('alpha_LRG', np.float64(0.880243451876342)) ('f_sigv_LRG', np.float64(1.0213876112987152)) ('log_Mcent_LRG', np.float64(13.070012543570723)) ('sigma_M_LRG', np.float64(0.47610410282290616))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.561407027513459)) ('M_1_LRG', np.float64(14.107220806532297)) ('alpha_LRG', np.float64(1.1408632439611042)) ('f_sigv_LRG', np.float64(0.9786519608375382)) ('log_Mcent_LRG', np.float64(12.797021924916194)) ('sigma_M_LRG', np.float64(0.24582739920636504))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.669567563247371)) ('M_1_LRG', np.float64(14.136957819199957)) ('alpha_LRG', np.float64(1.0497741242737357)) ('f_sigv_LRG', np.float64(0.8505821286741824)) ('log_Mcent_LRG', np.float64(12.944703803283591)) ('sigma_M_LRG', np.float64(0.425001081573153))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.556518579595325)) ('M_1_LRG', np.float64(13.765293320233795)) ('alpha_LRG', np.float64(0.9735166163696111)) ('f_sigv_LRG', np.float64(1.153092935569778)) ('log_Mcent_LRG', np.float64(12.813322846615751)) ('sigma_M_LRG', np.float64(0.3196258817095129))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.304273104665665)) ('M_1_LRG', np.float64(14.242955715787728)) ('alpha_LRG', np.float64(1.06318967451746)) ('f_sigv_LRG', np.float64(0.966962719113135)) ('log_Mcent_LRG', np.float64(12.955953631822455)) ('sigma_M_LRG', np.float64(0.4631290395838734))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.599258986886655)) ('M_1_LRG', np.float64(14.060918001667696)) ('alpha_LRG', np.float64(0.9136922154209042)) ('f_sigv_LRG', np.float64(0.9109677700505725)) ('log_Mcent_LRG', np.float64(12.922639103259812)) ('sigma_M_LRG', np.float64(0.35111091536495986))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.721316815357692)) ('M_1_LRG', np.float64(13.96406042073015)) ('alpha_LRG', np.float64(0.829446565261528)) ('f_sigv_LRG', np.float64(1.075441042752751)) ('log_Mcent_LRG', np.float64(12.769589365194678)) ('sigma_M_LRG', np.float64(0.26290222419638815))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.585178234297569)) ('M_1_LRG', np.float64(14.011273841954315)) ('alpha_LRG', np.float64(1.0490659921348242)) ('f_sigv_LRG', np.float64(0.9375052951661463)) ('log_Mcent_LRG', np.float64(12.924960475705602)) ('sigma_M_LRG', np.float64(0.46759661207468894))
[Interation 30] chi2=3261.0218668633506
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.51298782322926)) ('M_1_LRG', np.float64(13.42564954160541)) ('alpha_LRG', np.float64(1.1534365848949486)) ('f_sigv_LRG', np.float64(0.7229727084674272)) ('log_Mcent_LRG', np.float64(12.590982724505196)) ('sigma_M_LRG', np.float64(0.4065147895164526))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.551288081863127)) ('M_1_LRG', np.float64(13.747243814097404)) ('alpha_LRG', np.float64(0.9946885321194046)) ('f_sigv_LRG', np.float64(0.974868956474273)) ('log_Mcent_LRG', np.float64(12.777966066882144)) ('sigma_M_LRG', np.float64(0.3868726086239064))
[Interation 30] chi2=1718.568584627139
[Interation 30] chi2=3743.0043779219277
[Interation 30] chi2=3198.768252479055
[Interation 30] chi2=4958.185895383356
[Interation 30] chi2=3474.2144101854283
[Interation 30] chi2=3494.7832981410097
[Interation 30] chi2=4278.687136797118
[Interation 30] chi2=1356.9926242542724
[Interation 30] chi2=1207.1002722835728
[Interation 30] chi2=3502.994038792947
[Interation 30] chi2=1078.9953117289037
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 31] ('M_0_LRG', np.float64(12.402567614054034)) ('M_1_LRG', np.float64(13.724487043230647)) ('alpha_LRG', np.float64(1.0055929668016494)) ('f_sigv_LRG', np.float64(1.0529601456269606)) ('log_Mcent_LRG', np.float64(12.52898433462488)) ('sigma_M_LRG', np.float64(0.02979932225623122))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 31] ('M_0_LRG', np.float64(12.653268712245977)) ('M_1_LRG', np.float64(13.62614583640979)) ('alpha_LRG', np.float64(1.1589341723465443)) ('f_sigv_LRG', np.float64(0.8670013421639244)) ('log_Mcent_LRG', np.float64(12.776961902824858)) ('sigma_M_LRG', np.float64(0.4309369434457803))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 31] ('M_0_LRG', np.float64(12.50318924418277)) ('M_1_LRG', np.float64(13.876389999874664)) ('alpha_LRG', np.float64(0.8753556960258452)) ('f_sigv_LRG', np.float64(1.0577931615871021)) ('log_Mcent_LRG', np.float64(12.906643283814974)) ('sigma_M_LRG', np.float64(0.5299744295684466))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 31] ('M_0_LRG', np.float64(12.842520235365395)) ('M_1_LRG', np.float64(13.631139733487851)) ('alpha_LRG', np.float64(0.9168779704969356)) ('f_sigv_LRG', np.float64(0.8521762400110205)) ('log_Mcent_LRG', np.float64(12.661578013684107)) ('sigma_M_LRG', np.float64(0.3352707089077883))
[Interation 31] chi2=3026.7219995722867
[Interation 31] chi2=2306.0920701318087
[Interation 31] chi2=1547.7166038540288
[Interation 31] chi2=1679.7725513373398
[Interation 31] ('M_0_LRG', np.float64(12.438122983068874)) ('M_1_LRG', np.float64(13.893519854588781)) ('alpha_LRG', np.float64(1.0757736974811691)) ('f_sigv_LRG', np.float64(0.9652188523668368)) ('log_Mcent_LRG', np.float64(12.87622667691723)) ('sigma_M_LRG', np.float64(0.4467657122043286))
[Interation 31] ('M_0_LRG', np.float64(12.51710404657758)) ('M_1_LRG', np.float64(13.839198546693337)) ('alpha_LRG', np.float64(1.0435358238100791)) ('f_sigv_LRG', np.float64(0.9710793186821144)) ('log_Mcent_LRG', np.float64(12.795162306652506)) ('sigma_M_LRG', np.float64(0.3738856336545757))
[Interation 31] ('M_0_LRG', np.float64(12.520482530731051)) ('M_1_LRG', np.float64(13.85820642082449)) ('alpha_LRG', np.float64(1.039102324283789)) ('f_sigv_LRG', np.float64(0.9680460346469901)) ('log_Mcent_LRG', np.float64(12.827929793664888)) ('sigma_M_LRG', np.float64(0.40314883999502005))
[Interation 31] ('M_0_LRG', np.float64(12.497689990640836)) ('M_1_LRG', np.float64(13.86213570040882)) ('alpha_LRG', np.float64(1.0528306130953768)) ('f_sigv_LRG', np.float64(0.9660458368279135)) ('log_Mcent_LRG', np.float64(12.847506050723387)) ('sigma_M_LRG', np.float64(0.4310466706011064))
[Interation 31] ('M_0_LRG', np.float64(12.410333371472456)) ('M_1_LRG', np.float64(13.869125124990655)) ('alpha_LRG', np.float64(1.0693640650242138)) ('f_sigv_LRG', np.float64(0.9747746557531795)) ('log_Mcent_LRG', np.float64(12.817883938157276)) ('sigma_M_LRG', np.float64(0.39156049613138366))
[Interation 31] ('M_0_LRG', np.float64(12.53925010518699)) ('M_1_LRG', np.float64(13.875540667482436)) ('alpha_LRG', np.float64(1.050656759163451)) ('f_sigv_LRG', np.float64(0.9602556348567095)) ('log_Mcent_LRG', np.float64(12.86905886955155)) ('sigma_M_LRG', np.float64(0.4502598312484082))
[Interation 31] ('M_0_LRG', np.float64(12.463097607175587)) ('M_1_LRG', np.float64(13.872503975697652)) ('alpha_LRG', np.float64(1.0800750820952396)) ('f_sigv_LRG', np.float64(0.9638910717376084)) ('log_Mcent_LRG', np.float64(12.848734144807036)) ('sigma_M_LRG', np.float64(0.427131214736258))
[Interation 31] ('M_0_LRG', np.float64(12.432410869572244)) ('M_1_LRG', np.float64(13.883594934142897)) ('alpha_LRG', np.float64(1.0768358852635438)) ('f_sigv_LRG', np.float64(0.97855723082868)) ('log_Mcent_LRG', np.float64(12.862964224013712)) ('sigma_M_LRG', np.float64(0.43698607633586783))
[Interation 31] ('M_0_LRG', np.float64(12.481418944306341)) ('M_1_LRG', np.float64(13.881407041544819)) ('alpha_LRG', np.float64(1.0760460395106457)) ('f_sigv_LRG', np.float64(0.9556650328629026)) ('log_Mcent_LRG', np.float64(12.871934737071602)) ('sigma_M_LRG', np.float64(0.45410789399474316))
[Interation 31] ('M_0_LRG', np.float64(12.458270641188921)) ('M_1_LRG', np.float64(13.894355001271396)) ('alpha_LRG', np.float64(1.077036105170956)) ('f_sigv_LRG', np.float64(0.9562346573153472)) ('log_Mcent_LRG', np.float64(12.891132141942874)) ('sigma_M_LRG', np.float64(0.46959226587403163))
[Interation 31] ('M_0_LRG', np.float64(12.466597317582389)) ('M_1_LRG', np.float64(13.884469936741361)) ('alpha_LRG', np.float64(1.0597193221474985)) ('f_sigv_LRG', np.float64(0.9841775350915009)) ('log_Mcent_LRG', np.float64(12.87644030054908)) ('sigma_M_LRG', np.float64(0.4539615076869422))
[Interation 31] ('M_0_LRG', np.float64(12.475722711264455)) ('M_1_LRG', np.float64(13.865042100310804)) ('alpha_LRG', np.float64(1.0505519194107638)) ('f_sigv_LRG', np.float64(0.9724993628992976)) ('log_Mcent_LRG', np.float64(12.82821526993241)) ('sigma_M_LRG', np.float64(0.40683344419117295))
[Interation 31] chi2=807.3481013931312
[Interation 32] ('M_0_LRG', np.float64(12.515661739709408)) ('M_1_LRG', np.float64(13.853819056261118)) ('alpha_LRG', np.float64(1.056919337722859)) ('f_sigv_LRG', np.float64(0.9794276873735653)) ('log_Mcent_LRG', np.float64(12.815789255489175)) ('sigma_M_LRG', np.float64(0.38842924840396087))
[Interation 31] chi2=871.3695558603455
[Interation 31] chi2=881.2230499707877
[Interation 31] chi2=791.2963652686508
[Interation 32] ('M_0_LRG', np.float64(12.48605245693298)) ('M_1_LRG', np.float64(13.86648804029093)) ('alpha_LRG', np.float64(1.0461690560122616)) ('f_sigv_LRG', np.float64(0.9894014182896992)) ('log_Mcent_LRG', np.float64(12.826627269097896)) ('sigma_M_LRG', np.float64(0.4029223892426109))
[Interation 31] chi2=855.3571119528714
[Interation 31] chi2=872.7246169894756
[Interation 32] ('M_0_LRG', np.float64(12.465145506113279)) ('M_1_LRG', np.float64(13.883963497092537)) ('alpha_LRG', np.float64(1.0694702802455613)) ('f_sigv_LRG', np.float64(0.9856641537973688)) ('log_Mcent_LRG', np.float64(12.856450848337579)) ('sigma_M_LRG', np.float64(0.4261328674450906))
[Interation 31] chi2=775.7666801629003
[Interation 31] chi2=904.2335869275428
[Interation 31] chi2=821.7949370128626
[Interation 31] chi2=822.6555324319355
[Interation 32] ('M_0_LRG', np.float64(12.440185896881049)) ('M_1_LRG', np.float64(13.85169767141077)) ('alpha_LRG', np.float64(1.0793725523228312)) ('f_sigv_LRG', np.float64(0.998767804605813)) ('log_Mcent_LRG', np.float64(12.810932445940367)) ('sigma_M_LRG', np.float64(0.37997768987714103))
[Interation 31] chi2=930.0020672142963
[Interation 31] chi2=857.8910880087557
[Interation 32] chi2=764.2694651322008
[Interation 32] chi2=842.9197661718118
[Interation 32] chi2=818.1107430634386
[Interation 32] chi2=857.0883843406177
[Interation 33] ('M_0_LRG', np.float64(12.475227103493852)) ('M_1_LRG', np.float64(13.865484365343196)) ('alpha_LRG', np.float64(1.0616566866087092)) ('f_sigv_LRG', np.float64(0.9701072356515089)) ('log_Mcent_LRG', np.float64(12.841995866891178)) ('sigma_M_LRG', np.float64(0.4227670552911536))
[Interation 33] ('M_0_LRG', np.float64(12.5025659063149)) ('M_1_LRG', np.float64(13.849687463439135)) ('alpha_LRG', np.float64(1.037598807563411)) ('f_sigv_LRG', np.float64(0.9780427613179352)) ('log_Mcent_LRG', np.float64(12.820243823585528)) ('sigma_M_LRG', np.float64(0.4045664403084137))
[Interation 33] ('M_0_LRG', np.float64(12.51869184433263)) ('M_1_LRG', np.float64(13.851275501198202)) ('alpha_LRG', np.float64(1.0590716230090322)) ('f_sigv_LRG', np.float64(0.9692541341853658)) ('log_Mcent_LRG', np.float64(12.830196106162456)) ('sigma_M_LRG', np.float64(0.41211480098150277))
[Interation 33] ('M_0_LRG', np.float64(12.56040619164734)) ('M_1_LRG', np.float64(13.843335519509928)) ('alpha_LRG', np.float64(1.016654567872805)) ('f_sigv_LRG', np.float64(0.9734062655319013)) ('log_Mcent_LRG', np.float64(12.822273621612021)) ('sigma_M_LRG', np.float64(0.4098939028938079))
[Interation 33] chi2=818.7077494471341
[Interation 33] chi2=863.7787625308605
[Interation 33] chi2=821.9170560887842
[Interation 33] chi2=802.3306316289312
[Interation 32] ('M_0_LRG', np.float64(12.543290631665128)) ('M_1_LRG', np.float64(13.845304587216864)) ('alpha_LRG', np.float64(1.0313539530197195)) ('f_sigv_LRG', np.float64(0.9702075050889216)) ('log_Mcent_LRG', np.float64(12.824207416473076)) ('sigma_M_LRG', np.float64(0.4112456428143872))
[Interation 32] ('M_0_LRG', np.float64(12.496410066217058)) ('M_1_LRG', np.float64(13.858930351527357)) ('alpha_LRG', np.float64(1.0566583602199118)) ('f_sigv_LRG', np.float64(0.9730395410926856)) ('log_Mcent_LRG', np.float64(12.832611676158868)) ('sigma_M_LRG', np.float64(0.4115502704143083))
[Interation 32] ('M_0_LRG', np.float64(12.505159346330434)) ('M_1_LRG', np.float64(13.848728171487348)) ('alpha_LRG', np.float64(1.0530767001050967)) ('f_sigv_LRG', np.float64(0.9690862019311511)) ('log_Mcent_LRG', np.float64(12.820264230076981)) ('sigma_M_LRG', np.float64(0.4002426633923828))
[Interation 32] ('M_0_LRG', np.float64(12.52741195439317)) ('M_1_LRG', np.float64(13.857055145461105)) ('alpha_LRG', np.float64(1.0505630251472788)) ('f_sigv_LRG', np.float64(0.9636747449790516)) ('log_Mcent_LRG', np.float64(12.83907197936741)) ('sigma_M_LRG', np.float64(0.423157674553106))
[Interation 32] ('M_0_LRG', np.float64(12.56958444627404)) ('M_1_LRG', np.float64(13.839391562005389)) ('alpha_LRG', np.float64(1.0113968783364025)) ('f_sigv_LRG', np.float64(0.9715894875210173)) ('log_Mcent_LRG', np.float64(12.808931532882651)) ('sigma_M_LRG', np.float64(0.39491615780227474))
[Interation 32] ('M_0_LRG', np.float64(12.510059231871866)) ('M_1_LRG', np.float64(13.848489411667362)) ('alpha_LRG', np.float64(1.0485414459628843)) ('f_sigv_LRG', np.float64(0.9681449573852778)) ('log_Mcent_LRG', np.float64(12.823045968010005)) ('sigma_M_LRG', np.float64(0.4081166466616512))
[Interation 32] ('M_0_LRG', np.float64(12.484547407864618)) ('M_1_LRG', np.float64(13.847608918464507)) ('alpha_LRG', np.float64(1.0617834351301674)) ('f_sigv_LRG', np.float64(0.9707655629047132)) ('log_Mcent_LRG', np.float64(12.826156099895094)) ('sigma_M_LRG', np.float64(0.4121404810753866))
[Interation 32] ('M_0_LRG', np.float64(12.435536853412632)) ('M_1_LRG', np.float64(13.867395327581422)) ('alpha_LRG', np.float64(1.0722585127302893)) ('f_sigv_LRG', np.float64(0.972663338917238)) ('log_Mcent_LRG', np.float64(12.844488859530998)) ('sigma_M_LRG', np.float64(0.42793802047302126))
[Interation 32] ('M_0_LRG', np.float64(12.517089454174222)) ('M_1_LRG', np.float64(13.853621931423621)) ('alpha_LRG', np.float64(1.0581054789471531)) ('f_sigv_LRG', np.float64(0.9678544129754492)) ('log_Mcent_LRG', np.float64(12.839462547775366)) ('sigma_M_LRG', np.float64(0.42289479408399566))
[Interation 32] ('M_0_LRG', np.float64(12.504173393949536)) ('M_1_LRG', np.float64(13.8597638705529)) ('alpha_LRG', np.float64(1.0562593608581934)) ('f_sigv_LRG', np.float64(0.9652777595799432)) ('log_Mcent_LRG', np.float64(12.841664175347098)) ('sigma_M_LRG', np.float64(0.4283216386573539))
[Interation 32] ('M_0_LRG', np.float64(12.534330269278085)) ('M_1_LRG', np.float64(13.849912635269586)) ('alpha_LRG', np.float64(1.0314529351205468)) ('f_sigv_LRG', np.float64(0.975512887221946)) ('log_Mcent_LRG', np.float64(12.820824176545877)) ('sigma_M_LRG', np.float64(0.40131180254620846))
[Interation 32] ('M_0_LRG', np.float64(12.539754720327881)) ('M_1_LRG', np.float64(13.843824852776988)) ('alpha_LRG', np.float64(1.0369576362923658)) ('f_sigv_LRG', np.float64(0.9671989465422979)) ('log_Mcent_LRG', np.float64(12.817712246413809)) ('sigma_M_LRG', np.float64(0.4034911768749727))
[Interation 32] chi2=880.7616512005307
[Interation 32] chi2=886.6582486897316
[Interation 32] chi2=874.6251754369599
[Interation 32] chi2=917.4012766187235
[Interation 32] chi2=998.7393399550502
[Interation 32] chi2=811.6220510656701
[Interation 32] chi2=840.4292916922992
[Interation 32] chi2=809.650762009246
[Interation 32] chi2=856.8697201589902
[Interation 32] chi2=858.1470862159947
[Interation 32] chi2=769.2307990664916
[Interation 32] chi2=897.9041806670914
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_14.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.51587484606627)) ('M_1_LRG', np.float64(13.856926690761764)) ('alpha_LRG', np.float64(1.0521207660578398)) ('f_sigv_LRG', np.float64(0.9717874771536845)) ('log_Mcent_LRG', np.float64(12.837273590191463)) ('sigma_M_LRG', np.float64(0.4190175340903964))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3600423336029053
Start satellite assignement
Satellite assignement done 0.07849860191345215
LRG mock catalogue done 0.15200042724609375
584092 central galaxies, 95403 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6818633079528809
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_14.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:35
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:35
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:35
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:35
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:35
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:35
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:35
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:35
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:35
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:35
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:35
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:35
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:35
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:35
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:35
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:35
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:35
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:35
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:35
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:35
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:35
Load rppi measurements at z0.6-0.8 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:36
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:36
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:30
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 34] ('M_0_LRG', np.float64(12.291888846875324)) ('M_1_LRG', np.float64(13.835828709612496)) ('alpha_LRG', np.float64(1.1148811704794608)) ('f_sigv_LRG', np.float64(0.9869239273075237)) ('log_Mcent_LRG', np.float64(12.769698026517236)) ('sigma_M_LRG', np.float64(0.33850913224973694))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 34] ('M_0_LRG', np.float64(12.474141549369902)) ('M_1_LRG', np.float64(13.944914576858519)) ('alpha_LRG', np.float64(0.9940001770828507)) ('f_sigv_LRG', np.float64(0.9917372578879453)) ('log_Mcent_LRG', np.float64(12.91497659398733)) ('sigma_M_LRG', np.float64(0.4935595881813327))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 34] ('M_0_LRG', np.float64(12.586718455714676)) ('M_1_LRG', np.float64(13.87213254291979)) ('alpha_LRG', np.float64(1.0019490497493797)) ('f_sigv_LRG', np.float64(0.9410375796315865)) ('log_Mcent_LRG', np.float64(12.868066047765925)) ('sigma_M_LRG', np.float64(0.4520325356761089))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 34] ('M_0_LRG', np.float64(12.553998717383271)) ('M_1_LRG', np.float64(13.804299273537008)) ('alpha_LRG', np.float64(1.0708194282764079)) ('f_sigv_LRG', np.float64(0.9756618113505624)) ('log_Mcent_LRG', np.float64(12.787337719350402)) ('sigma_M_LRG', np.float64(0.38050883283924763))
[Interation 34] chi2=847.9737581973613
[Interation 34] chi2=880.9233410816657
[Interation 34] chi2=867.6879059042486
[Interation 34] chi2=866.5082991619954
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.407458762913178)) ('M_1_LRG', np.float64(13.839047375881039)) ('alpha_LRG', np.float64(1.0675173393615696)) ('f_sigv_LRG', np.float64(0.9844843010625484)) ('log_Mcent_LRG', np.float64(12.797166610988109)) ('sigma_M_LRG', np.float64(0.3893731222821823))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.499130032128344)) ('M_1_LRG', np.float64(13.832773722274938)) ('alpha_LRG', np.float64(1.0424673507865025)) ('f_sigv_LRG', np.float64(0.9859361511431983)) ('log_Mcent_LRG', np.float64(12.805462027032203)) ('sigma_M_LRG', np.float64(0.38347593119305334))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.370655600645978)) ('M_1_LRG', np.float64(13.853066939850676)) ('alpha_LRG', np.float64(1.1580094055509873)) ('f_sigv_LRG', np.float64(0.9571327949210965)) ('log_Mcent_LRG', np.float64(12.851658501855729)) ('sigma_M_LRG', np.float64(0.4433922107098542))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.475215336884094)) ('M_1_LRG', np.float64(13.899834217332666)) ('alpha_LRG', np.float64(1.0360960487410036)) ('f_sigv_LRG', np.float64(1.037057982141921)) ('log_Mcent_LRG', np.float64(12.84260470992713)) ('sigma_M_LRG', np.float64(0.4047659538640688))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.394996111276443)) ('M_1_LRG', np.float64(13.890889786002624)) ('alpha_LRG', np.float64(1.0894246353695853)) ('f_sigv_LRG', np.float64(0.990184137697785)) ('log_Mcent_LRG', np.float64(12.837281126394227)) ('sigma_M_LRG', np.float64(0.41309090092783873))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.311742780182371)) ('M_1_LRG', np.float64(13.870818265624058)) ('alpha_LRG', np.float64(1.1289630427967074)) ('f_sigv_LRG', np.float64(0.9864436503072613)) ('log_Mcent_LRG', np.float64(12.806254313266038)) ('sigma_M_LRG', np.float64(0.3710445734103395))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.290105743664931)) ('M_1_LRG', np.float64(13.898319839825131)) ('alpha_LRG', np.float64(1.1287189819388168)) ('f_sigv_LRG', np.float64(0.9930896658062813)) ('log_Mcent_LRG', np.float64(12.858347608232785)) ('sigma_M_LRG', np.float64(0.4355155077007568))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.248814952365915)) ('M_1_LRG', np.float64(13.871246590097774)) ('alpha_LRG', np.float64(1.1400847817096629)) ('f_sigv_LRG', np.float64(0.9965980868443792)) ('log_Mcent_LRG', np.float64(12.83818658521392)) ('sigma_M_LRG', np.float64(0.4258516494349255))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.156909722640538)) ('M_1_LRG', np.float64(13.867159296986468)) ('alpha_LRG', np.float64(1.2005836046855138)) ('f_sigv_LRG', np.float64(1.0022443729502528)) ('log_Mcent_LRG', np.float64(12.822569184425639)) ('sigma_M_LRG', np.float64(0.39141308263408925))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.604692763988695)) ('M_1_LRG', np.float64(13.85177032915383)) ('alpha_LRG', np.float64(0.9962707839098042)) ('f_sigv_LRG', np.float64(0.9766771277369196)) ('log_Mcent_LRG', np.float64(12.813534629725893)) ('sigma_M_LRG', np.float64(0.3901182699060261))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.36048851532673)) ('M_1_LRG', np.float64(13.861501304486945)) ('alpha_LRG', np.float64(1.0810549678464672)) ('f_sigv_LRG', np.float64(1.009979236781435)) ('log_Mcent_LRG', np.float64(12.811152988732237)) ('sigma_M_LRG', np.float64(0.3818114915155522))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.329610672098648)) ('M_1_LRG', np.float64(13.83738503271166)) ('alpha_LRG', np.float64(1.096284100311434)) ('f_sigv_LRG', np.float64(0.9763412541945683)) ('log_Mcent_LRG', np.float64(12.773787178242477)) ('sigma_M_LRG', np.float64(0.350607977035707))
[Interation 33] chi2=836.7563828122748
[Interation 33] chi2=862.0558970273557
[Interation 33] chi2=927.1789052596839
[Interation 33] chi2=896.5881652660723
[Interation 33] chi2=866.2701954863458
[Interation 33] chi2=918.9502288932085
[Interation 33] chi2=985.445559929926
[Interation 33] chi2=847.538894075785
[Interation 33] chi2=886.5513949071051
[Interation 33] chi2=851.4233020700349
[Interation 33] chi2=933.4061307345535
[Interation 33] chi2=845.1656975986662
[Interation 35] ('M_0_LRG', np.float64(12.403242407099928)) ('M_1_LRG', np.float64(13.902979470975126)) ('alpha_LRG', np.float64(1.0781679660185)) ('f_sigv_LRG', np.float64(0.9731546192293994)) ('log_Mcent_LRG', np.float64(12.88727334993518)) ('sigma_M_LRG', np.float64(0.46650089218800633))
[Interation 35] ('M_0_LRG', np.float64(12.427316105231021)) ('M_1_LRG', np.float64(13.92183238335963)) ('alpha_LRG', np.float64(1.0600697900640246)) ('f_sigv_LRG', np.float64(0.9823900127606736)) ('log_Mcent_LRG', np.float64(12.906974874611294)) ('sigma_M_LRG', np.float64(0.480440819399234))
[Interation 35] ('M_0_LRG', np.float64(12.429843766472132)) ('M_1_LRG', np.float64(13.88897768623666)) ('alpha_LRG', np.float64(1.072890464549997)) ('f_sigv_LRG', np.float64(0.9645156847293496)) ('log_Mcent_LRG', np.float64(12.862909822802301)) ('sigma_M_LRG', np.float64(0.43985313444931307))
[Interation 35] ('M_0_LRG', np.float64(12.381353840067648)) ('M_1_LRG', np.float64(13.860174837023356)) ('alpha_LRG', np.float64(1.1045689809914647)) ('f_sigv_LRG', np.float64(0.9815789548455448)) ('log_Mcent_LRG', np.float64(12.824592407489698)) ('sigma_M_LRG', np.float64(0.40643954115539377))
[Interation 35] chi2=808.1511683739977
[Interation 35] chi2=845.3765588222469
[Interation 35] chi2=883.7662750206961
[Interation 35] chi2=794.1244516484284
[Interation 34] ('M_0_LRG', np.float64(12.506576152183227)) ('M_1_LRG', np.float64(13.891846129372235)) ('alpha_LRG', np.float64(1.0415886286263938)) ('f_sigv_LRG', np.float64(0.9788402963000215)) ('log_Mcent_LRG', np.float64(12.870289222910856)) ('sigma_M_LRG', np.float64(0.4453964931089621))
[Interation 34] ('M_0_LRG', np.float64(12.41807260011761)) ('M_1_LRG', np.float64(13.834320580433275)) ('alpha_LRG', np.float64(1.0868342913173505)) ('f_sigv_LRG', np.float64(0.969549280417626)) ('log_Mcent_LRG', np.float64(12.798884483709884)) ('sigma_M_LRG', np.float64(0.38115025141672054))
[Interation 34] ('M_0_LRG', np.float64(12.347920877660433)) ('M_1_LRG', np.float64(13.894834836689421)) ('alpha_LRG', np.float64(1.1002081988259713)) ('f_sigv_LRG', np.float64(0.9806653121541251)) ('log_Mcent_LRG', np.float64(12.857973380294384)) ('sigma_M_LRG', np.float64(0.43091432306603916))
[Interation 34] ('M_0_LRG', np.float64(12.430821292808503)) ('M_1_LRG', np.float64(13.886252253985287)) ('alpha_LRG', np.float64(1.0683647237633123)) ('f_sigv_LRG', np.float64(0.979704773464928)) ('log_Mcent_LRG', np.float64(12.861891877150573)) ('sigma_M_LRG', np.float64(0.43896458857310877))
[Interation 34] ('M_0_LRG', np.float64(12.444635704509656)) ('M_1_LRG', np.float64(13.881305540257113)) ('alpha_LRG', np.float64(1.0629536095511518)) ('f_sigv_LRG', np.float64(0.9671842419034359)) ('log_Mcent_LRG', np.float64(12.848849519026105)) ('sigma_M_LRG', np.float64(0.42564655576112675))
[Interation 34] ('M_0_LRG', np.float64(12.366780544015535)) ('M_1_LRG', np.float64(13.929842734859474)) ('alpha_LRG', np.float64(1.0853217206481656)) ('f_sigv_LRG', np.float64(0.9708776619828249)) ('log_Mcent_LRG', np.float64(12.911017894961963)) ('sigma_M_LRG', np.float64(0.4835981279796825))
[Interation 34] ('M_0_LRG', np.float64(12.389052192562533)) ('M_1_LRG', np.float64(13.875765571592503)) ('alpha_LRG', np.float64(1.0852282128765316)) ('f_sigv_LRG', np.float64(0.9811268107399738)) ('log_Mcent_LRG', np.float64(12.837041870097064)) ('sigma_M_LRG', np.float64(0.41621530077263064))
[Interation 34] ('M_0_LRG', np.float64(12.433774960204717)) ('M_1_LRG', np.float64(13.83550845043174)) ('alpha_LRG', np.float64(1.070323122753497)) ('f_sigv_LRG', np.float64(0.9850338697181662)) ('log_Mcent_LRG', np.float64(12.795715501949683)) ('sigma_M_LRG', np.float64(0.37695526960994485))
[Interation 34] ('M_0_LRG', np.float64(12.509264279775321)) ('M_1_LRG', np.float64(13.85819412390572)) ('alpha_LRG', np.float64(1.0286616757340632)) ('f_sigv_LRG', np.float64(0.9841083201297611)) ('log_Mcent_LRG', np.float64(12.824345817783406)) ('sigma_M_LRG', np.float64(0.40503255123377807))
[Interation 34] ('M_0_LRG', np.float64(12.391565490450551)) ('M_1_LRG', np.float64(13.867521502125289)) ('alpha_LRG', np.float64(1.0896933866379377)) ('f_sigv_LRG', np.float64(0.9771565595648075)) ('log_Mcent_LRG', np.float64(12.838155956897387)) ('sigma_M_LRG', np.float64(0.4192564761995559))
[Interation 34] ('M_0_LRG', np.float64(12.476446456802856)) ('M_1_LRG', np.float64(13.874880755029224)) ('alpha_LRG', np.float64(1.0519611334016687)) ('f_sigv_LRG', np.float64(0.9872962463302772)) ('log_Mcent_LRG', np.float64(12.854558669289675)) ('sigma_M_LRG', np.float64(0.4353570672809752))
[Interation 34] ('M_0_LRG', np.float64(12.487992471278597)) ('M_1_LRG', np.float64(13.877816926859534)) ('alpha_LRG', np.float64(1.0346722835753062)) ('f_sigv_LRG', np.float64(0.9879093579153765)) ('log_Mcent_LRG', np.float64(12.847708649493889)) ('sigma_M_LRG', np.float64(0.42523848741132453))
[Interation 34] chi2=860.5648472278209
[Interation 34] chi2=769.1101548671448
[Interation 34] chi2=852.1314138889509
[Interation 34] chi2=916.6972937731724
[Interation 34] chi2=873.0365775835854
[Interation 34] chi2=876.5678566156201
[Interation 34] chi2=878.8549983300768
[Interation 34] chi2=877.4080819624689
[Interation 34] chi2=844.5173752226788
[Interation 34] chi2=853.3452995130554
[Interation 34] chi2=867.0905546273827
[Interation 34] chi2=853.6940164092883
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_15.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_15.npy
Set number of threads to 32
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.439058406279221)) ('M_1_LRG', np.float64(13.903720090280972)) ('alpha_LRG', np.float64(1.0593034883513848)) ('f_sigv_LRG', np.float64(0.9775208746666083)) ('log_Mcent_LRG', np.float64(12.882934238739166)) ('sigma_M_LRG', np.float64(0.4613753213427146))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3652184009552002
Start satellite assignement
Satellite assignement done 0.07628297805786133
LRG mock catalogue done 0.14475107192993164
548658 central galaxies, 91152 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.702995777130127
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_15.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:36
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:37
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:37
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:35
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:37
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:37
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:37
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:35
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:37
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:35
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:35
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:37
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:37
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:37
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:35
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:37
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:37
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:37
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:37
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:37
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:37
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:37
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:36
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:36
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:36
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:37
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:37
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:37
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:37
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:37
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:31
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:31
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 36] ('M_0_LRG', np.float64(12.42633462893953)) ('M_1_LRG', np.float64(13.387350066740105)) ('alpha_LRG', np.float64(1.122880661162849)) ('f_sigv_LRG', np.float64(1.046860402776712)) ('log_Mcent_LRG', np.float64(12.612868589918948)) ('sigma_M_LRG', np.float64(0.4955152338166393))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 36] ('M_0_LRG', np.float64(12.177980833162952)) ('M_1_LRG', np.float64(14.04602452822666)) ('alpha_LRG', np.float64(1.0744409044325836)) ('f_sigv_LRG', np.float64(1.029444907500973)) ('log_Mcent_LRG', np.float64(12.67532947265307)) ('sigma_M_LRG', np.float64(0.22011385069387335))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 36] ('M_0_LRG', np.float64(12.485085538803967)) ('M_1_LRG', np.float64(13.79399992546717)) ('alpha_LRG', np.float64(0.9968337134900974)) ('f_sigv_LRG', np.float64(1.0298896025351159)) ('log_Mcent_LRG', np.float64(12.690980767472047)) ('sigma_M_LRG', np.float64(0.28676604691926044))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 36] ('M_0_LRG', np.float64(12.404578532185194)) ('M_1_LRG', np.float64(13.856862532121648)) ('alpha_LRG', np.float64(1.1096114101861234)) ('f_sigv_LRG', np.float64(0.897806077233545)) ('log_Mcent_LRG', np.float64(12.734092028004396)) ('sigma_M_LRG', np.float64(0.39778158525599794))
[Interation 36] chi2=5962.014477505066
[Interation 36] chi2=4421.6943112940035
[Interation 36] chi2=1227.1161864177177
[Interation 36] chi2=2366.3134251477622
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.718505389020203)) ('M_1_LRG', np.float64(13.565641014333618)) ('alpha_LRG', np.float64(0.8202664933351385)) ('f_sigv_LRG', np.float64(0.9558233094351561)) ('log_Mcent_LRG', np.float64(12.758095126000097)) ('sigma_M_LRG', np.float64(0.49231675290372234))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.515057202133578)) ('M_1_LRG', np.float64(13.871387645012591)) ('alpha_LRG', np.float64(0.8561847976633522)) ('f_sigv_LRG', np.float64(0.9854086658351071)) ('log_Mcent_LRG', np.float64(12.875204341740444)) ('sigma_M_LRG', np.float64(0.5343380013131812))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.546371081073078)) ('M_1_LRG', np.float64(13.776973900666071)) ('alpha_LRG', np.float64(0.7905982774559317)) ('f_sigv_LRG', np.float64(1.1751690112123672)) ('log_Mcent_LRG', np.float64(12.772243487747698)) ('sigma_M_LRG', np.float64(0.37598505277027583))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.742538760703132)) ('M_1_LRG', np.float64(13.650462883630487)) ('alpha_LRG', np.float64(1.010403838410998)) ('f_sigv_LRG', np.float64(1.0410123106064317)) ('log_Mcent_LRG', np.float64(12.685802908403948)) ('sigma_M_LRG', np.float64(0.2671323870423457))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.735126640503355)) ('M_1_LRG', np.float64(13.921992638428712)) ('alpha_LRG', np.float64(0.8938457423062991)) ('f_sigv_LRG', np.float64(0.9091999059250504)) ('log_Mcent_LRG', np.float64(12.807386424459978)) ('sigma_M_LRG', np.float64(0.32054529356303807))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.580924928880107)) ('M_1_LRG', np.float64(13.927330976180212)) ('alpha_LRG', np.float64(0.677563276887237)) ('f_sigv_LRG', np.float64(0.9523626623100753)) ('log_Mcent_LRG', np.float64(12.730366210017236)) ('sigma_M_LRG', np.float64(0.37327002801383413))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.268437624901592)) ('M_1_LRG', np.float64(13.906438183726255)) ('alpha_LRG', np.float64(1.0571553716583673)) ('f_sigv_LRG', np.float64(1.0779779777663399)) ('log_Mcent_LRG', np.float64(12.715499337359775)) ('sigma_M_LRG', np.float64(0.22824677831873086))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.704737353582987)) ('M_1_LRG', np.float64(13.946053765667184)) ('alpha_LRG', np.float64(0.9517672568658797)) ('f_sigv_LRG', np.float64(1.0519090969022544)) ('log_Mcent_LRG', np.float64(12.850880284311646)) ('sigma_M_LRG', np.float64(0.3177083872874953))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.642601692636841)) ('M_1_LRG', np.float64(13.924957230880445)) ('alpha_LRG', np.float64(0.9797019609907812)) ('f_sigv_LRG', np.float64(0.9970310319016001)) ('log_Mcent_LRG', np.float64(12.731636617298177)) ('sigma_M_LRG', np.float64(0.10466980851932889))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.479683538132726)) ('M_1_LRG', np.float64(13.719949543491282)) ('alpha_LRG', np.float64(1.2610140409741024)) ('f_sigv_LRG', np.float64(0.9624100220397825)) ('log_Mcent_LRG', np.float64(12.899731418305088)) ('sigma_M_LRG', np.float64(0.4556946458171826))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.956925635848888)) ('M_1_LRG', np.float64(13.806109801890353)) ('alpha_LRG', np.float64(0.9487431973166714)) ('f_sigv_LRG', np.float64(0.7977213871741544)) ('log_Mcent_LRG', np.float64(12.789684607249841)) ('sigma_M_LRG', np.float64(0.42633344575201604))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.90470791250682)) ('M_1_LRG', np.float64(13.909038608592033)) ('alpha_LRG', np.float64(0.8915558088799942)) ('f_sigv_LRG', np.float64(0.8554154519931657)) ('log_Mcent_LRG', np.float64(12.806768894282701)) ('sigma_M_LRG', np.float64(0.37207217040425944))
[Interation 35] chi2=2017.7112987107712
[Interation 35] chi2=1398.8320390886709
[Interation 35] chi2=1502.8866056017725
[Interation 35] chi2=1668.847868936729
[Interation 35] chi2=2170.936800928172
[Interation 35] chi2=1244.484352236312
[Interation 35] chi2=1998.6199415103063
[Interation 35] chi2=1225.5430569157807
[Interation 35] chi2=1692.072938556018
[Interation 35] chi2=6935.742781976321
[Interation 35] chi2=2471.661499282841
[Interation 35] chi2=1940.013880236298
[Interation 37] ('M_0_LRG', np.float64(12.438004828605415)) ('M_1_LRG', np.float64(13.87876905715339)) ('alpha_LRG', np.float64(1.0746746755951795)) ('f_sigv_LRG', np.float64(0.9740069302959131)) ('log_Mcent_LRG', np.float64(12.864433264525752)) ('sigma_M_LRG', np.float64(0.4502631274203183))
[Interation 37] ('M_0_LRG', np.float64(12.40328427422651)) ('M_1_LRG', np.float64(13.898886119443844)) ('alpha_LRG', np.float64(1.069223388533862)) ('f_sigv_LRG', np.float64(0.9958695116701265)) ('log_Mcent_LRG', np.float64(12.862275786339396)) ('sigma_M_LRG', np.float64(0.43460645032003))
[Interation 37] ('M_0_LRG', np.float64(12.429890981700852)) ('M_1_LRG', np.float64(13.876767695807278)) ('alpha_LRG', np.float64(1.081865956257111)) ('f_sigv_LRG', np.float64(0.97417409320606)) ('log_Mcent_LRG', np.float64(12.84760272322693)) ('sigma_M_LRG', np.float64(0.4214777282050345))
[Interation 37] ('M_0_LRG', np.float64(12.42361254702148)) ('M_1_LRG', np.float64(13.85876201917322)) ('alpha_LRG', np.float64(1.0901827944079716)) ('f_sigv_LRG', np.float64(0.9729271146648699)) ('log_Mcent_LRG', np.float64(12.82501183186288)) ('sigma_M_LRG', np.float64(0.4026224531083592))
[Interation 37] chi2=855.9768162418278
[Interation 37] chi2=786.5083002481557
[Interation 37] chi2=828.3967111408335
[Interation 37] chi2=805.7176856666542
[Interation 36] ('M_0_LRG', np.float64(12.382004523800504)) ('M_1_LRG', np.float64(13.840277626790227)) ('alpha_LRG', np.float64(1.1114539758446136)) ('f_sigv_LRG', np.float64(0.9698292087278746)) ('log_Mcent_LRG', np.float64(12.810953065605817)) ('sigma_M_LRG', np.float64(0.3908381826886307))
[Interation 36] ('M_0_LRG', np.float64(12.431346522317268)) ('M_1_LRG', np.float64(13.87753669036228)) ('alpha_LRG', np.float64(1.0617785456400985)) ('f_sigv_LRG', np.float64(0.9844856852514513)) ('log_Mcent_LRG', np.float64(12.850979467754538)) ('sigma_M_LRG', np.float64(0.4314407258287908))
[Interation 36] ('M_0_LRG', np.float64(12.406092686452622)) ('M_1_LRG', np.float64(13.833576738870407)) ('alpha_LRG', np.float64(1.0851471394952197)) ('f_sigv_LRG', np.float64(0.9805298283943851)) ('log_Mcent_LRG', np.float64(12.77759603881398)) ('sigma_M_LRG', np.float64(0.3496377320028251))
[Interation 36] ('M_0_LRG', np.float64(12.495516337210445)) ('M_1_LRG', np.float64(13.882601377874654)) ('alpha_LRG', np.float64(1.0530741236015007)) ('f_sigv_LRG', np.float64(0.9552253684775246)) ('log_Mcent_LRG', np.float64(12.864595335428792)) ('sigma_M_LRG', np.float64(0.4466052328629698))
[Interation 36] ('M_0_LRG', np.float64(12.467538892907822)) ('M_1_LRG', np.float64(13.867654042716145)) ('alpha_LRG', np.float64(1.0554066961898594)) ('f_sigv_LRG', np.float64(0.9759119072297623)) ('log_Mcent_LRG', np.float64(12.836067693165715)) ('sigma_M_LRG', np.float64(0.41461926043683783))
[Interation 36] ('M_0_LRG', np.float64(12.428644764610524)) ('M_1_LRG', np.float64(13.873126442891632)) ('alpha_LRG', np.float64(1.062405979364273)) ('f_sigv_LRG', np.float64(0.9886277199476141)) ('log_Mcent_LRG', np.float64(12.835005254753353)) ('sigma_M_LRG', np.float64(0.4088661062273094))
[Interation 36] ('M_0_LRG', np.float64(12.392982362775498)) ('M_1_LRG', np.float64(13.87416704446521)) ('alpha_LRG', np.float64(1.0798718682281407)) ('f_sigv_LRG', np.float64(0.962445194070308)) ('log_Mcent_LRG', np.float64(12.822554326898054)) ('sigma_M_LRG', np.float64(0.3956574684005071))
[Interation 36] ('M_0_LRG', np.float64(12.433387862334985)) ('M_1_LRG', np.float64(13.8482700120277)) ('alpha_LRG', np.float64(1.0976931093545454)) ('f_sigv_LRG', np.float64(0.9650469549278898)) ('log_Mcent_LRG', np.float64(12.818650743425962)) ('sigma_M_LRG', np.float64(0.4004339710999861))
[Interation 36] ('M_0_LRG', np.float64(12.431837293213533)) ('M_1_LRG', np.float64(13.891172259649638)) ('alpha_LRG', np.float64(1.0707406742028622)) ('f_sigv_LRG', np.float64(0.9820176636256825)) ('log_Mcent_LRG', np.float64(12.856559962107541)) ('sigma_M_LRG', np.float64(0.4301134668323058))
[Interation 36] ('M_0_LRG', np.float64(12.427661088938269)) ('M_1_LRG', np.float64(13.858661556632914)) ('alpha_LRG', np.float64(1.0684034660433883)) ('f_sigv_LRG', np.float64(0.9935597520094852)) ('log_Mcent_LRG', np.float64(12.805737467745958)) ('sigma_M_LRG', np.float64(0.3724012594207918))
[Interation 36] ('M_0_LRG', np.float64(12.485149836191834)) ('M_1_LRG', np.float64(13.868613336383659)) ('alpha_LRG', np.float64(1.05757813392173)) ('f_sigv_LRG', np.float64(0.9648292377821814)) ('log_Mcent_LRG', np.float64(12.83694835712607)) ('sigma_M_LRG', np.float64(0.4152345278417385))
[Interation 36] ('M_0_LRG', np.float64(12.402327219424548)) ('M_1_LRG', np.float64(13.834925284110412)) ('alpha_LRG', np.float64(1.1039208771153057)) ('f_sigv_LRG', np.float64(0.9715728648615456)) ('log_Mcent_LRG', np.float64(12.778176547231269)) ('sigma_M_LRG', np.float64(0.35151832765115154))
[Interation 36] chi2=855.6990268305298
[Interation 36] chi2=793.5484491731478
[Interation 36] chi2=845.019285269252
[Interation 36] chi2=752.5095575943159
[Interation 36] chi2=866.2605069696779
[Interation 36] chi2=843.5079088323205
[Interation 36] chi2=789.4812669730691
[Interation 36] chi2=780.2480541460749
[Interation 36] chi2=701.8405926961452
[Interation 36] chi2=881.8288213347082
[Interation 36] chi2=935.5618319504059
[Interation 36] chi2=847.3354535783388
[Interation 38] ('M_0_LRG', np.float64(12.453337304715214)) ('M_1_LRG', np.float64(13.882072323363657)) ('alpha_LRG', np.float64(1.0692949518100667)) ('f_sigv_LRG', np.float64(0.9675324406312191)) ('log_Mcent_LRG', np.float64(12.857845032447088)) ('sigma_M_LRG', np.float64(0.44045068207626237))
[Interation 38] ('M_0_LRG', np.float64(12.444649306879265)) ('M_1_LRG', np.float64(13.895364547382737)) ('alpha_LRG', np.float64(1.063153642456339)) ('f_sigv_LRG', np.float64(0.976882349457183)) ('log_Mcent_LRG', np.float64(12.869363545957029)) ('sigma_M_LRG', np.float64(0.4438981391427813))
[Interation 38] ('M_0_LRG', np.float64(12.453975722908439)) ('M_1_LRG', np.float64(13.85830394725876)) ('alpha_LRG', np.float64(1.066320877298914)) ('f_sigv_LRG', np.float64(0.9759166792562419)) ('log_Mcent_LRG', np.float64(12.83323838589021)) ('sigma_M_LRG', np.float64(0.4185592687194002))
[Interation 38] ('M_0_LRG', np.float64(12.433266459166088)) ('M_1_LRG', np.float64(13.861774418020254)) ('alpha_LRG', np.float64(1.0691617505226172)) ('f_sigv_LRG', np.float64(0.9840317940685204)) ('log_Mcent_LRG', np.float64(12.826082674417249)) ('sigma_M_LRG', np.float64(0.4011034516988996))
[Interation 38] chi2=792.7236295386745
[Interation 38] chi2=789.6808878364748
[Interation 38] chi2=777.6040920583251
[Interation 38] chi2=836.4593253373623
[Interation 37] ('M_0_LRG', np.float64(12.457804282456202)) ('M_1_LRG', np.float64(13.864358172904316)) ('alpha_LRG', np.float64(1.0676529527085703)) ('f_sigv_LRG', np.float64(0.9733655165762254)) ('log_Mcent_LRG', np.float64(12.835456387198372)) ('sigma_M_LRG', np.float64(0.4157816804486066))
[Interation 37] ('M_0_LRG', np.float64(12.430904147478163)) ('M_1_LRG', np.float64(13.90126315388702)) ('alpha_LRG', np.float64(1.076318912306219)) ('f_sigv_LRG', np.float64(0.9731941806980776)) ('log_Mcent_LRG', np.float64(12.873839155483003)) ('sigma_M_LRG', np.float64(0.44571417910045574))
[Interation 37] ('M_0_LRG', np.float64(12.443695008134501)) ('M_1_LRG', np.float64(13.871143492499593)) ('alpha_LRG', np.float64(1.0723853516991388)) ('f_sigv_LRG', np.float64(0.9781391743828391)) ('log_Mcent_LRG', np.float64(12.84691277799557)) ('sigma_M_LRG', np.float64(0.4295783609532681))
[Interation 37] ('M_0_LRG', np.float64(12.415914196713997)) ('M_1_LRG', np.float64(13.934827418056063)) ('alpha_LRG', np.float64(1.065557447156888)) ('f_sigv_LRG', np.float64(0.9865328355260963)) ('log_Mcent_LRG', np.float64(12.905360220549863)) ('sigma_M_LRG', np.float64(0.4720906107761416))
[Interation 37] ('M_0_LRG', np.float64(12.430986115279541)) ('M_1_LRG', np.float64(13.868506387878321)) ('alpha_LRG', np.float64(1.0753475574768543)) ('f_sigv_LRG', np.float64(0.9730981059257761)) ('log_Mcent_LRG', np.float64(12.840909875976415)) ('sigma_M_LRG', np.float64(0.4251722222939228))
[Interation 37] ('M_0_LRG', np.float64(12.445734752681158)) ('M_1_LRG', np.float64(13.853789083364397)) ('alpha_LRG', np.float64(1.078831753092172)) ('f_sigv_LRG', np.float64(0.9731633079054184)) ('log_Mcent_LRG', np.float64(12.826420226966661)) ('sigma_M_LRG', np.float64(0.4078350737191296))
[Interation 37] ('M_0_LRG', np.float64(12.427434717407788)) ('M_1_LRG', np.float64(13.913980738998957)) ('alpha_LRG', np.float64(1.0689531396887917)) ('f_sigv_LRG', np.float64(0.9787784697449889)) ('log_Mcent_LRG', np.float64(12.894011454844605)) ('sigma_M_LRG', np.float64(0.4710527056067377))
[Interation 37] ('M_0_LRG', np.float64(12.453367742785803)) ('M_1_LRG', np.float64(13.85259636155756)) ('alpha_LRG', np.float64(1.0737799891543913)) ('f_sigv_LRG', np.float64(0.9742746829868285)) ('log_Mcent_LRG', np.float64(12.827147057398749)) ('sigma_M_LRG', np.float64(0.4090222408134151))
[Interation 37] ('M_0_LRG', np.float64(12.486491147641972)) ('M_1_LRG', np.float64(13.820362498524986)) ('alpha_LRG', np.float64(1.0658718404565664)) ('f_sigv_LRG', np.float64(0.9631482918438465)) ('log_Mcent_LRG', np.float64(12.792238949869088)) ('sigma_M_LRG', np.float64(0.38056927716587596))
[Interation 37] ('M_0_LRG', np.float64(12.453145380329602)) ('M_1_LRG', np.float64(13.883774135534939)) ('alpha_LRG', np.float64(1.0635198651217366)) ('f_sigv_LRG', np.float64(0.9787264513449897)) ('log_Mcent_LRG', np.float64(12.85841047308263)) ('sigma_M_LRG', np.float64(0.43623655394959643))
[Interation 37] ('M_0_LRG', np.float64(12.453132088294586)) ('M_1_LRG', np.float64(13.822991124179827)) ('alpha_LRG', np.float64(1.0764063229716085)) ('f_sigv_LRG', np.float64(0.9704022937825785)) ('log_Mcent_LRG', np.float64(12.793935344482017)) ('sigma_M_LRG', np.float64(0.38369244576982164))
[Interation 37] ('M_0_LRG', np.float64(12.447918716815373)) ('M_1_LRG', np.float64(13.872978430347159)) ('alpha_LRG', np.float64(1.0637609533859336)) ('f_sigv_LRG', np.float64(0.9766289778803128)) ('log_Mcent_LRG', np.float64(12.844099257291761)) ('sigma_M_LRG', np.float64(0.4246760740133208))
[Interation 37] chi2=831.218431916242
[Interation 37] chi2=793.958553851285
[Interation 37] chi2=844.2292513435629
[Interation 37] chi2=782.8903869756128
[Interation 37] chi2=764.8539985635175
[Interation 37] chi2=768.5096483418255
[Interation 37] chi2=929.9029466151659
[Interation 37] chi2=830.8065383635885
[Interation 37] chi2=837.2992203286766
[Interation 37] chi2=839.7966277720226
[Interation 37] chi2=880.3309534430762
[Interation 37] chi2=789.0032161158794
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_16.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.41962748868837)) ('M_1_LRG', np.float64(13.916366251921218)) ('alpha_LRG', np.float64(1.0691111068474903)) ('f_sigv_LRG', np.float64(0.9819003555043138)) ('log_Mcent_LRG', np.float64(12.890337478519156)) ('sigma_M_LRG', np.float64(0.46464578412195456))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.32636451721191406
Start satellite assignement
Satellite assignement done 0.09702539443969727
LRG mock catalogue done 0.16780376434326172
540699 central galaxies, 87921 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6745023727416992
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_16.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:43
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:43
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:43
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:43
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:43
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:44
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:44
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:44
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:44
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:44
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:44
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:44
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:44
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:44
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:44
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:44
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:44
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:44
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:44
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:44
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:44
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:44
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:44
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:44
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:44
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:44
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:44
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:44
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:44
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:44
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:37
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:38
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 39] ('M_0_LRG', np.float64(12.535245981308758)) ('M_1_LRG', np.float64(13.730985136892688)) ('alpha_LRG', np.float64(0.9726747707558258)) ('f_sigv_LRG', np.float64(0.9715374345541448)) ('log_Mcent_LRG', np.float64(12.66118811064986)) ('sigma_M_LRG', np.float64(0.24107456925299758))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 39] ('M_0_LRG', np.float64(12.410636894580747)) ('M_1_LRG', np.float64(13.928480021948092)) ('alpha_LRG', np.float64(1.0609225401052758)) ('f_sigv_LRG', np.float64(0.9783640957656738)) ('log_Mcent_LRG', np.float64(12.900756904686117)) ('sigma_M_LRG', np.float64(0.47823769757323276))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 39] ('M_0_LRG', np.float64(12.455796137216046)) ('M_1_LRG', np.float64(13.918604463011281)) ('alpha_LRG', np.float64(1.005802855920085)) ('f_sigv_LRG', np.float64(1.0101162925225537)) ('log_Mcent_LRG', np.float64(12.917169603369151)) ('sigma_M_LRG', np.float64(0.4997872961967671))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 39] ('M_0_LRG', np.float64(12.505376337301096)) ('M_1_LRG', np.float64(13.974957329032234)) ('alpha_LRG', np.float64(0.9715722757535984)) ('f_sigv_LRG', np.float64(1.011885199561669)) ('log_Mcent_LRG', np.float64(12.92237206005033)) ('sigma_M_LRG', np.float64(0.46809113873143365))
[Interation 39] chi2=817.836341047114
[Interation 39] chi2=1005.3805195596275
[Interation 39] chi2=946.3874490836268
[Interation 39] chi2=967.0609670245016
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.366872434084584)) ('M_1_LRG', np.float64(13.879719229229481)) ('alpha_LRG', np.float64(1.0717136879427713)) ('f_sigv_LRG', np.float64(0.9809931804960484)) ('log_Mcent_LRG', np.float64(12.835859805259465)) ('sigma_M_LRG', np.float64(0.4098416398747278))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.474198787959466)) ('M_1_LRG', np.float64(13.884465963877933)) ('alpha_LRG', np.float64(1.048781864246784)) ('f_sigv_LRG', np.float64(0.9593611519759615)) ('log_Mcent_LRG', np.float64(12.872860022788755)) ('sigma_M_LRG', np.float64(0.472851327102727))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.48796957418643)) ('M_1_LRG', np.float64(13.885774428748322)) ('alpha_LRG', np.float64(1.0044506506279252)) ('f_sigv_LRG', np.float64(0.9776357403398437)) ('log_Mcent_LRG', np.float64(12.856135183177624)) ('sigma_M_LRG', np.float64(0.4301257414538974))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.361916329741959)) ('M_1_LRG', np.float64(13.867831489866129)) ('alpha_LRG', np.float64(1.1112795316837907)) ('f_sigv_LRG', np.float64(0.9740895650034223)) ('log_Mcent_LRG', np.float64(12.793177665264537)) ('sigma_M_LRG', np.float64(0.3451425126211568))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.43798332596078)) ('M_1_LRG', np.float64(13.905847710253186)) ('alpha_LRG', np.float64(1.048951346578825)) ('f_sigv_LRG', np.float64(0.9608246362629403)) ('log_Mcent_LRG', np.float64(12.879427700029966)) ('sigma_M_LRG', np.float64(0.4501655903587687))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.54018301852268)) ('M_1_LRG', np.float64(13.873921639440876)) ('alpha_LRG', np.float64(0.9951540847135786)) ('f_sigv_LRG', np.float64(0.9784768855716086)) ('log_Mcent_LRG', np.float64(12.8529038342555)) ('sigma_M_LRG', np.float64(0.431051209530826))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.44471869472599)) ('M_1_LRG', np.float64(13.855239806566662)) ('alpha_LRG', np.float64(1.084493613464706)) ('f_sigv_LRG', np.float64(0.9733196653123393)) ('log_Mcent_LRG', np.float64(12.841663351348869)) ('sigma_M_LRG', np.float64(0.4309561869689878))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.351744447981313)) ('M_1_LRG', np.float64(13.91587109341145)) ('alpha_LRG', np.float64(1.1007744276678133)) ('f_sigv_LRG', np.float64(0.9954702102363905)) ('log_Mcent_LRG', np.float64(12.880347506898575)) ('sigma_M_LRG', np.float64(0.4470841814296363))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.398344048701633)) ('M_1_LRG', np.float64(13.824743976929753)) ('alpha_LRG', np.float64(1.0938454074387463)) ('f_sigv_LRG', np.float64(0.9661694185037845)) ('log_Mcent_LRG', np.float64(12.779878112624223)) ('sigma_M_LRG', np.float64(0.3582736324902501))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.597127184223064)) ('M_1_LRG', np.float64(13.891774307760484)) ('alpha_LRG', np.float64(0.9686715060505009)) ('f_sigv_LRG', np.float64(0.9672359844075139)) ('log_Mcent_LRG', np.float64(12.862547387362811)) ('sigma_M_LRG', np.float64(0.43165988266878935))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.489978753201289)) ('M_1_LRG', np.float64(13.867158474768939)) ('alpha_LRG', np.float64(1.0316142011882914)) ('f_sigv_LRG', np.float64(0.9923970022028609)) ('log_Mcent_LRG', np.float64(12.856504537323618)) ('sigma_M_LRG', np.float64(0.4396198632993527))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.570596736754123)) ('M_1_LRG', np.float64(13.859395996218993)) ('alpha_LRG', np.float64(0.9845185436139913)) ('f_sigv_LRG', np.float64(0.981235900421751)) ('log_Mcent_LRG', np.float64(12.837530457444375)) ('sigma_M_LRG', np.float64(0.4268306139694119))
[Interation 38] chi2=808.5745038300498
[Interation 38] chi2=935.6850917739257
[Interation 38] chi2=777.5866542872534
[Interation 38] chi2=878.586306689824
[Interation 38] chi2=899.912163591447
[Interation 38] chi2=865.681058240098
[Interation 38] chi2=745.2531539903086
[Interation 38] chi2=834.2633850343102
[Interation 38] chi2=939.8601372971196
[Interation 38] chi2=783.8389762039471
[Interation 38] chi2=801.1392163831731
[Interation 38] chi2=793.4617342091311
[Interation 40] ('M_0_LRG', np.float64(12.456737363678544)) ('M_1_LRG', np.float64(13.886250657868066)) ('alpha_LRG', np.float64(1.0528645517510689)) ('f_sigv_LRG', np.float64(0.9773798402215914)) ('log_Mcent_LRG', np.float64(12.861212032006254)) ('sigma_M_LRG', np.float64(0.44161113777168665))
[Interation 40] ('M_0_LRG', np.float64(12.433419532312044)) ('M_1_LRG', np.float64(13.887692059387117)) ('alpha_LRG', np.float64(1.0409597243503284)) ('f_sigv_LRG', np.float64(0.9910329639818881)) ('log_Mcent_LRG', np.float64(12.841914214121944)) ('sigma_M_LRG', np.float64(0.4133714070710994))
[Interation 40] ('M_0_LRG', np.float64(12.569856355779349)) ('M_1_LRG', np.float64(13.859705682726267)) ('alpha_LRG', np.float64(1.0226919394183938)) ('f_sigv_LRG', np.float64(0.9676342623721549)) ('log_Mcent_LRG', np.float64(12.8437526501142)) ('sigma_M_LRG', np.float64(0.4274836528139545))
[Interation 40] ('M_0_LRG', np.float64(12.45891070550642)) ('M_1_LRG', np.float64(13.908590081517925)) ('alpha_LRG', np.float64(1.0516083680718993)) ('f_sigv_LRG', np.float64(0.9749850288238224)) ('log_Mcent_LRG', np.float64(12.885943522226924)) ('sigma_M_LRG', np.float64(0.46141535333838346))
[Interation 40] chi2=805.1118672658234
[Interation 40] chi2=825.8143723535582
[Interation 40] chi2=837.84918737267
[Interation 40] chi2=934.4202749735996
[Interation 39] ('M_0_LRG', np.float64(12.448909319535462)) ('M_1_LRG', np.float64(13.864116457238115)) ('alpha_LRG', np.float64(1.067914942290636)) ('f_sigv_LRG', np.float64(0.9678421104114826)) ('log_Mcent_LRG', np.float64(12.834470940312821)) ('sigma_M_LRG', np.float64(0.412494266018926))
[Interation 39] ('M_0_LRG', np.float64(12.517016097359708)) ('M_1_LRG', np.float64(13.870540321377907)) ('alpha_LRG', np.float64(1.0440999085247635)) ('f_sigv_LRG', np.float64(0.9709549807031687)) ('log_Mcent_LRG', np.float64(12.856749721444572)) ('sigma_M_LRG', np.float64(0.44114672036738134))
[Interation 39] ('M_0_LRG', np.float64(12.587972741542533)) ('M_1_LRG', np.float64(13.837035798068438)) ('alpha_LRG', np.float64(1.015262616281446)) ('f_sigv_LRG', np.float64(0.966605504697549)) ('log_Mcent_LRG', np.float64(12.8295672603362)) ('sigma_M_LRG', np.float64(0.42657343095966466))
[Interation 39] ('M_0_LRG', np.float64(12.45074924108654)) ('M_1_LRG', np.float64(13.887479420366201)) ('alpha_LRG', np.float64(1.0609283188605556)) ('f_sigv_LRG', np.float64(0.985084802989095)) ('log_Mcent_LRG', np.float64(12.86963681060204)) ('sigma_M_LRG', np.float64(0.4516166173304061))
[Interation 39] ('M_0_LRG', np.float64(12.457790006734843)) ('M_1_LRG', np.float64(13.87669902584283)) ('alpha_LRG', np.float64(1.0693250887300443)) ('f_sigv_LRG', np.float64(0.9773508214307582)) ('log_Mcent_LRG', np.float64(12.853687247507477)) ('sigma_M_LRG', np.float64(0.4333293999981769))
[Interation 39] ('M_0_LRG', np.float64(12.406495990377818)) ('M_1_LRG', np.float64(13.845913865493701)) ('alpha_LRG', np.float64(1.08378512434778)) ('f_sigv_LRG', np.float64(0.9801146258889042)) ('log_Mcent_LRG', np.float64(12.803692518432)) ('sigma_M_LRG', np.float64(0.38413635490775755))
[Interation 39] ('M_0_LRG', np.float64(12.42489826999457)) ('M_1_LRG', np.float64(13.869345228493144)) ('alpha_LRG', np.float64(1.0768115840706123)) ('f_sigv_LRG', np.float64(0.9788271544688458)) ('log_Mcent_LRG', np.float64(12.838961386882604)) ('sigma_M_LRG', np.float64(0.4171111264330906))
[Interation 39] ('M_0_LRG', np.float64(12.460629860301403)) ('M_1_LRG', np.float64(13.8810364110663)) ('alpha_LRG', np.float64(1.0618489504569804)) ('f_sigv_LRG', np.float64(0.9781161659340307)) ('log_Mcent_LRG', np.float64(12.858814848682838)) ('sigma_M_LRG', np.float64(0.43667500480554455))
[Interation 39] ('M_0_LRG', np.float64(12.455257317881905)) ('M_1_LRG', np.float64(13.855566837781891)) ('alpha_LRG', np.float64(1.0562280045054582)) ('f_sigv_LRG', np.float64(0.9768227022850755)) ('log_Mcent_LRG', np.float64(12.818065173521958)) ('sigma_M_LRG', np.float64(0.40016514922062285))
[Interation 39] ('M_0_LRG', np.float64(12.460200610103405)) ('M_1_LRG', np.float64(13.873499909503074)) ('alpha_LRG', np.float64(1.0624542375990285)) ('f_sigv_LRG', np.float64(0.9714523034427222)) ('log_Mcent_LRG', np.float64(12.853586085122531)) ('sigma_M_LRG', np.float64(0.4366079414772731))
[Interation 39] ('M_0_LRG', np.float64(12.428375990808112)) ('M_1_LRG', np.float64(13.886506929736463)) ('alpha_LRG', np.float64(1.0708662754245708)) ('f_sigv_LRG', np.float64(0.9808591770500196)) ('log_Mcent_LRG', np.float64(12.857345023902853)) ('sigma_M_LRG', np.float64(0.42937927275051313))
[Interation 39] ('M_0_LRG', np.float64(12.488802880906144)) ('M_1_LRG', np.float64(13.89752661109343)) ('alpha_LRG', np.float64(1.05607451470111)) ('f_sigv_LRG', np.float64(0.967398356918084)) ('log_Mcent_LRG', np.float64(12.885035878959027)) ('sigma_M_LRG', np.float64(0.4633298073889659))
[Interation 39] chi2=778.2218695528832
[Interation 39] chi2=835.655511534095
[Interation 39] chi2=858.0524224315914
[Interation 39] chi2=853.9064827250567
[Interation 39] chi2=840.7797282547557
[Interation 39] chi2=871.3009465022143
[Interation 39] chi2=824.7743446000874
[Interation 39] chi2=816.5241414161516
[Interation 39] chi2=781.10176997236
[Interation 39] chi2=866.9350049404637
[Interation 39] chi2=786.9294441527928
[Interation 39] chi2=920.6747868531554
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_17.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.494088755577856)) ('M_1_LRG', np.float64(13.86073899564786)) ('alpha_LRG', np.float64(1.0579333180186308)) ('f_sigv_LRG', np.float64(0.9632230703205104)) ('log_Mcent_LRG', np.float64(12.842511692595627)) ('sigma_M_LRG', np.float64(0.4312951318551579))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3424863815307617
Start satellite assignement
Satellite assignement done 0.07850241661071777
LRG mock catalogue done 0.15492916107177734
586118 central galaxies, 95994 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6852962970733643
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_17.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:34
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:34
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:35
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:35
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:35
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:29
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:30
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 41] ('M_0_LRG', np.float64(12.587688642849614)) ('M_1_LRG', np.float64(13.464599823687243)) ('alpha_LRG', np.float64(0.888159670322232)) ('f_sigv_LRG', np.float64(0.9844757551626147)) ('log_Mcent_LRG', np.float64(12.787020972553115)) ('sigma_M_LRG', np.float64(0.40701555185296356))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 41] ('M_0_LRG', np.float64(12.541010267962779)) ('M_1_LRG', np.float64(13.465501960390622)) ('alpha_LRG', np.float64(1.0153082090371848)) ('f_sigv_LRG', np.float64(0.9639733384997279)) ('log_Mcent_LRG', np.float64(12.809122874346674)) ('sigma_M_LRG', np.float64(0.5570109319351618))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 41] ('M_0_LRG', np.float64(12.48416783883387)) ('M_1_LRG', np.float64(13.369498330171385)) ('alpha_LRG', np.float64(0.9853525329209075)) ('f_sigv_LRG', np.float64(0.9558515229716301)) ('log_Mcent_LRG', np.float64(12.796132197136032)) ('sigma_M_LRG', np.float64(0.5183677304123558))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 41] ('M_0_LRG', np.float64(12.549389739340054)) ('M_1_LRG', np.float64(13.463262105101945)) ('alpha_LRG', np.float64(1.064209766494117)) ('f_sigv_LRG', np.float64(1.1139448023602827)) ('log_Mcent_LRG', np.float64(12.631187190872643)) ('sigma_M_LRG', np.float64(0.5281094074607433))
[Interation 41] chi2=11927.70497760658
[Interation 41] chi2=5840.511587860973
[Interation 41] chi2=12517.169752571703
[Interation 41] chi2=7086.851757104735
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.559128483610097)) ('M_1_LRG', np.float64(13.950062415186256)) ('alpha_LRG', np.float64(1.06607944230701)) ('f_sigv_LRG', np.float64(0.9506830380008339)) ('log_Mcent_LRG', np.float64(12.874488361329444)) ('sigma_M_LRG', np.float64(0.3959592562429453))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.3849736122358)) ('M_1_LRG', np.float64(13.84348766404484)) ('alpha_LRG', np.float64(1.0556323656456819)) ('f_sigv_LRG', np.float64(1.0045576015605129)) ('log_Mcent_LRG', np.float64(12.833009057222096)) ('sigma_M_LRG', np.float64(0.37902159928846135))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.680207718465365)) ('M_1_LRG', np.float64(14.004150872228669)) ('alpha_LRG', np.float64(0.930945580432577)) ('f_sigv_LRG', np.float64(0.9948287264374981)) ('log_Mcent_LRG', np.float64(12.971375475915314)) ('sigma_M_LRG', np.float64(0.4871108329401845))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.406983993671002)) ('M_1_LRG', np.float64(13.937097889342803)) ('alpha_LRG', np.float64(1.0752517075423134)) ('f_sigv_LRG', np.float64(1.0987021470583158)) ('log_Mcent_LRG', np.float64(12.865244424956948)) ('sigma_M_LRG', np.float64(0.3857498889892873))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.39560152286774)) ('M_1_LRG', np.float64(13.8233499872305)) ('alpha_LRG', np.float64(1.027355523605795)) ('f_sigv_LRG', np.float64(1.0087295669057241)) ('log_Mcent_LRG', np.float64(12.792824760903416)) ('sigma_M_LRG', np.float64(0.42751353062663683))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.606048447959138)) ('M_1_LRG', np.float64(13.936283226025955)) ('alpha_LRG', np.float64(1.0091831383669214)) ('f_sigv_LRG', np.float64(1.013519065212719)) ('log_Mcent_LRG', np.float64(12.859659930259038)) ('sigma_M_LRG', np.float64(0.38074228403569177))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.58250406463896)) ('M_1_LRG', np.float64(13.767359189082724)) ('alpha_LRG', np.float64(0.9794482810775977)) ('f_sigv_LRG', np.float64(1.103813993317841)) ('log_Mcent_LRG', np.float64(12.680153045435455)) ('sigma_M_LRG', np.float64(0.26564100974469584))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.224245183826687)) ('M_1_LRG', np.float64(13.877553551467358)) ('alpha_LRG', np.float64(1.143821912953843)) ('f_sigv_LRG', np.float64(1.0787496825502183)) ('log_Mcent_LRG', np.float64(12.833848654289989)) ('sigma_M_LRG', np.float64(0.43533541275770615))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.516684726667835)) ('M_1_LRG', np.float64(13.893159528200169)) ('alpha_LRG', np.float64(1.0677380004335362)) ('f_sigv_LRG', np.float64(0.9139483672554207)) ('log_Mcent_LRG', np.float64(12.929093976578999)) ('sigma_M_LRG', np.float64(0.5396109541621744))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.52732506289362)) ('M_1_LRG', np.float64(13.66201063045702)) ('alpha_LRG', np.float64(1.1088215949650344)) ('f_sigv_LRG', np.float64(0.9133431779505072)) ('log_Mcent_LRG', np.float64(12.663717291510872)) ('sigma_M_LRG', np.float64(0.27001275684828613))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.81873270979289)) ('M_1_LRG', np.float64(13.83525123492308)) ('alpha_LRG', np.float64(0.9684564712969828)) ('f_sigv_LRG', np.float64(1.0079850133773107)) ('log_Mcent_LRG', np.float64(12.808820313502368)) ('sigma_M_LRG', np.float64(0.3911028865885636))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.530767866711983)) ('M_1_LRG', np.float64(13.874319544204129)) ('alpha_LRG', np.float64(0.971546789243954)) ('f_sigv_LRG', np.float64(1.0076567639648588)) ('log_Mcent_LRG', np.float64(12.811757662980396)) ('sigma_M_LRG', np.float64(0.3752108228978128))
[Interation 40] chi2=1195.1570068171764
[Interation 40] chi2=1189.8716674005925
[Interation 40] chi2=1303.8145594557686
[Interation 40] chi2=1112.2347750630831
[Interation 40] chi2=1072.5885485508566
[Interation 40] chi2=1078.2579243037926
[Interation 40] chi2=1412.7224091167252
[Interation 40] chi2=1011.8126118132295
[Interation 40] chi2=1244.9422626047183
[Interation 40] chi2=1424.061939526021
[Interation 40] chi2=996.92345870753
[Interation 40] chi2=903.8682080705346
[Interation 42] ('M_0_LRG', np.float64(12.432551710132778)) ('M_1_LRG', np.float64(13.872015920231338)) ('alpha_LRG', np.float64(1.0719288822711195)) ('f_sigv_LRG', np.float64(0.9625097267834003)) ('log_Mcent_LRG', np.float64(12.849766810343855)) ('sigma_M_LRG', np.float64(0.4331113917366853))
[Interation 42] ('M_0_LRG', np.float64(12.468593301632145)) ('M_1_LRG', np.float64(13.867982236515866)) ('alpha_LRG', np.float64(1.0318284263347168)) ('f_sigv_LRG', np.float64(0.9760704953865066)) ('log_Mcent_LRG', np.float64(12.840893951456447)) ('sigma_M_LRG', np.float64(0.426685858848349))
[Interation 42] ('M_0_LRG', np.float64(12.433874545354)) ('M_1_LRG', np.float64(13.865969144295399)) ('alpha_LRG', np.float64(1.0681805934736712)) ('f_sigv_LRG', np.float64(0.9875629005731453)) ('log_Mcent_LRG', np.float64(12.825074118483348)) ('sigma_M_LRG', np.float64(0.3986496600311938))
[Interation 42] ('M_0_LRG', np.float64(12.38642189661676)) ('M_1_LRG', np.float64(13.859278719578699)) ('alpha_LRG', np.float64(1.0590281413033298)) ('f_sigv_LRG', np.float64(0.9988962009449326)) ('log_Mcent_LRG', np.float64(12.801074321432967)) ('sigma_M_LRG', np.float64(0.37122819386233635))
[Interation 42] chi2=843.8806819556731
[Interation 42] chi2=787.5348663672613
[Interation 42] chi2=836.8383043931162
[Interation 42] chi2=777.4795512406364
[Interation 41] ('M_0_LRG', np.float64(12.421429968164928)) ('M_1_LRG', np.float64(13.879688408638668)) ('alpha_LRG', np.float64(1.0461099973723604)) ('f_sigv_LRG', np.float64(0.9999127814188179)) ('log_Mcent_LRG', np.float64(12.83793250655101)) ('sigma_M_LRG', np.float64(0.4121238960290779))
[Interation 41] ('M_0_LRG', np.float64(12.304025098860366)) ('M_1_LRG', np.float64(13.880056034285573)) ('alpha_LRG', np.float64(1.0876928294433437)) ('f_sigv_LRG', np.float64(0.9856150585003396)) ('log_Mcent_LRG', np.float64(12.831983261775415)) ('sigma_M_LRG', np.float64(0.4050745653617281))
[Interation 41] ('M_0_LRG', np.float64(12.32965806854958)) ('M_1_LRG', np.float64(13.888103776887085)) ('alpha_LRG', np.float64(1.1227827418781073)) ('f_sigv_LRG', np.float64(0.9706196230230548)) ('log_Mcent_LRG', np.float64(12.865515491887985)) ('sigma_M_LRG', np.float64(0.44068693218572286))
[Interation 41] ('M_0_LRG', np.float64(12.348064661538427)) ('M_1_LRG', np.float64(13.873162834563)) ('alpha_LRG', np.float64(1.1112759738285356)) ('f_sigv_LRG', np.float64(0.97083524047365)) ('log_Mcent_LRG', np.float64(12.840855880498339)) ('sigma_M_LRG', np.float64(0.4141042992824282))
[Interation 41] ('M_0_LRG', np.float64(12.383247559634013)) ('M_1_LRG', np.float64(13.879859100773231)) ('alpha_LRG', np.float64(1.078764752137494)) ('f_sigv_LRG', np.float64(1.0018691316612363)) ('log_Mcent_LRG', np.float64(12.835439533079859)) ('sigma_M_LRG', np.float64(0.4048413697960631))
[Interation 41] ('M_0_LRG', np.float64(12.536154636556365)) ('M_1_LRG', np.float64(13.87311059609571)) ('alpha_LRG', np.float64(1.0554676494802346)) ('f_sigv_LRG', np.float64(0.9473079195681975)) ('log_Mcent_LRG', np.float64(12.88115294336321)) ('sigma_M_LRG', np.float64(0.4704237006136234))
[Interation 41] ('M_0_LRG', np.float64(12.500083653159747)) ('M_1_LRG', np.float64(13.863773733140137)) ('alpha_LRG', np.float64(1.057059424642942)) ('f_sigv_LRG', np.float64(0.9646606097983701)) ('log_Mcent_LRG', np.float64(12.854124863975722)) ('sigma_M_LRG', np.float64(0.4456098356003063))
[Interation 41] ('M_0_LRG', np.float64(12.506574771574298)) ('M_1_LRG', np.float64(13.870026777436355)) ('alpha_LRG', np.float64(1.0335360887119676)) ('f_sigv_LRG', np.float64(0.9949882308146103)) ('log_Mcent_LRG', np.float64(12.826920489176464)) ('sigma_M_LRG', np.float64(0.4008664031305873))
[Interation 41] ('M_0_LRG', np.float64(12.502856158264366)) ('M_1_LRG', np.float64(13.86251564869601)) ('alpha_LRG', np.float64(1.0418637034180367)) ('f_sigv_LRG', np.float64(0.9883644579053115)) ('log_Mcent_LRG', np.float64(12.837366741599409)) ('sigma_M_LRG', np.float64(0.41953989706736305))
[Interation 41] ('M_0_LRG', np.float64(12.417482815767881)) ('M_1_LRG', np.float64(13.856493149139126)) ('alpha_LRG', np.float64(1.0682474593566713)) ('f_sigv_LRG', np.float64(0.9793220058156183)) ('log_Mcent_LRG', np.float64(12.827592209494236)) ('sigma_M_LRG', np.float64(0.4082675779607598))
[Interation 41] ('M_0_LRG', np.float64(12.467578376033485)) ('M_1_LRG', np.float64(13.8638244302307)) ('alpha_LRG', np.float64(1.0442291944972393)) ('f_sigv_LRG', np.float64(0.9814380121605696)) ('log_Mcent_LRG', np.float64(12.820831957627444)) ('sigma_M_LRG', np.float64(0.3983499856329523))
[Interation 41] ('M_0_LRG', np.float64(12.434449604755564)) ('M_1_LRG', np.float64(13.862934562532237)) ('alpha_LRG', np.float64(1.0782534942818633)) ('f_sigv_LRG', np.float64(0.964310177764478)) ('log_Mcent_LRG', np.float64(12.84931482706236)) ('sigma_M_LRG', np.float64(0.4379341196995793))
[Interation 41] chi2=899.2973545047918
[Interation 41] chi2=796.7840270341966
[Interation 41] chi2=873.423531917401
[Interation 41] chi2=868.7535164232386
[Interation 41] chi2=804.1991926374955
[Interation 41] chi2=854.1771138092607
[Interation 41] chi2=848.8078718315688
[Interation 41] chi2=772.4954407664212
[Interation 41] chi2=788.7816512295215
[Interation 41] chi2=825.0952305907334
[Interation 41] chi2=888.9651030833365
[Interation 41] chi2=892.9717474887875
[Interation 43] ('M_0_LRG', np.float64(12.470590925033688)) ('M_1_LRG', np.float64(13.852155945374799)) ('alpha_LRG', np.float64(1.0516154091265517)) ('f_sigv_LRG', np.float64(0.9741602082466944)) ('log_Mcent_LRG', np.float64(12.824041503361359)) ('sigma_M_LRG', np.float64(0.4099077701111927))
[Interation 43] ('M_0_LRG', np.float64(12.45049861422994)) ('M_1_LRG', np.float64(13.849651398105275)) ('alpha_LRG', np.float64(1.0663561577719947)) ('f_sigv_LRG', np.float64(0.9651883939477768)) ('log_Mcent_LRG', np.float64(12.810064705166377)) ('sigma_M_LRG', np.float64(0.3908616940500075))
[Interation 43] ('M_0_LRG', np.float64(12.184564215271678)) ('M_1_LRG', np.float64(13.893767754355729)) ('alpha_LRG', np.float64(1.1612752123431325)) ('f_sigv_LRG', np.float64(0.973967544042929)) ('log_Mcent_LRG', np.float64(12.83569081837472)) ('sigma_M_LRG', np.float64(0.40026149042107473))
[Interation 43] ('M_0_LRG', np.float64(12.402371196878924)) ('M_1_LRG', np.float64(13.869138265529365)) ('alpha_LRG', np.float64(1.086343784332308)) ('f_sigv_LRG', np.float64(0.9793171260203579)) ('log_Mcent_LRG', np.float64(12.838464820546932)) ('sigma_M_LRG', np.float64(0.4156371807737915))
[Interation 43] chi2=856.148280916784
[Interation 43] chi2=809.9399052361138
[Interation 43] chi2=912.1353318226728
[Interation 43] chi2=859.9360648900321
[Interation 42] ('M_0_LRG', np.float64(12.32301824069893)) ('M_1_LRG', np.float64(13.882941963711906)) ('alpha_LRG', np.float64(1.119136965485012)) ('f_sigv_LRG', np.float64(0.9761526546516218)) ('log_Mcent_LRG', np.float64(12.857885045708679)) ('sigma_M_LRG', np.float64(0.43336444697362125))
[Interation 42] ('M_0_LRG', np.float64(12.429410379988553)) ('M_1_LRG', np.float64(13.856374553051257)) ('alpha_LRG', np.float64(1.0768838440114974)) ('f_sigv_LRG', np.float64(0.9757811456986654)) ('log_Mcent_LRG', np.float64(12.834428579367684)) ('sigma_M_LRG', np.float64(0.41894693714931597))
[Interation 42] ('M_0_LRG', np.float64(12.283267455058411)) ('M_1_LRG', np.float64(13.88692584100683)) ('alpha_LRG', np.float64(1.1236222113036893)) ('f_sigv_LRG', np.float64(0.9829495048559443)) ('log_Mcent_LRG', np.float64(12.845959971397408)) ('sigma_M_LRG', np.float64(0.4186079471955389))
[Interation 42] ('M_0_LRG', np.float64(12.366476498687362)) ('M_1_LRG', np.float64(13.867689520879118)) ('alpha_LRG', np.float64(1.1099902648855862)) ('f_sigv_LRG', np.float64(0.9750911068188657)) ('log_Mcent_LRG', np.float64(12.830867177009903)) ('sigma_M_LRG', np.float64(0.40509520647584984))
[Interation 42] ('M_0_LRG', np.float64(12.472731105099735)) ('M_1_LRG', np.float64(13.854056013374594)) ('alpha_LRG', np.float64(1.0558696639033507)) ('f_sigv_LRG', np.float64(0.9738955869927999)) ('log_Mcent_LRG', np.float64(12.830806807984693)) ('sigma_M_LRG', np.float64(0.4150058108870496))
[Interation 42] ('M_0_LRG', np.float64(12.367701676430897)) ('M_1_LRG', np.float64(13.872657766924204)) ('alpha_LRG', np.float64(1.0992908211352952)) ('f_sigv_LRG', np.float64(0.9772360786862719)) ('log_Mcent_LRG', np.float64(12.835050303200022)) ('sigma_M_LRG', np.float64(0.41014252753662905))
[Interation 42] ('M_0_LRG', np.float64(12.363191151548248)) ('M_1_LRG', np.float64(13.86601711400886)) ('alpha_LRG', np.float64(1.1045431446400518)) ('f_sigv_LRG', np.float64(0.972849528207755)) ('log_Mcent_LRG', np.float64(12.8261043626774)) ('sigma_M_LRG', np.float64(0.40193325323940565))
[Interation 42] ('M_0_LRG', np.float64(12.303582413935041)) ('M_1_LRG', np.float64(13.88553674876755)) ('alpha_LRG', np.float64(1.1323220232977373)) ('f_sigv_LRG', np.float64(0.9841780168910742)) ('log_Mcent_LRG', np.float64(12.85500038399229)) ('sigma_M_LRG', np.float64(0.4262194359598916))
[Interation 42] ('M_0_LRG', np.float64(12.399274649521416)) ('M_1_LRG', np.float64(13.856498255539442)) ('alpha_LRG', np.float64(1.0941863100892992)) ('f_sigv_LRG', np.float64(0.9736768532564127)) ('log_Mcent_LRG', np.float64(12.814326844877614)) ('sigma_M_LRG', np.float64(0.3907337350861192))
[Interation 42] ('M_0_LRG', np.float64(12.2878485517406)) ('M_1_LRG', np.float64(13.889863280095385)) ('alpha_LRG', np.float64(1.1282547606325837)) ('f_sigv_LRG', np.float64(0.9753259675836227)) ('log_Mcent_LRG', np.float64(12.852701996581521)) ('sigma_M_LRG', np.float64(0.42584609753240354))
[Interation 42] ('M_0_LRG', np.float64(12.277636085170473)) ('M_1_LRG', np.float64(13.873158867952416)) ('alpha_LRG', np.float64(1.133301989664115)) ('f_sigv_LRG', np.float64(0.9846979704853385)) ('log_Mcent_LRG', np.float64(12.829134101598562)) ('sigma_M_LRG', np.float64(0.39978946069718946))
[Interation 42] ('M_0_LRG', np.float64(12.383307264019942)) ('M_1_LRG', np.float64(13.865590728228451)) ('alpha_LRG', np.float64(1.0985823332733717)) ('f_sigv_LRG', np.float64(0.9778364684263918)) ('log_Mcent_LRG', np.float64(12.833907489045963)) ('sigma_M_LRG', np.float64(0.410679749119565))
[Interation 42] chi2=770.2746981155179
[Interation 42] chi2=887.0314353986535
[Interation 42] chi2=804.6541468508028
[Interation 42] chi2=913.5319834655733
[Interation 42] chi2=786.2986687746031
[Interation 42] chi2=827.836969954616
[Interation 42] chi2=936.5841025023884
[Interation 42] chi2=859.0280114129314
[Interation 42] chi2=738.1312212309572
[Interation 42] chi2=903.754293887405
[Interation 42] chi2=883.5587572485142
[Interation 42] chi2=851.9640549840793
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_18.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.320964110032138)) ('M_1_LRG', np.float64(13.873553406199168)) ('alpha_LRG', np.float64(1.1150415591504739)) ('f_sigv_LRG', np.float64(0.9763937233483792)) ('log_Mcent_LRG', np.float64(12.835935610935223)) ('sigma_M_LRG', np.float64(0.4100806592768461))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3562772274017334
Start satellite assignement
Satellite assignement done 0.08260464668273926
LRG mock catalogue done 0.15407443046569824
579123 central galaxies, 100395 satellites, fraction of satellite 0.15 
Done overall time  LRG 0.6981201171875
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_18.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:33
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:33
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:33
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:33
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:33
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:33
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:33
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:33
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:28
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 44] ('M_0_LRG', np.float64(12.516523843752507)) ('M_1_LRG', np.float64(13.784127188867782)) ('alpha_LRG', np.float64(1.0364934579862781)) ('f_sigv_LRG', np.float64(0.9640128813317657)) ('log_Mcent_LRG', np.float64(12.725438154448975)) ('sigma_M_LRG', np.float64(0.3068400313104176))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 44] ('M_0_LRG', np.float64(12.57201422182729)) ('M_1_LRG', np.float64(13.82568655323142)) ('alpha_LRG', np.float64(1.0700971760633267)) ('f_sigv_LRG', np.float64(0.9041642915729411)) ('log_Mcent_LRG', np.float64(12.847496499639377)) ('sigma_M_LRG', np.float64(0.4543431625357035))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 44] ('M_0_LRG', np.float64(12.794679112097175)) ('M_1_LRG', np.float64(13.773545824480486)) ('alpha_LRG', np.float64(0.9309354329633189)) ('f_sigv_LRG', np.float64(0.9596668975566841)) ('log_Mcent_LRG', np.float64(12.697854107801373)) ('sigma_M_LRG', np.float64(0.26398708860144426))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 44] ('M_0_LRG', np.float64(12.467476175592374)) ('M_1_LRG', np.float64(13.876235764568973)) ('alpha_LRG', np.float64(1.0208669906214427)) ('f_sigv_LRG', np.float64(1.0396065083563581)) ('log_Mcent_LRG', np.float64(12.848884099578294)) ('sigma_M_LRG', np.float64(0.41882330058588935))
[Interation 44] chi2=946.8814727247039
[Interation 44] chi2=883.2329208290078
[Interation 44] chi2=1384.101589429083
[Interation 44] chi2=881.5625348862337
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 43] ('M_0_LRG', np.float64(12.429388391188763)) ('M_1_LRG', np.float64(13.845556098985877)) ('alpha_LRG', np.float64(1.0962670983364975)) ('f_sigv_LRG', np.float64(0.9742563661018967)) ('log_Mcent_LRG', np.float64(12.822344215580301)) ('sigma_M_LRG', np.float64(0.40391252729525157))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 43] ('M_0_LRG', np.float64(12.200305307268039)) ('M_1_LRG', np.float64(13.870935043873933)) ('alpha_LRG', np.float64(1.1993062242407981)) ('f_sigv_LRG', np.float64(0.9740970154034839)) ('log_Mcent_LRG', np.float64(12.85000602307383)) ('sigma_M_LRG', np.float64(0.4330280414418175))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 43] ('M_0_LRG', np.float64(12.398267364761882)) ('M_1_LRG', np.float64(13.897697303987664)) ('alpha_LRG', np.float64(1.0823545795472256)) ('f_sigv_LRG', np.float64(0.9796559659423529)) ('log_Mcent_LRG', np.float64(12.849274243118366)) ('sigma_M_LRG', np.float64(0.41922482285653473))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 43] ('M_0_LRG', np.float64(12.495164990032968)) ('M_1_LRG', np.float64(13.849260430126163)) ('alpha_LRG', np.float64(1.031614234187979)) ('f_sigv_LRG', np.float64(0.9965837031655578)) ('log_Mcent_LRG', np.float64(12.809188175216924)) ('sigma_M_LRG', np.float64(0.3890920725225612))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 43] ('M_0_LRG', np.float64(12.441940076009772)) ('M_1_LRG', np.float64(13.862059330719651)) ('alpha_LRG', np.float64(1.063016329339088)) ('f_sigv_LRG', np.float64(0.9827725693610335)) ('log_Mcent_LRG', np.float64(12.84234305110625)) ('sigma_M_LRG', np.float64(0.4228773065337834))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 43] ('M_0_LRG', np.float64(12.702561186051325)) ('M_1_LRG', np.float64(13.792586666618332)) ('alpha_LRG', np.float64(0.9523923151376219)) ('f_sigv_LRG', np.float64(0.9853871479592828)) ('log_Mcent_LRG', np.float64(12.758315254489931)) ('sigma_M_LRG', np.float64(0.33899475056914913))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 43] ('M_0_LRG', np.float64(12.393824666134)) ('M_1_LRG', np.float64(13.88983820782921)) ('alpha_LRG', np.float64(1.089268743842955)) ('f_sigv_LRG', np.float64(0.9617280207692153)) ('log_Mcent_LRG', np.float64(12.859625206668984)) ('sigma_M_LRG', np.float64(0.44152515812019655))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 43] ('M_0_LRG', np.float64(12.321096878509776)) ('M_1_LRG', np.float64(13.905925961181829)) ('alpha_LRG', np.float64(1.0933340400044602)) ('f_sigv_LRG', np.float64(0.982746343804707)) ('log_Mcent_LRG', np.float64(12.859354054555183)) ('sigma_M_LRG', np.float64(0.43234112978570755))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 43] ('M_0_LRG', np.float64(12.432774433216295)) ('M_1_LRG', np.float64(13.896452943595932)) ('alpha_LRG', np.float64(1.0640946562566502)) ('f_sigv_LRG', np.float64(0.9827991199957872)) ('log_Mcent_LRG', np.float64(12.883556412932807)) ('sigma_M_LRG', np.float64(0.4717301658652197))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 43] ('M_0_LRG', np.float64(12.515463647627168)) ('M_1_LRG', np.float64(13.901499200735751)) ('alpha_LRG', np.float64(1.0104376094499845)) ('f_sigv_LRG', np.float64(0.9994881868639971)) ('log_Mcent_LRG', np.float64(12.879336184107052)) ('sigma_M_LRG', np.float64(0.4531565015796893))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 43] ('M_0_LRG', np.float64(12.432783421617435)) ('M_1_LRG', np.float64(13.832405008227036)) ('alpha_LRG', np.float64(1.0771296465123676)) ('f_sigv_LRG', np.float64(0.98143151715058)) ('log_Mcent_LRG', np.float64(12.794183095422621)) ('sigma_M_LRG', np.float64(0.38071980615636813))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 43] ('M_0_LRG', np.float64(12.460960387881425)) ('M_1_LRG', np.float64(13.857157512829458)) ('alpha_LRG', np.float64(1.0461375231066732)) ('f_sigv_LRG', np.float64(1.003863102203198)) ('log_Mcent_LRG', np.float64(12.82907371400236)) ('sigma_M_LRG', np.float64(0.4115935325103102))
[Interation 43] chi2=816.1358970867027
[Interation 43] chi2=931.7743487611255
[Interation 43] chi2=849.5764783479473
[Interation 43] chi2=847.9488038409216
[Interation 43] chi2=812.261832898081
[Interation 43] chi2=859.957143988233
[Interation 43] chi2=821.8213604088571
[Interation 43] chi2=893.8168957105185
[Interation 43] chi2=853.96939741643
[Interation 43] chi2=850.9422799487411
[Interation 43] chi2=918.5788171207844
[Interation 43] chi2=859.2205204481229
[Interation 45] ('M_0_LRG', np.float64(12.316605788957945)) ('M_1_LRG', np.float64(13.892522713354616)) ('alpha_LRG', np.float64(1.1443533994537627)) ('f_sigv_LRG', np.float64(0.9648568556815952)) ('log_Mcent_LRG', np.float64(12.882224199723812)) ('sigma_M_LRG', np.float64(0.4584480210997795))
[Interation 45] ('M_0_LRG', np.float64(12.407093326613456)) ('M_1_LRG', np.float64(13.87744423631847)) ('alpha_LRG', np.float64(1.079156846508535)) ('f_sigv_LRG', np.float64(0.9789949615645758)) ('log_Mcent_LRG', np.float64(12.857650107724671)) ('sigma_M_LRG', np.float64(0.44247772658824447))
[Interation 45] ('M_0_LRG', np.float64(12.496026755284142)) ('M_1_LRG', np.float64(13.892437202843228)) ('alpha_LRG', np.float64(1.0322695057068603)) ('f_sigv_LRG', np.float64(0.9986362879624433)) ('log_Mcent_LRG', np.float64(12.865399042777039)) ('sigma_M_LRG', np.float64(0.4407782192414117))
[Interation 45] ('M_0_LRG', np.float64(12.403700676772154)) ('M_1_LRG', np.float64(13.84091988335893)) ('alpha_LRG', np.float64(1.0948018493178948)) ('f_sigv_LRG', np.float64(0.9696113021309157)) ('log_Mcent_LRG', np.float64(12.80031779967838)) ('sigma_M_LRG', np.float64(0.3791996236552842))
[Interation 45] chi2=894.106362402444
[Interation 45] chi2=816.5649762732241
[Interation 45] chi2=887.3680786914632
[Interation 45] chi2=809.0705126194262
[Interation 44] ('M_0_LRG', np.float64(12.385734756229402)) ('M_1_LRG', np.float64(13.867921500810414)) ('alpha_LRG', np.float64(1.0815951992195492)) ('f_sigv_LRG', np.float64(0.9964376818584919)) ('log_Mcent_LRG', np.float64(12.829907841999196)) ('sigma_M_LRG', np.float64(0.4065908677733352))
[Interation 44] ('M_0_LRG', np.float64(12.380702035760912)) ('M_1_LRG', np.float64(13.870705819370942)) ('alpha_LRG', np.float64(1.097754120824501)) ('f_sigv_LRG', np.float64(0.9786929452807813)) ('log_Mcent_LRG', np.float64(12.849315575248633)) ('sigma_M_LRG', np.float64(0.43102839784771885))
[Interation 44] ('M_0_LRG', np.float64(12.405746245797141)) ('M_1_LRG', np.float64(13.879978118082866)) ('alpha_LRG', np.float64(1.0720295938212896)) ('f_sigv_LRG', np.float64(0.9796531311932157)) ('log_Mcent_LRG', np.float64(12.858325870569404)) ('sigma_M_LRG', np.float64(0.4410248182179908))
[Interation 44] ('M_0_LRG', np.float64(12.406897567706215)) ('M_1_LRG', np.float64(13.87487175133891)) ('alpha_LRG', np.float64(1.0831833529681119)) ('f_sigv_LRG', np.float64(0.9629869116734828)) ('log_Mcent_LRG', np.float64(12.86249733964956)) ('sigma_M_LRG', np.float64(0.4473738638112141))
[Interation 44] ('M_0_LRG', np.float64(12.450994976368868)) ('M_1_LRG', np.float64(13.868164417913258)) ('alpha_LRG', np.float64(1.0640277337583763)) ('f_sigv_LRG', np.float64(0.9665850401610295)) ('log_Mcent_LRG', np.float64(12.841712230712801)) ('sigma_M_LRG', np.float64(0.4245555611998938))
[Interation 44] ('M_0_LRG', np.float64(12.37819762494061)) ('M_1_LRG', np.float64(13.84710130953632)) ('alpha_LRG', np.float64(1.1085532884359683)) ('f_sigv_LRG', np.float64(0.960701212973385)) ('log_Mcent_LRG', np.float64(12.82956284564176)) ('sigma_M_LRG', np.float64(0.4156293144517422))
[Interation 44] ('M_0_LRG', np.float64(12.38622667467462)) ('M_1_LRG', np.float64(13.876678387826646)) ('alpha_LRG', np.float64(1.0732770206567432)) ('f_sigv_LRG', np.float64(1.0045056675481818)) ('log_Mcent_LRG', np.float64(12.843055102970071)) ('sigma_M_LRG', np.float64(0.422417011982721))
[Interation 44] ('M_0_LRG', np.float64(12.401184716928498)) ('M_1_LRG', np.float64(13.836965010998387)) ('alpha_LRG', np.float64(1.0974243680325546)) ('f_sigv_LRG', np.float64(0.9977002583880414)) ('log_Mcent_LRG', np.float64(12.795984364755137)) ('sigma_M_LRG', np.float64(0.36764138006211444))
[Interation 44] ('M_0_LRG', np.float64(12.34424132103266)) ('M_1_LRG', np.float64(13.860943969664921)) ('alpha_LRG', np.float64(1.1183808360540877)) ('f_sigv_LRG', np.float64(0.9808794323016422)) ('log_Mcent_LRG', np.float64(12.830019240134376)) ('sigma_M_LRG', np.float64(0.40813170472433363))
[Interation 44] ('M_0_LRG', np.float64(12.318170458203173)) ('M_1_LRG', np.float64(13.86849339814293)) ('alpha_LRG', np.float64(1.1355661403440975)) ('f_sigv_LRG', np.float64(0.9712884238371785)) ('log_Mcent_LRG', np.float64(12.850482693686605)) ('sigma_M_LRG', np.float64(0.43021679017965414))
[Interation 44] ('M_0_LRG', np.float64(12.419475815441212)) ('M_1_LRG', np.float64(13.873808236787815)) ('alpha_LRG', np.float64(1.0693377130966089)) ('f_sigv_LRG', np.float64(0.9952030089954456)) ('log_Mcent_LRG', np.float64(12.839268678453104)) ('sigma_M_LRG', np.float64(0.41405554013387724))
[Interation 44] ('M_0_LRG', np.float64(12.397237422745418)) ('M_1_LRG', np.float64(13.871602959186452)) ('alpha_LRG', np.float64(1.0829092883946745)) ('f_sigv_LRG', np.float64(0.9717433325892427)) ('log_Mcent_LRG', np.float64(12.849443724776496)) ('sigma_M_LRG', np.float64(0.4317451973480397))
[Interation 44] chi2=764.4543673583663
[Interation 44] chi2=849.4817337486679
[Interation 44] chi2=891.7607612232309
[Interation 44] chi2=867.4953422502887
[Interation 44] chi2=831.065095823128
[Interation 44] chi2=895.8088754398227
[Interation 44] chi2=856.5616484196115
[Interation 44] chi2=922.0192594447427
[Interation 44] chi2=770.4835539866
[Interation 44] chi2=817.9767675465652
[Interation 44] chi2=891.8636080819913
[Interation 44] chi2=838.9258743699987
[Interation 46] ('M_0_LRG', np.float64(12.44515400716222)) ('M_1_LRG', np.float64(13.867957004592244)) ('alpha_LRG', np.float64(1.0763690715536323)) ('f_sigv_LRG', np.float64(0.9685418825197921)) ('log_Mcent_LRG', np.float64(12.842677616200438)) ('sigma_M_LRG', np.float64(0.4245686530386764))
[Interation 46] ('M_0_LRG', np.float64(12.32843863333137)) ('M_1_LRG', np.float64(13.88264597049939)) ('alpha_LRG', np.float64(1.105377184468169)) ('f_sigv_LRG', np.float64(0.991240400476277)) ('log_Mcent_LRG', np.float64(12.84537315356027)) ('sigma_M_LRG', np.float64(0.4203453901752809))
[Interation 46] ('M_0_LRG', np.float64(12.39127565526739)) ('M_1_LRG', np.float64(13.88146854051974)) ('alpha_LRG', np.float64(1.080402675362066)) ('f_sigv_LRG', np.float64(0.9791805776702245)) ('log_Mcent_LRG', np.float64(12.852601816919174)) ('sigma_M_LRG', np.float64(0.4303202427620386))
[Interation 46] ('M_0_LRG', np.float64(12.402833171834567)) ('M_1_LRG', np.float64(13.871192865966037)) ('alpha_LRG', np.float64(1.0854752280795232)) ('f_sigv_LRG', np.float64(0.9709589230999003)) ('log_Mcent_LRG', np.float64(12.853313276227473)) ('sigma_M_LRG', np.float64(0.4349339851529543))
[Interation 46] chi2=783.4655716993653
[Interation 46] chi2=886.5027021505689
[Interation 46] chi2=902.5934539845413
[Interation 46] chi2=767.5528975833458
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_19.npy
Set number of threads to 32
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.339372910369757)) ('M_1_LRG', np.float64(13.891713141574513)) ('alpha_LRG', np.float64(1.090698416127569)) ('f_sigv_LRG', np.float64(0.99272062454783)) ('log_Mcent_LRG', np.float64(12.856433642913883)) ('sigma_M_LRG', np.float64(0.4323270530417127))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3308267593383789
Start satellite assignement
Satellite assignement done 0.08312773704528809
LRG mock catalogue done 0.15667104721069336
565116 central galaxies, 97487 satellites, fraction of satellite 0.15 
Done overall time  LRG 0.6845872402191162
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.6-0.8_standard_19.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:26
Load smu measurements at z0.6-0.8 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.725 ...
Done took 00:00:22
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.725 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Load rppi measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load correlation matrix for LRG at z0.725 ...
Load smu measurements at z0.6-0.8 for LRG...
Load correlation matrix for LRG at z0.725 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 45] ('M_0_LRG', np.float64(12.451935711710576)) ('M_1_LRG', np.float64(13.924319775846113)) ('alpha_LRG', np.float64(0.919241830129489)) ('f_sigv_LRG', np.float64(0.8991738804616258)) ('log_Mcent_LRG', np.float64(12.86569165820308)) ('sigma_M_LRG', np.float64(0.5444069272650468))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 45] ('M_0_LRG', np.float64(12.628922984306172)) ('M_1_LRG', np.float64(13.944231288516939)) ('alpha_LRG', np.float64(0.9924905752024338)) ('f_sigv_LRG', np.float64(0.9644824743784088)) ('log_Mcent_LRG', np.float64(12.868505478418118)) ('sigma_M_LRG', np.float64(0.4095054153669415))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 45] ('M_0_LRG', np.float64(12.326965590102025)) ('M_1_LRG', np.float64(13.967368904601498)) ('alpha_LRG', np.float64(1.0202505013779286)) ('f_sigv_LRG', np.float64(1.0520600942051135)) ('log_Mcent_LRG', np.float64(12.92036405946741)) ('sigma_M_LRG', np.float64(0.5050256789982039))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 45] ('M_0_LRG', np.float64(12.367951069721254)) ('M_1_LRG', np.float64(14.032382912334947)) ('alpha_LRG', np.float64(1.0689818091338248)) ('f_sigv_LRG', np.float64(1.0383813306253493)) ('log_Mcent_LRG', np.float64(12.939829177352033)) ('sigma_M_LRG', np.float64(0.40996544720253475))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 45] ('M_0_LRG', np.float64(12.245423707853428)) ('M_1_LRG', np.float64(13.878840677025291)) ('alpha_LRG', np.float64(1.1423262659618216)) ('f_sigv_LRG', np.float64(0.9864486321407124)) ('log_Mcent_LRG', np.float64(12.803471798429026)) ('sigma_M_LRG', np.float64(0.3544539264850249))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 45] ('M_0_LRG', np.float64(12.507226058881582)) ('M_1_LRG', np.float64(13.90131638643424)) ('alpha_LRG', np.float64(0.9873446974694033)) ('f_sigv_LRG', np.float64(1.028427806128793)) ('log_Mcent_LRG', np.float64(12.82106266149913)) ('sigma_M_LRG', np.float64(0.39962104506249774))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 45] ('M_0_LRG', np.float64(12.701618878907105)) ('M_1_LRG', np.float64(13.942065858378019)) ('alpha_LRG', np.float64(0.942533043651347)) ('f_sigv_LRG', np.float64(0.8979575786146039)) ('log_Mcent_LRG', np.float64(12.901878454669678)) ('sigma_M_LRG', np.float64(0.4712072030525537))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 45] ('M_0_LRG', np.float64(12.629800994541677)) ('M_1_LRG', np.float64(13.873970469564119)) ('alpha_LRG', np.float64(1.0043541970880703)) ('f_sigv_LRG', np.float64(0.9322554725483551)) ('log_Mcent_LRG', np.float64(12.811590140680718)) ('sigma_M_LRG', np.float64(0.4268103686211677))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 45] ('M_0_LRG', np.float64(12.394449653558484)) ('M_1_LRG', np.float64(13.858560893462935)) ('alpha_LRG', np.float64(1.0478557244165851)) ('f_sigv_LRG', np.float64(1.1668956316562729)) ('log_Mcent_LRG', np.float64(12.835250548140097)) ('sigma_M_LRG', np.float64(0.3863592235793277))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 45] ('M_0_LRG', np.float64(12.527831432584154)) ('M_1_LRG', np.float64(13.902059958162098)) ('alpha_LRG', np.float64(1.1607629738192382)) ('f_sigv_LRG', np.float64(0.8697731373686285)) ('log_Mcent_LRG', np.float64(12.9304578889475)) ('sigma_M_LRG', np.float64(0.5242443401137442))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 45] ('M_0_LRG', np.float64(12.829269784470831)) ('M_1_LRG', np.float64(13.967371415517091)) ('alpha_LRG', np.float64(0.7758490057729813)) ('f_sigv_LRG', np.float64(1.0929628801943454)) ('log_Mcent_LRG', np.float64(12.864554678449874)) ('sigma_M_LRG', np.float64(0.4071313494161094))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 45] ('M_0_LRG', np.float64(12.528991695969468)) ('M_1_LRG', np.float64(13.845963131884176)) ('alpha_LRG', np.float64(0.9806019366903047)) ('f_sigv_LRG', np.float64(1.0511861489986944)) ('log_Mcent_LRG', np.float64(12.789126130408567)) ('sigma_M_LRG', np.float64(0.3398640256503539))
[Interation 45] chi2=1057.4023565273749
[Interation 45] chi2=2023.5802116598575
[Interation 45] chi2=1063.656516045047
[Interation 45] chi2=1580.5155399992482
[Interation 45] chi2=1068.6885213290686
[Interation 45] chi2=838.2287910523088
[Interation 45] chi2=946.0067122825084
[Interation 45] chi2=1233.0100705256884
[Interation 45] chi2=1018.9229522343888
[Interation 45] chi2=1366.7065383338672
[Interation 45] chi2=1069.5391710537099
[Interation 45] chi2=912.8554580211147
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 47] ('M_0_LRG', np.float64(12.716718466005469)) ('M_1_LRG', np.float64(13.816402827784133)) ('alpha_LRG', np.float64(0.9677938521243183)) ('f_sigv_LRG', np.float64(0.9704618979582836)) ('log_Mcent_LRG', np.float64(12.805682160090614)) ('sigma_M_LRG', np.float64(0.39755588352600435))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 47] ('M_0_LRG', np.float64(12.496007615522434)) ('M_1_LRG', np.float64(13.859168414718992)) ('alpha_LRG', np.float64(1.0803637293119213)) ('f_sigv_LRG', np.float64(0.9789678914506764)) ('log_Mcent_LRG', np.float64(12.836470327625713)) ('sigma_M_LRG', np.float64(0.4149366781780369))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 47] ('M_0_LRG', np.float64(12.54214237961448)) ('M_1_LRG', np.float64(13.833021268670981)) ('alpha_LRG', np.float64(1.0204857683489341)) ('f_sigv_LRG', np.float64(0.9433298352979936)) ('log_Mcent_LRG', np.float64(12.833688192697634)) ('sigma_M_LRG', np.float64(0.43841991970931526))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 47] ('M_0_LRG', np.float64(12.454858583220874)) ('M_1_LRG', np.float64(13.839613262317098)) ('alpha_LRG', np.float64(1.050184068259522)) ('f_sigv_LRG', np.float64(0.9987338299879908)) ('log_Mcent_LRG', np.float64(12.792449116432827)) ('sigma_M_LRG', np.float64(0.37147370993553247))
[Interation 47] chi2=764.5777099316939
[Interation 47] chi2=865.1492624504734
[Interation 47] chi2=992.4486435930457
[Interation 47] chi2=898.2148899689214
[Interation 46] ('M_0_LRG', np.float64(12.573929824218041)) ('M_1_LRG', np.float64(13.793241380379776)) ('alpha_LRG', np.float64(1.0483870334044976)) ('f_sigv_LRG', np.float64(0.9630603589084736)) ('log_Mcent_LRG', np.float64(12.783407334097)) ('sigma_M_LRG', np.float64(0.3767024201897549))
[Interation 46] ('M_0_LRG', np.float64(12.520750169710544)) ('M_1_LRG', np.float64(13.849109445190223)) ('alpha_LRG', np.float64(1.0603817193905478)) ('f_sigv_LRG', np.float64(0.9835143592159072)) ('log_Mcent_LRG', np.float64(12.829491234529176)) ('sigma_M_LRG', np.float64(0.4119902614460407))
[Interation 46] ('M_0_LRG', np.float64(12.638915169857965)) ('M_1_LRG', np.float64(13.819858983459325)) ('alpha_LRG', np.float64(1.0099613745039373)) ('f_sigv_LRG', np.float64(0.9476017479778376)) ('log_Mcent_LRG', np.float64(12.811046785065104)) ('sigma_M_LRG', np.float64(0.4069980440498678))
[Interation 46] ('M_0_LRG', np.float64(12.493400383290156)) ('M_1_LRG', np.float64(13.858161256392595)) ('alpha_LRG', np.float64(1.062147605001491)) ('f_sigv_LRG', np.float64(0.9737038046092273)) ('log_Mcent_LRG', np.float64(12.843802806071748)) ('sigma_M_LRG', np.float64(0.42970288007102414))
[Interation 46] ('M_0_LRG', np.float64(12.660453163668706)) ('M_1_LRG', np.float64(13.805914990404126)) ('alpha_LRG', np.float64(0.9951173713732104)) ('f_sigv_LRG', np.float64(0.9717610430069595)) ('log_Mcent_LRG', np.float64(12.781536657207731)) ('sigma_M_LRG', np.float64(0.3691058754916665))
[Interation 46] ('M_0_LRG', np.float64(12.409175783488928)) ('M_1_LRG', np.float64(13.880972480395947)) ('alpha_LRG', np.float64(1.0910736177553235)) ('f_sigv_LRG', np.float64(0.9776867638275227)) ('log_Mcent_LRG', np.float64(12.844795123597581)) ('sigma_M_LRG', np.float64(0.42274605565238565))
[Interation 46] ('M_0_LRG', np.float64(12.483628744750648)) ('M_1_LRG', np.float64(13.854705212628811)) ('alpha_LRG', np.float64(1.0778403273450083)) ('f_sigv_LRG', np.float64(0.9755127711867165)) ('log_Mcent_LRG', np.float64(12.828493421467533)) ('sigma_M_LRG', np.float64(0.40704115796513807))
[Interation 46] ('M_0_LRG', np.float64(12.320497241292328)) ('M_1_LRG', np.float64(13.900574923275753)) ('alpha_LRG', np.float64(1.124185110649041)) ('f_sigv_LRG', np.float64(0.9725027028071687)) ('log_Mcent_LRG', np.float64(12.875337571868853)) ('sigma_M_LRG', np.float64(0.4562920406483507))
[Interation 46] ('M_0_LRG', np.float64(12.615859412238093)) ('M_1_LRG', np.float64(13.814525854530379)) ('alpha_LRG', np.float64(1.0251540730208855)) ('f_sigv_LRG', np.float64(0.9642862994135333)) ('log_Mcent_LRG', np.float64(12.811720028494406)) ('sigma_M_LRG', np.float64(0.4049233893676283))
[Interation 46] ('M_0_LRG', np.float64(12.533775215391504)) ('M_1_LRG', np.float64(13.834756161563808)) ('alpha_LRG', np.float64(1.055240664213936)) ('f_sigv_LRG', np.float64(0.9749199130293621)) ('log_Mcent_LRG', np.float64(12.827719426912214)) ('sigma_M_LRG', np.float64(0.4151924293072406))
[Interation 46] ('M_0_LRG', np.float64(12.49373286247131)) ('M_1_LRG', np.float64(13.856453333467321)) ('alpha_LRG', np.float64(1.0904225595280364)) ('f_sigv_LRG', np.float64(0.9659020798303102)) ('log_Mcent_LRG', np.float64(12.851668997505222)) ('sigma_M_LRG', np.float64(0.43879438399631543))
[Interation 46] ('M_0_LRG', np.float64(12.465117736458929)) ('M_1_LRG', np.float64(13.873669021942588)) ('alpha_LRG', np.float64(1.0643173494058296)) ('f_sigv_LRG', np.float64(0.9704921632197705)) ('log_Mcent_LRG', np.float64(12.852435883386294)) ('sigma_M_LRG', np.float64(0.43752335817355675))
[Interation 46] chi2=848.0326239101607
[Interation 46] chi2=906.6850035760687
[Interation 46] chi2=923.3492910247104
[Interation 46] chi2=828.2057072205021
[Interation 46] chi2=869.392420339131
[Interation 46] chi2=836.1823157785558
[Interation 46] chi2=839.2790974857655
[Interation 46] chi2=878.5524408968122
[Interation 46] chi2=966.7450455703232
[Interation 46] chi2=772.6710846300577
[Interation 46] chi2=864.5474696355927
[Interation 46] chi2=816.0432447230279
[Interation 48] ('M_0_LRG', np.float64(12.47881143331495)) ('M_1_LRG', np.float64(13.858046644325677)) ('alpha_LRG', np.float64(1.0644801736880158)) ('f_sigv_LRG', np.float64(0.9740456379842604)) ('log_Mcent_LRG', np.float64(12.841913692119162)) ('sigma_M_LRG', np.float64(0.427671181303834))
[Interation 48] ('M_0_LRG', np.float64(12.581514198151956)) ('M_1_LRG', np.float64(13.830461701879734)) ('alpha_LRG', np.float64(1.039327016920974)) ('f_sigv_LRG', np.float64(0.9624672496418862)) ('log_Mcent_LRG', np.float64(12.816926628317844)) ('sigma_M_LRG', np.float64(0.4043448132974943))
[Interation 48] ('M_0_LRG', np.float64(12.55900720708561)) ('M_1_LRG', np.float64(13.843770174457827)) ('alpha_LRG', np.float64(1.0091283845772827)) ('f_sigv_LRG', np.float64(0.9609343348556814)) ('log_Mcent_LRG', np.float64(12.818691601237969)) ('sigma_M_LRG', np.float64(0.40815409577842987))
[Interation 48] ('M_0_LRG', np.float64(12.48179121797115)) ('M_1_LRG', np.float64(13.857480976218351)) ('alpha_LRG', np.float64(1.059412320732303)) ('f_sigv_LRG', np.float64(0.9749381402052965)) ('log_Mcent_LRG', np.float64(12.836326077737995)) ('sigma_M_LRG', np.float64(0.4215982562181912))
[Interation 48] chi2=852.339956921436
[Interation 48] chi2=814.4023719164313
[Interation 48] chi2=894.4807933438185
[Interation 48] chi2=948.3045310552857
[Interation 47] ('M_0_LRG', np.float64(12.602987402083507)) ('M_1_LRG', np.float64(13.817302892487582)) ('alpha_LRG', np.float64(1.005415100497449)) ('f_sigv_LRG', np.float64(0.9706504255375135)) ('log_Mcent_LRG', np.float64(12.788051389446377)) ('sigma_M_LRG', np.float64(0.3767913762422848))
[Interation 47] ('M_0_LRG', np.float64(12.281926875947397)) ('M_1_LRG', np.float64(13.929055994090097)) ('alpha_LRG', np.float64(1.150378059390877)) ('f_sigv_LRG', np.float64(0.979591337829551)) ('log_Mcent_LRG', np.float64(12.926149276948603)) ('sigma_M_LRG', np.float64(0.5080980419660691))
[Interation 47] ('M_0_LRG', np.float64(12.641798542895328)) ('M_1_LRG', np.float64(13.829581452825071)) ('alpha_LRG', np.float64(1.0069784032407934)) ('f_sigv_LRG', np.float64(0.9655745398971403)) ('log_Mcent_LRG', np.float64(12.815037271335516)) ('sigma_M_LRG', np.float64(0.4009149019293342))
[Interation 47] ('M_0_LRG', np.float64(12.462102391542569)) ('M_1_LRG', np.float64(13.889618461991093)) ('alpha_LRG', np.float64(1.050595673141014)) ('f_sigv_LRG', np.float64(0.9821953926302922)) ('log_Mcent_LRG', np.float64(12.866862580510912)) ('sigma_M_LRG', np.float64(0.44760406740892783))
[Interation 47] ('M_0_LRG', np.float64(12.457211899665896)) ('M_1_LRG', np.float64(13.877862488164135)) ('alpha_LRG', np.float64(1.0808254967603168)) ('f_sigv_LRG', np.float64(0.9664122313522754)) ('log_Mcent_LRG', np.float64(12.86859746518376)) ('sigma_M_LRG', np.float64(0.4539702039940745))
[Interation 47] ('M_0_LRG', np.float64(12.535972335781906)) ('M_1_LRG', np.float64(13.864336630309952)) ('alpha_LRG', np.float64(1.0285550004134116)) ('f_sigv_LRG', np.float64(0.9717830996710456)) ('log_Mcent_LRG', np.float64(12.845920356250287)) ('sigma_M_LRG', np.float64(0.43198693018471734))
[Interation 47] ('M_0_LRG', np.float64(12.528202929437324)) ('M_1_LRG', np.float64(13.853182617766963)) ('alpha_LRG', np.float64(1.0393431064197824)) ('f_sigv_LRG', np.float64(0.9719242855922139)) ('log_Mcent_LRG', np.float64(12.833320060715689)) ('sigma_M_LRG', np.float64(0.4182811108290885))
[Interation 47] ('M_0_LRG', np.float64(12.368790648076782)) ('M_1_LRG', np.float64(13.902467930834515)) ('alpha_LRG', np.float64(1.0891648305855317)) ('f_sigv_LRG', np.float64(0.9894086491890878)) ('log_Mcent_LRG', np.float64(12.877169225331393)) ('sigma_M_LRG', np.float64(0.4549939673644222))
[Interation 47] ('M_0_LRG', np.float64(12.32987172577517)) ('M_1_LRG', np.float64(13.932627679813821)) ('alpha_LRG', np.float64(1.1033672680505648)) ('f_sigv_LRG', np.float64(0.9845285196502089)) ('log_Mcent_LRG', np.float64(12.917811621634145)) ('sigma_M_LRG', np.float64(0.49458677606559176))
[Interation 47] ('M_0_LRG', np.float64(12.486376108138517)) ('M_1_LRG', np.float64(13.886836638577918)) ('alpha_LRG', np.float64(1.0446334231569852)) ('f_sigv_LRG', np.float64(0.9815945485183666)) ('log_Mcent_LRG', np.float64(12.863864872842758)) ('sigma_M_LRG', np.float64(0.4420120970254472))
[Interation 47] ('M_0_LRG', np.float64(12.355573670091097)) ('M_1_LRG', np.float64(13.902264247288047)) ('alpha_LRG', np.float64(1.1069325148831417)) ('f_sigv_LRG', np.float64(0.9824046630424329)) ('log_Mcent_LRG', np.float64(12.883409024666669)) ('sigma_M_LRG', np.float64(0.4660788942091789))
[Interation 47] ('M_0_LRG', np.float64(12.428370646367227)) ('M_1_LRG', np.float64(13.900467910156781)) ('alpha_LRG', np.float64(1.0855167739484737)) ('f_sigv_LRG', np.float64(0.9747700351562554)) ('log_Mcent_LRG', np.float64(12.893869619709587)) ('sigma_M_LRG', np.float64(0.4745402027013133))
[Interation 47] chi2=899.3955733277829
[Interation 47] chi2=965.1517072137651
[Interation 47] chi2=824.9698798012975
[Interation 47] chi2=732.3968770121987
[Interation 47] chi2=794.8053869512337
[Interation 47] chi2=841.2803023671465
[Interation 47] chi2=848.195144031336
[Interation 47] chi2=850.3270929059321
[Interation 47] chi2=834.4317975387628
[Interation 47] chi2=798.3970378802287
[Interation 47] chi2=917.5476525432971
[Interation 47] chi2=906.0424723860889
Load data vector for LRG
Load rppi measurements at z0.6-0.8 for LRG...
Load smu measurements at z0.6-0.8 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.412853628202402)) ('M_1_LRG', np.float64(13.917966431883782)) ('alpha_LRG', np.float64(1.0759847889504603)) ('f_sigv_LRG', np.float64(0.9782559892104109)) ('log_Mcent_LRG', np.float64(12.904964106539127)) ('sigma_M_LRG', np.float64(0.4834686396124987))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3188822269439697
Start satellite assignement
Satellite assignement done 0.07403707504272461
LRG mock catalogue done 0.14191031455993652
535619 central galaxies, 87533 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6307992935180664
