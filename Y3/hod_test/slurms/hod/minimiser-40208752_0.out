[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_04.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:17
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:17
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:17
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:19
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:19
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:19
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:19
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load rppi measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Load rppi measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.612096372347645)) ('M_1_LRG', np.float64(13.705042892038918)) ('alpha_LRG', np.float64(0.9886716351300077)) ('f_sigv_LRG', np.float64(0.9989954434341611)) ('log_Mcent_LRG', np.float64(12.815644241558106)) ('sigma_M_LRG', np.float64(0.5071564179974675))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.47541166001925)) ('M_1_LRG', np.float64(13.730376276357937)) ('alpha_LRG', np.float64(1.0604692490272223)) ('f_sigv_LRG', np.float64(0.9918643241647627)) ('log_Mcent_LRG', np.float64(12.831988728246273)) ('sigma_M_LRG', np.float64(0.513419361188883))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.51309055320693)) ('M_1_LRG', np.float64(13.776500037012006)) ('alpha_LRG', np.float64(1.0333675753015392)) ('f_sigv_LRG', np.float64(0.9978042005575983)) ('log_Mcent_LRG', np.float64(12.896188327159736)) ('sigma_M_LRG', np.float64(0.5578479899682479))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.6079614988666)) ('M_1_LRG', np.float64(13.753636352176107)) ('alpha_LRG', np.float64(0.9722870570517074)) ('f_sigv_LRG', np.float64(1.0011362633759568)) ('log_Mcent_LRG', np.float64(12.876215439951888)) ('sigma_M_LRG', np.float64(0.5373493953979314))
[Interation 1] chi2=1114.3078155629037
[Interation 1] chi2=1014.6752127813961
[Interation 1] chi2=1018.1576162322386
[Interation 1] chi2=967.6089177495383
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.423201794871447)) ('M_1_LRG', np.float64(13.719982443625762)) ('alpha_LRG', np.float64(1.0321666727283174)) ('f_sigv_LRG', np.float64(1.0186245898338342)) ('log_Mcent_LRG', np.float64(12.784424405495182)) ('sigma_M_LRG', np.float64(0.46640216496855835))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.438684098928642)) ('M_1_LRG', np.float64(13.756426455743565)) ('alpha_LRG', np.float64(1.0654124782965553)) ('f_sigv_LRG', np.float64(0.9922620475335763)) ('log_Mcent_LRG', np.float64(12.856213698878646)) ('sigma_M_LRG', np.float64(0.5238330011666694))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.563207124460549)) ('M_1_LRG', np.float64(13.68762764949685)) ('alpha_LRG', np.float64(1.0263192486004769)) ('f_sigv_LRG', np.float64(1.0091506989520196)) ('log_Mcent_LRG', np.float64(12.7853732466057)) ('sigma_M_LRG', np.float64(0.4674310328014283))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.821759035444623)) ('M_1_LRG', np.float64(13.652214959979942)) ('alpha_LRG', np.float64(0.9073549353230368)) ('f_sigv_LRG', np.float64(0.9668809437652086)) ('log_Mcent_LRG', np.float64(12.809832212231214)) ('sigma_M_LRG', np.float64(0.5090511325847099))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.593472747750273)) ('M_1_LRG', np.float64(13.686443416028748)) ('alpha_LRG', np.float64(0.9656759942550301)) ('f_sigv_LRG', np.float64(1.0252489082475207)) ('log_Mcent_LRG', np.float64(12.791904839269872)) ('sigma_M_LRG', np.float64(0.4823562778776564))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.672406305518502)) ('M_1_LRG', np.float64(13.811549352722764)) ('alpha_LRG', np.float64(0.9369887002361655)) ('f_sigv_LRG', np.float64(0.9982367333040052)) ('log_Mcent_LRG', np.float64(12.940127383971367)) ('sigma_M_LRG', np.float64(0.5841872309450623))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.596532536430326)) ('M_1_LRG', np.float64(13.656744295758097)) ('alpha_LRG', np.float64(1.0052702422789077)) ('f_sigv_LRG', np.float64(0.980193909326811)) ('log_Mcent_LRG', np.float64(12.758078709514619)) ('sigma_M_LRG', np.float64(0.4443943997154223))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.374565655812386)) ('M_1_LRG', np.float64(13.723470708415284)) ('alpha_LRG', np.float64(1.108682666663582)) ('f_sigv_LRG', np.float64(1.0222717809199942)) ('log_Mcent_LRG', np.float64(12.808683681399982)) ('sigma_M_LRG', np.float64(0.48510676161108224))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.490553383363803)) ('M_1_LRG', np.float64(13.735682093209116)) ('alpha_LRG', np.float64(1.0211425547287747)) ('f_sigv_LRG', np.float64(1.008297915359823)) ('log_Mcent_LRG', np.float64(12.821560076497056)) ('sigma_M_LRG', np.float64(0.49746386928010805))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.42776013666863)) ('M_1_LRG', np.float64(13.742312370867635)) ('alpha_LRG', np.float64(1.1095668210789986)) ('f_sigv_LRG', np.float64(0.9912916341427089)) ('log_Mcent_LRG', np.float64(12.8555129239366)) ('sigma_M_LRG', np.float64(0.5224267827131809))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.25531350507853)) ('M_1_LRG', np.float64(13.814645152597084)) ('alpha_LRG', np.float64(1.1300585572220054)) ('f_sigv_LRG', np.float64(1.040041785025673)) ('log_Mcent_LRG', np.float64(12.86656928685448)) ('sigma_M_LRG', np.float64(0.5099029275058125))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.46559389519687)) ('M_1_LRG', np.float64(13.763801464179878)) ('alpha_LRG', np.float64(1.0314530139144114)) ('f_sigv_LRG', np.float64(1.0124590072166448)) ('log_Mcent_LRG', np.float64(12.874930817844069)) ('sigma_M_LRG', np.float64(0.543353082624961))
[Interation 1] chi2=1021.1254941397499
[Interation 1] chi2=1008.8777308800169
[Interation 1] chi2=1044.96945628956
[Interation 1] chi2=1271.0069067781249
[Interation 1] chi2=1010.4139011332693
[Interation 1] chi2=1107.5359626853844
[Interation 1] chi2=1040.589423486554
[Interation 1] chi2=1073.8328637571115
[Interation 1] chi2=1021.1019654577409
[Interation 1] chi2=1083.2127030520921
[Interation 1] chi2=1002.8377222218922
[Interation 1] chi2=930.929135320042
[Interation 2] ('M_0_LRG', np.float64(12.42109457668928)) ('M_1_LRG', np.float64(13.772000912528092)) ('alpha_LRG', np.float64(1.0523994148772504)) ('f_sigv_LRG', np.float64(1.0133909364561824)) ('log_Mcent_LRG', np.float64(12.859981011485829)) ('sigma_M_LRG', np.float64(0.5268473458886958))
[Interation 2] ('M_0_LRG', np.float64(12.485188043165268)) ('M_1_LRG', np.float64(13.737398838191751)) ('alpha_LRG', np.float64(1.0594514133949233)) ('f_sigv_LRG', np.float64(0.9990182324080004)) ('log_Mcent_LRG', np.float64(12.847591658309588)) ('sigma_M_LRG', np.float64(0.5185946568601688))
[Interation 2] ('M_0_LRG', np.float64(12.434661237780862)) ('M_1_LRG', np.float64(13.735958556419881)) ('alpha_LRG', np.float64(1.0867333357424505)) ('f_sigv_LRG', np.float64(0.9944579833355389)) ('log_Mcent_LRG', np.float64(12.838535239896373)) ('sigma_M_LRG', np.float64(0.5122457728588692))
[Interation 2] ('M_0_LRG', np.float64(12.391557481354134)) ('M_1_LRG', np.float64(13.798651644545338)) ('alpha_LRG', np.float64(1.0908308342675497)) ('f_sigv_LRG', np.float64(1.0012851581998057)) ('log_Mcent_LRG', np.float64(12.900728431310169)) ('sigma_M_LRG', np.float64(0.5557913075919466))
[Interation 2] chi2=1032.3483276034767
[Interation 2] chi2=1043.291789988931
[Interation 2] chi2=1028.830491444121
[Interation 2] chi2=1051.8625509712374
[Interation 2] ('M_0_LRG', np.float64(12.393130638922601)) ('M_1_LRG', np.float64(13.804296168029635)) ('alpha_LRG', np.float64(1.0804007649455079)) ('f_sigv_LRG', np.float64(1.0017487634498896)) ('log_Mcent_LRG', np.float64(12.906648708659121)) ('sigma_M_LRG', np.float64(0.5588876500397733))
[Interation 2] ('M_0_LRG', np.float64(12.452683359106533)) ('M_1_LRG', np.float64(13.766446709708008)) ('alpha_LRG', np.float64(1.0630815835019012)) ('f_sigv_LRG', np.float64(0.9841440060448459)) ('log_Mcent_LRG', np.float64(12.87688461139102)) ('sigma_M_LRG', np.float64(0.5433936202833561))
[Interation 2] ('M_0_LRG', np.float64(12.430857435059039)) ('M_1_LRG', np.float64(13.738255818169332)) ('alpha_LRG', np.float64(1.0722045045079178)) ('f_sigv_LRG', np.float64(1.0018133884079177)) ('log_Mcent_LRG', np.float64(12.827182602172144)) ('sigma_M_LRG', np.float64(0.5016253406088826))
[Interation 2] ('M_0_LRG', np.float64(12.459137568352611)) ('M_1_LRG', np.float64(13.739547390009502)) ('alpha_LRG', np.float64(1.0576912276377597)) ('f_sigv_LRG', np.float64(1.0004146937652958)) ('log_Mcent_LRG', np.float64(12.832818440509614)) ('sigma_M_LRG', np.float64(0.5060020659233131))
[Interation 2] ('M_0_LRG', np.float64(12.409428502491451)) ('M_1_LRG', np.float64(13.790568601118013)) ('alpha_LRG', np.float64(1.0710009176130495)) ('f_sigv_LRG', np.float64(0.9974333977643451)) ('log_Mcent_LRG', np.float64(12.887913183587717)) ('sigma_M_LRG', np.float64(0.5454880661737849))
[Interation 2] ('M_0_LRG', np.float64(12.431829402740965)) ('M_1_LRG', np.float64(13.785334508511486)) ('alpha_LRG', np.float64(1.0601748396829578)) ('f_sigv_LRG', np.float64(1.0035391445223814)) ('log_Mcent_LRG', np.float64(12.890254939913778)) ('sigma_M_LRG', np.float64(0.5490556911068867))
[Interation 2] ('M_0_LRG', np.float64(12.424226496039159)) ('M_1_LRG', np.float64(13.76764697016948)) ('alpha_LRG', np.float64(1.0906961222471363)) ('f_sigv_LRG', np.float64(0.9970624973434239)) ('log_Mcent_LRG', np.float64(12.865892934028325)) ('sigma_M_LRG', np.float64(0.528441153725534))
[Interation 2] ('M_0_LRG', np.float64(12.429512286839891)) ('M_1_LRG', np.float64(13.749976637971233)) ('alpha_LRG', np.float64(1.069105491530825)) ('f_sigv_LRG', np.float64(1.001900603060386)) ('log_Mcent_LRG', np.float64(12.835418355503286)) ('sigma_M_LRG', np.float64(0.5060597424938394))
[Interation 2] ('M_0_LRG', np.float64(12.447074463723151)) ('M_1_LRG', np.float64(13.80402715563076)) ('alpha_LRG', np.float64(1.0512063116860308)) ('f_sigv_LRG', np.float64(1.0065629646246572)) ('log_Mcent_LRG', np.float64(12.912134079610663)) ('sigma_M_LRG', np.float64(0.5628991138272386))
[Interation 2] ('M_0_LRG', np.float64(12.448937884114715)) ('M_1_LRG', np.float64(13.748876401011788)) ('alpha_LRG', np.float64(1.0559804546291829)) ('f_sigv_LRG', np.float64(1.0036313857178425)) ('log_Mcent_LRG', np.float64(12.837914132773507)) ('sigma_M_LRG', np.float64(0.5085028549941313))
[Interation 2] ('M_0_LRG', np.float64(12.411835553385638)) ('M_1_LRG', np.float64(13.787036934911884)) ('alpha_LRG', np.float64(1.0588551939175155)) ('f_sigv_LRG', np.float64(1.0047226425442077)) ('log_Mcent_LRG', np.float64(12.873991119368727)) ('sigma_M_LRG', np.float64(0.5367556480757871))
[Interation 2] ('M_0_LRG', np.float64(12.382700483019836)) ('M_1_LRG', np.float64(13.799746519709156)) ('alpha_LRG', np.float64(1.0879338992510037)) ('f_sigv_LRG', np.float64(1.0028349171644526)) ('log_Mcent_LRG', np.float64(12.89491561082478)) ('sigma_M_LRG', np.float64(0.5498575801787282))
[Interation 2] chi2=995.926841705412
[Interation 2] chi2=997.8895969259321
[Interation 2] chi2=1033.069399103332
[Interation 2] chi2=1060.2745406188446
[Interation 2] chi2=1080.8418164893324
[Interation 2] chi2=964.7198234920024
[Interation 2] chi2=911.0779816480725
[Interation 2] chi2=898.4024504949792
[Interation 2] chi2=1065.6538441573618
[Interation 2] chi2=943.6705082258259
[Interation 2] chi2=896.4497748553904
[Interation 2] chi2=1048.9053549942391
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_05.npy
Set number of threads to 32
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.40849126648445)) ('M_1_LRG', np.float64(13.783047462398022)) ('alpha_LRG', np.float64(1.081391433832616)) ('f_sigv_LRG', np.float64(0.9904991179781372)) ('log_Mcent_LRG', np.float64(12.88456502323892)) ('sigma_M_LRG', np.float64(0.5442225555789169))
Create mock catalog for ['LRG']
Run HOD for LRG
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
Set density to 0.0007 gal/Mpc/h
HOD Computed 1.4297499656677246
Start satellite assignement
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
Satellite assignement done 1.8169560432434082
LRG mock catalogue done 1.8834459781646729
540536 central galaxies, 91599 satellites, fraction of satellite 0.14 
Done overall time  LRG 3.486558675765991
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_05.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:18
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.590040128132715)) ('M_1_LRG', np.float64(13.64522175002738)) ('alpha_LRG', np.float64(1.0341910892293877)) ('f_sigv_LRG', np.float64(1.010792191769514)) ('log_Mcent_LRG', np.float64(12.743446730655865)) ('sigma_M_LRG', np.float64(0.4243547529240382))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.552897848549186)) ('M_1_LRG', np.float64(13.61682012211624)) ('alpha_LRG', np.float64(1.0116070305040694)) ('f_sigv_LRG', np.float64(0.9880630112408665)) ('log_Mcent_LRG', np.float64(12.69665395131058)) ('sigma_M_LRG', np.float64(0.4036338387442826))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.635190753940853)) ('M_1_LRG', np.float64(13.637033942372375)) ('alpha_LRG', np.float64(0.9485055400943394)) ('f_sigv_LRG', np.float64(0.9979814872452445)) ('log_Mcent_LRG', np.float64(12.719948525297788)) ('sigma_M_LRG', np.float64(0.4085593546631073))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.655231128117455)) ('M_1_LRG', np.float64(13.600800428547396)) ('alpha_LRG', np.float64(0.9145071664605534)) ('f_sigv_LRG', np.float64(1.0068385129030155)) ('log_Mcent_LRG', np.float64(12.659498870604093)) ('sigma_M_LRG', np.float64(0.3513587033814502))
[Interation 3] chi2=1036.0284522477477
[Interation 3] chi2=953.5178804234532
[Interation 3] chi2=1017.0834648310149
[Interation 3] chi2=1063.570440870331
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.561029756380002)) ('M_1_LRG', np.float64(13.604935240515836)) ('alpha_LRG', np.float64(0.9936593133546696)) ('f_sigv_LRG', np.float64(0.9964037805772125)) ('log_Mcent_LRG', np.float64(12.671146807966919)) ('sigma_M_LRG', np.float64(0.3726777257075278))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.608839990804423)) ('M_1_LRG', np.float64(13.670744461312184)) ('alpha_LRG', np.float64(0.9392210597622433)) ('f_sigv_LRG', np.float64(1.0326948337879567)) ('log_Mcent_LRG', np.float64(12.77028889735451)) ('sigma_M_LRG', np.float64(0.45099761200715777))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.55938866819316)) ('M_1_LRG', np.float64(13.730254744621455)) ('alpha_LRG', np.float64(1.0324433825156)) ('f_sigv_LRG', np.float64(1.0325969358193026)) ('log_Mcent_LRG', np.float64(12.828546522535529)) ('sigma_M_LRG', np.float64(0.505046149605235))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.554135987790971)) ('M_1_LRG', np.float64(13.728726661974626)) ('alpha_LRG', np.float64(1.0320826642074004)) ('f_sigv_LRG', np.float64(0.9964511901347531)) ('log_Mcent_LRG', np.float64(12.828365157331891)) ('sigma_M_LRG', np.float64(0.49968534364343))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.548747995651112)) ('M_1_LRG', np.float64(13.659958146459852)) ('alpha_LRG', np.float64(1.0840271003500914)) ('f_sigv_LRG', np.float64(0.963197576949369)) ('log_Mcent_LRG', np.float64(12.744879353445201)) ('sigma_M_LRG', np.float64(0.4373666219963493))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.546499230102922)) ('M_1_LRG', np.float64(13.650861217509306)) ('alpha_LRG', np.float64(1.0461632714594395)) ('f_sigv_LRG', np.float64(0.9821706569414724)) ('log_Mcent_LRG', np.float64(12.750771225755356)) ('sigma_M_LRG', np.float64(0.44674198861551034))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.54191048931684)) ('M_1_LRG', np.float64(13.658968498620082)) ('alpha_LRG', np.float64(0.96230634915216)) ('f_sigv_LRG', np.float64(0.9866574541787325)) ('log_Mcent_LRG', np.float64(12.740192991239853)) ('sigma_M_LRG', np.float64(0.43663349850123956))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.494438802957252)) ('M_1_LRG', np.float64(13.715094172734371)) ('alpha_LRG', np.float64(1.0731382726383125)) ('f_sigv_LRG', np.float64(0.972159049976264)) ('log_Mcent_LRG', np.float64(12.808519053339817)) ('sigma_M_LRG', np.float64(0.49109025773626563))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.68695133559917)) ('M_1_LRG', np.float64(13.61413321575099)) ('alpha_LRG', np.float64(0.9097166904374447)) ('f_sigv_LRG', np.float64(0.9843153105800478)) ('log_Mcent_LRG', np.float64(12.699184152483326)) ('sigma_M_LRG', np.float64(0.38938198385074235))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.487186257705181)) ('M_1_LRG', np.float64(13.635571936923107)) ('alpha_LRG', np.float64(1.0759444619050056)) ('f_sigv_LRG', np.float64(0.9778325670578615)) ('log_Mcent_LRG', np.float64(12.696745706316676)) ('sigma_M_LRG', np.float64(0.39333088485944634))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.514700954362425)) ('M_1_LRG', np.float64(13.673432932611169)) ('alpha_LRG', np.float64(0.9899613677922138)) ('f_sigv_LRG', np.float64(0.9883191444110777)) ('log_Mcent_LRG', np.float64(12.732807332491564)) ('sigma_M_LRG', np.float64(0.4244971683385502))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.665948102514323)) ('M_1_LRG', np.float64(13.585657255896901)) ('alpha_LRG', np.float64(0.9589766029914292)) ('f_sigv_LRG', np.float64(0.954133120146084)) ('log_Mcent_LRG', np.float64(12.675765095028792)) ('sigma_M_LRG', np.float64(0.3809151375366443))
[Interation 3] chi2=1071.5988479630382
[Interation 3] chi2=1029.8243464071938
[Interation 3] chi2=1065.6408004081027
[Interation 3] chi2=1082.3856400912352
[Interation 3] chi2=990.7393935191454
[Interation 3] chi2=1022.4752448261968
[Interation 3] chi2=1070.6808001722854
[Interation 3] chi2=1037.3255884840692
[Interation 3] chi2=1099.596753438232
[Interation 3] chi2=1074.5403417992438
[Interation 3] chi2=1075.5838065066196
[Interation 3] chi2=1057.5010182666078
[Interation 4] ('M_0_LRG', np.float64(12.660163968866268)) ('M_1_LRG', np.float64(13.694194573282331)) ('alpha_LRG', np.float64(0.9489314092361979)) ('f_sigv_LRG', np.float64(0.990326383984349)) ('log_Mcent_LRG', np.float64(12.823463510794618)) ('sigma_M_LRG', np.float64(0.5088720670501004))
[Interation 4] ('M_0_LRG', np.float64(12.592442253280764)) ('M_1_LRG', np.float64(13.748308802056396)) ('alpha_LRG', np.float64(0.9660171472132915)) ('f_sigv_LRG', np.float64(0.9991918662314092)) ('log_Mcent_LRG', np.float64(12.85553161754825)) ('sigma_M_LRG', np.float64(0.5280123181068127))
[Interation 4] ('M_0_LRG', np.float64(12.564878176624626)) ('M_1_LRG', np.float64(13.753660062575689)) ('alpha_LRG', np.float64(0.9957730942641417)) ('f_sigv_LRG', np.float64(1.0176689359218298)) ('log_Mcent_LRG', np.float64(12.852064223157127)) ('sigma_M_LRG', np.float64(0.5187812021575106))
[Interation 4] ('M_0_LRG', np.float64(12.585888929523778)) ('M_1_LRG', np.float64(13.676338436564341)) ('alpha_LRG', np.float64(0.9966856835418748)) ('f_sigv_LRG', np.float64(0.9924249885272571)) ('log_Mcent_LRG', np.float64(12.772460172884562)) ('sigma_M_LRG', np.float64(0.45959984741633664))
[Interation 4] chi2=991.3224139042834
[Interation 4] chi2=980.4917890422485
[Interation 4] chi2=1024.737689016248
[Interation 4] chi2=1080.959919373636
[Interation 4] ('M_0_LRG', np.float64(12.59890423419235)) ('M_1_LRG', np.float64(13.733010096971437)) ('alpha_LRG', np.float64(0.9870287355877533)) ('f_sigv_LRG', np.float64(0.9951204169579988)) ('log_Mcent_LRG', np.float64(12.846429410381868)) ('sigma_M_LRG', np.float64(0.5241971689453951))
[Interation 4] ('M_0_LRG', np.float64(12.61546330013935)) ('M_1_LRG', np.float64(13.715447944285847)) ('alpha_LRG', np.float64(0.9912497055612433)) ('f_sigv_LRG', np.float64(0.9893869307929936)) ('log_Mcent_LRG', np.float64(12.830175723017595)) ('sigma_M_LRG', np.float64(0.5086314848962166))
[Interation 4] ('M_0_LRG', np.float64(12.596394372376253)) ('M_1_LRG', np.float64(13.72737475628939)) ('alpha_LRG', np.float64(1.0063973595917193)) ('f_sigv_LRG', np.float64(1.0025356734560007)) ('log_Mcent_LRG', np.float64(12.83989875506881)) ('sigma_M_LRG', np.float64(0.513821434458124))
[Interation 4] ('M_0_LRG', np.float64(12.62499057627626)) ('M_1_LRG', np.float64(13.728002451854849)) ('alpha_LRG', np.float64(1.004209213688409)) ('f_sigv_LRG', np.float64(0.9886255090403056)) ('log_Mcent_LRG', np.float64(12.873130777044151)) ('sigma_M_LRG', np.float64(0.5480596241230833))
[Interation 4] ('M_0_LRG', np.float64(12.59786744744331)) ('M_1_LRG', np.float64(13.71784939403454)) ('alpha_LRG', np.float64(0.9810455126875884)) ('f_sigv_LRG', np.float64(1.0057608429377614)) ('log_Mcent_LRG', np.float64(12.819890609971717)) ('sigma_M_LRG', np.float64(0.49719864519158946))
[Interation 4] ('M_0_LRG', np.float64(12.618892473473133)) ('M_1_LRG', np.float64(13.697025384786887)) ('alpha_LRG', np.float64(0.9994897121492317)) ('f_sigv_LRG', np.float64(0.9906218076310485)) ('log_Mcent_LRG', np.float64(12.812870020005084)) ('sigma_M_LRG', np.float64(0.48782885508278784))
[Interation 4] ('M_0_LRG', np.float64(12.590342313338926)) ('M_1_LRG', np.float64(13.700031398150767)) ('alpha_LRG', np.float64(1.015197480643226)) ('f_sigv_LRG', np.float64(0.9788017846926225)) ('log_Mcent_LRG', np.float64(12.808957242665604)) ('sigma_M_LRG', np.float64(0.48794542583816636))
[Interation 4] ('M_0_LRG', np.float64(12.602349005476649)) ('M_1_LRG', np.float64(13.730832169676692)) ('alpha_LRG', np.float64(0.9981840230502514)) ('f_sigv_LRG', np.float64(0.9878303963645385)) ('log_Mcent_LRG', np.float64(12.85511707482463)) ('sigma_M_LRG', np.float64(0.5275168571467262))
[Interation 4] ('M_0_LRG', np.float64(12.571693185026763)) ('M_1_LRG', np.float64(13.71803322955212)) ('alpha_LRG', np.float64(1.0148875471414809)) ('f_sigv_LRG', np.float64(0.9931689979520317)) ('log_Mcent_LRG', np.float64(12.816700489953899)) ('sigma_M_LRG', np.float64(0.4924063139762721))
[Interation 4] ('M_0_LRG', np.float64(12.587592515184905)) ('M_1_LRG', np.float64(13.717389151424076)) ('alpha_LRG', np.float64(1.0074340134009767)) ('f_sigv_LRG', np.float64(0.9917899444527887)) ('log_Mcent_LRG', np.float64(12.82631519243887)) ('sigma_M_LRG', np.float64(0.5069861343270858))
[Interation 4] ('M_0_LRG', np.float64(12.557136043395792)) ('M_1_LRG', np.float64(13.742580989901265)) ('alpha_LRG', np.float64(1.0051502541047483)) ('f_sigv_LRG', np.float64(0.9953775607131072)) ('log_Mcent_LRG', np.float64(12.850249587083546)) ('sigma_M_LRG', np.float64(0.526293716348844))
[Interation 4] ('M_0_LRG', np.float64(12.58540175887853)) ('M_1_LRG', np.float64(13.734073076374276)) ('alpha_LRG', np.float64(0.971791135400416)) ('f_sigv_LRG', np.float64(1.002998578257169)) ('log_Mcent_LRG', np.float64(12.806510387984092)) ('sigma_M_LRG', np.float64(0.4787742951647283))
[Interation 4] chi2=969.2640303917391
[Interation 4] chi2=1080.2732405350757
[Interation 4] chi2=1062.6976485700036
[Interation 4] chi2=976.3061021622766
[Interation 4] chi2=988.0404228988008
[Interation 4] chi2=1040.918821676633
[Interation 4] chi2=1001.2555045746833
[Interation 4] chi2=1113.3234010074618
[Interation 4] chi2=1100.6979219032842
[Interation 4] chi2=1042.2743248858455
[Interation 4] chi2=1028.4772347934547
[Interation 4] chi2=1063.719260071499
[Interation 5] ('M_0_LRG', np.float64(12.603778742161374)) ('M_1_LRG', np.float64(13.72138603157855)) ('alpha_LRG', np.float64(0.9912781294032328)) ('f_sigv_LRG', np.float64(0.9891578719679489)) ('log_Mcent_LRG', np.float64(12.83159924985594)) ('sigma_M_LRG', np.float64(0.5070475207415398))
[Interation 5] ('M_0_LRG', np.float64(12.659954478327629)) ('M_1_LRG', np.float64(13.69095551567529)) ('alpha_LRG', np.float64(0.959547630889705)) ('f_sigv_LRG', np.float64(0.9888219470044828)) ('log_Mcent_LRG', np.float64(12.819280653579291)) ('sigma_M_LRG', np.float64(0.5067677445449448))
[Interation 5] ('M_0_LRG', np.float64(12.624164106760789)) ('M_1_LRG', np.float64(13.71956631129849)) ('alpha_LRG', np.float64(0.9822899638649238)) ('f_sigv_LRG', np.float64(0.9921350215969097)) ('log_Mcent_LRG', np.float64(12.830999410203322)) ('sigma_M_LRG', np.float64(0.5056139466739143))
[Interation 5] ('M_0_LRG', np.float64(12.580982899857052)) ('M_1_LRG', np.float64(13.750884504827626)) ('alpha_LRG', np.float64(0.9922542962181257)) ('f_sigv_LRG', np.float64(0.998223332069682)) ('log_Mcent_LRG', np.float64(12.858421818186407)) ('sigma_M_LRG', np.float64(0.52833874999462))
[Interation 5] chi2=1079.4061727975982
[Interation 5] chi2=991.9209363896932
[Interation 5] chi2=1033.9842360477608
[Interation 5] chi2=1044.4856297552583
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_06.npy
Set number of threads to 32
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.629172245775456)) ('M_1_LRG', np.float64(13.70542654707685)) ('alpha_LRG', np.float64(0.9775332090154466)) ('f_sigv_LRG', np.float64(0.9944472488958269)) ('log_Mcent_LRG', np.float64(12.819142373678929)) ('sigma_M_LRG', np.float64(0.49647267062172584))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3253629207611084
Start satellite assignement
Satellite assignement done 0.07952046394348145
LRG mock catalogue done 0.15587592124938965
592988 central galaxies, 95522 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6489648818969727
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_06.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:18
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:25
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:25
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:26
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:26
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:26
Load rppi measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:26
Load correlation matrix for LRG at z0.95 ...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.511905168141281)) ('M_1_LRG', np.float64(13.439987243194809)) ('alpha_LRG', np.float64(0.9879055534572929)) ('f_sigv_LRG', np.float64(1.000455854507881)) ('log_Mcent_LRG', np.float64(12.720502936236002)) ('sigma_M_LRG', np.float64(0.46423126447170077))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.537975160979446)) ('M_1_LRG', np.float64(13.577412857258485)) ('alpha_LRG', np.float64(0.9245691044875783)) ('f_sigv_LRG', np.float64(1.0636020972061404)) ('log_Mcent_LRG', np.float64(12.694379839260021)) ('sigma_M_LRG', np.float64(0.42974412082016406))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.566997745001878)) ('M_1_LRG', np.float64(13.556526335328947)) ('alpha_LRG', np.float64(0.9402650138048022)) ('f_sigv_LRG', np.float64(1.0556071410365173)) ('log_Mcent_LRG', np.float64(12.721502216564192)) ('sigma_M_LRG', np.float64(0.4295942549792725))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.49241334142138)) ('M_1_LRG', np.float64(13.487765581303961)) ('alpha_LRG', np.float64(0.9559822293172263)) ('f_sigv_LRG', np.float64(0.9901450043053761)) ('log_Mcent_LRG', np.float64(12.744258047873165)) ('sigma_M_LRG', np.float64(0.5600015272507357))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.486874842697826)) ('M_1_LRG', np.float64(13.447051099918301)) ('alpha_LRG', np.float64(1.0049225853987362)) ('f_sigv_LRG', np.float64(1.0733240783075029)) ('log_Mcent_LRG', np.float64(12.893087433396632)) ('sigma_M_LRG', np.float64(0.4350147564235862))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.490611000543055)) ('M_1_LRG', np.float64(13.439419275387342)) ('alpha_LRG', np.float64(1.0077603123926955)) ('f_sigv_LRG', np.float64(1.0867530560075034)) ('log_Mcent_LRG', np.float64(12.708459879082822)) ('sigma_M_LRG', np.float64(0.5013831578163532))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.462410585677981)) ('M_1_LRG', np.float64(13.526318209105144)) ('alpha_LRG', np.float64(1.0037451633428627)) ('f_sigv_LRG', np.float64(0.9528160215849131)) ('log_Mcent_LRG', np.float64(12.629087500495585)) ('sigma_M_LRG', np.float64(0.47412150666058667))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.44826487542184)) ('M_1_LRG', np.float64(13.455963264205336)) ('alpha_LRG', np.float64(1.0452336034266079)) ('f_sigv_LRG', np.float64(0.9805657351426847)) ('log_Mcent_LRG', np.float64(12.788984318550654)) ('sigma_M_LRG', np.float64(0.42902436067434013))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.5265635519716)) ('M_1_LRG', np.float64(13.559929608713036)) ('alpha_LRG', np.float64(1.0076096216040242)) ('f_sigv_LRG', np.float64(0.8831333003062165)) ('log_Mcent_LRG', np.float64(12.723899713699108)) ('sigma_M_LRG', np.float64(0.48984119803307247))
[Interation 5] chi2=2618.792196968313
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.506452615531927)) ('M_1_LRG', np.float64(13.416125570479817)) ('alpha_LRG', np.float64(1.0316695699291367)) ('f_sigv_LRG', np.float64(1.063061459257018)) ('log_Mcent_LRG', np.float64(12.709807323160309)) ('sigma_M_LRG', np.float64(0.49548424162337984))
[Interation 5] chi2=1254.2104422688267
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.50014490979662)) ('M_1_LRG', np.float64(13.545627059431704)) ('alpha_LRG', np.float64(0.9305984010546335)) ('f_sigv_LRG', np.float64(1.11051680293398)) ('log_Mcent_LRG', np.float64(12.827337716734913)) ('sigma_M_LRG', np.float64(0.533512492232715))
[Interation 5] chi2=1426.731266762631
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.48267570877408)) ('M_1_LRG', np.float64(13.44971902281177)) ('alpha_LRG', np.float64(0.9888445263256076)) ('f_sigv_LRG', np.float64(0.9135673743906948)) ('log_Mcent_LRG', np.float64(12.793128691114175)) ('sigma_M_LRG', np.float64(0.5612158626435526))
[Interation 5] chi2=2136.673154150821
[Interation 5] chi2=28506.208218038242
[Interation 5] chi2=2569.168204562581
[Interation 5] chi2=2499.847677342775
[Interation 5] chi2=10012.407193068697
[Interation 5] chi2=1421.278982672568
[Interation 5] chi2=2734.6250946718155
[Interation 5] chi2=2864.106684144672
[Interation 5] chi2=3278.6308451832133
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 6] ('M_0_LRG', np.float64(12.493436647552386)) ('M_1_LRG', np.float64(13.758135392200925)) ('alpha_LRG', np.float64(1.0382457384357777)) ('f_sigv_LRG', np.float64(1.0001090696414618)) ('log_Mcent_LRG', np.float64(12.859251779621935)) ('sigma_M_LRG', np.float64(0.5275093880580096))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 6] ('M_0_LRG', np.float64(12.448552468913801)) ('M_1_LRG', np.float64(13.849901842451072)) ('alpha_LRG', np.float64(0.9887287740542043)) ('f_sigv_LRG', np.float64(1.01767971792636)) ('log_Mcent_LRG', np.float64(12.95136742039306)) ('sigma_M_LRG', np.float64(0.5931976654682908))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 6] ('M_0_LRG', np.float64(12.483477012842108)) ('M_1_LRG', np.float64(13.772532052974919)) ('alpha_LRG', np.float64(1.036383359169992)) ('f_sigv_LRG', np.float64(0.9971082567822094)) ('log_Mcent_LRG', np.float64(12.88454666358425)) ('sigma_M_LRG', np.float64(0.5433809505430259))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 6] ('M_0_LRG', np.float64(12.538342559157169)) ('M_1_LRG', np.float64(13.742392031929366)) ('alpha_LRG', np.float64(1.0260089812777196)) ('f_sigv_LRG', np.float64(0.9812900145262143)) ('log_Mcent_LRG', np.float64(12.846152341059424)) ('sigma_M_LRG', np.float64(0.5146824530604176))
[Interation 6] chi2=1033.0085584596682
[Interation 6] chi2=1120.9715962710434
[Interation 6] chi2=938.2756677940969
[Interation 6] chi2=1062.882693741808
[Interation 6] ('M_0_LRG', np.float64(12.388905878763977)) ('M_1_LRG', np.float64(13.81429942017067)) ('alpha_LRG', np.float64(1.0841044086043934)) ('f_sigv_LRG', np.float64(0.9845934037455962)) ('log_Mcent_LRG', np.float64(12.921134367018928)) ('sigma_M_LRG', np.float64(0.5656717069475))
[Interation 6] ('M_0_LRG', np.float64(12.38218203399953)) ('M_1_LRG', np.float64(13.796960010558879)) ('alpha_LRG', np.float64(1.0789981439957046)) ('f_sigv_LRG', np.float64(0.9821522489800603)) ('log_Mcent_LRG', np.float64(12.91351415057925)) ('sigma_M_LRG', np.float64(0.572310510152584))
[Interation 6] ('M_0_LRG', np.float64(12.426736186858184)) ('M_1_LRG', np.float64(13.745629139148354)) ('alpha_LRG', np.float64(1.0780657531370796)) ('f_sigv_LRG', np.float64(1.0027647303149727)) ('log_Mcent_LRG', np.float64(12.831158163978008)) ('sigma_M_LRG', np.float64(0.502346396434363))
[Interation 6] ('M_0_LRG', np.float64(12.41475767937525)) ('M_1_LRG', np.float64(13.836855946764409)) ('alpha_LRG', np.float64(1.0517343129671608)) ('f_sigv_LRG', np.float64(0.9994057199277978)) ('log_Mcent_LRG', np.float64(12.959955944648943)) ('sigma_M_LRG', np.float64(0.6014383883785772))
[Interation 6] ('M_0_LRG', np.float64(12.432255877082532)) ('M_1_LRG', np.float64(13.719202232729804)) ('alpha_LRG', np.float64(1.067878811175697)) ('f_sigv_LRG', np.float64(0.983728542234515)) ('log_Mcent_LRG', np.float64(12.801772541421455)) ('sigma_M_LRG', np.float64(0.4858127644514643))
[Interation 6] ('M_0_LRG', np.float64(12.47743377773954)) ('M_1_LRG', np.float64(13.74676044309191)) ('alpha_LRG', np.float64(1.0275228693479965)) ('f_sigv_LRG', np.float64(1.0073162381786698)) ('log_Mcent_LRG', np.float64(12.841961575159457)) ('sigma_M_LRG', np.float64(0.508705279414611))
[Interation 6] ('M_0_LRG', np.float64(12.41357525567713)) ('M_1_LRG', np.float64(13.832847443529996)) ('alpha_LRG', np.float64(1.0096909899717754)) ('f_sigv_LRG', np.float64(1.0263370513604169)) ('log_Mcent_LRG', np.float64(12.900451273522915)) ('sigma_M_LRG', np.float64(0.5412251840811879))
[Interation 6] ('M_0_LRG', np.float64(12.518116046687329)) ('M_1_LRG', np.float64(13.742943099532132)) ('alpha_LRG', np.float64(1.0560540222108357)) ('f_sigv_LRG', np.float64(0.9735867056652967)) ('log_Mcent_LRG', np.float64(12.860173593427227)) ('sigma_M_LRG', np.float64(0.5325311928387879))
[Interation 6] ('M_0_LRG', np.float64(12.485268594207472)) ('M_1_LRG', np.float64(13.77688019866015)) ('alpha_LRG', np.float64(1.01578105435123)) ('f_sigv_LRG', np.float64(1.0085412148135087)) ('log_Mcent_LRG', np.float64(12.859775135356864)) ('sigma_M_LRG', np.float64(0.5166681876287113))
[Interation 6] ('M_0_LRG', np.float64(12.419297798048246)) ('M_1_LRG', np.float64(13.778716681714462)) ('alpha_LRG', np.float64(1.0781646403845326)) ('f_sigv_LRG', np.float64(0.9951331174953888)) ('log_Mcent_LRG', np.float64(12.878213803245561)) ('sigma_M_LRG', np.float64(0.5345270472457663))
[Interation 6] ('M_0_LRG', np.float64(12.37938101117587)) ('M_1_LRG', np.float64(13.741125747274438)) ('alpha_LRG', np.float64(1.122713428617023)) ('f_sigv_LRG', np.float64(0.9792061106194029)) ('log_Mcent_LRG', np.float64(12.856023238619953)) ('sigma_M_LRG', np.float64(0.5341908119140235))
[Interation 6] ('M_0_LRG', np.float64(12.351076137876847)) ('M_1_LRG', np.float64(13.837653233065375)) ('alpha_LRG', np.float64(1.068134738581138)) ('f_sigv_LRG', np.float64(1.0050827368146427)) ('log_Mcent_LRG', np.float64(12.9153252166605)) ('sigma_M_LRG', np.float64(0.5535683235232619))
[Interation 6] chi2=951.0461831153134
[Interation 6] chi2=1016.7738065993176
[Interation 6] chi2=1059.6288085589886
[Interation 6] chi2=1035.0286765668384
[Interation 6] chi2=983.4729140124617
[Interation 6] chi2=1045.6712230699832
[Interation 6] chi2=1019.4198082870745
[Interation 6] chi2=941.3464236496775
[Interation 6] chi2=1005.5332273339923
[Interation 6] chi2=1012.6683343621438
[Interation 6] chi2=1053.9057939942763
[Interation 6] chi2=1014.2859036490551
[Interation 7] ('M_0_LRG', np.float64(12.448410534331263)) ('M_1_LRG', np.float64(13.795422362544913)) ('alpha_LRG', np.float64(1.048774504445493)) ('f_sigv_LRG', np.float64(1.0223799458444045)) ('log_Mcent_LRG', np.float64(12.894302610580922)) ('sigma_M_LRG', np.float64(0.5405245111864346))
[Interation 7] ('M_0_LRG', np.float64(12.287770191366802)) ('M_1_LRG', np.float64(13.826158600162875)) ('alpha_LRG', np.float64(1.1235471682190719)) ('f_sigv_LRG', np.float64(1.016376172577858)) ('log_Mcent_LRG', np.float64(12.923786447868967)) ('sigma_M_LRG', np.float64(0.5593931577326889))
[Interation 7] ('M_0_LRG', np.float64(12.355106169264335)) ('M_1_LRG', np.float64(13.80005711503591)) ('alpha_LRG', np.float64(1.0897759991881635)) ('f_sigv_LRG', np.float64(1.0139008219371937)) ('log_Mcent_LRG', np.float64(12.896273870433939)) ('sigma_M_LRG', np.float64(0.5434637213388286))
[Interation 7] ('M_0_LRG', np.float64(12.371074339016042)) ('M_1_LRG', np.float64(13.822809347382508)) ('alpha_LRG', np.float64(1.0708256467572403)) ('f_sigv_LRG', np.float64(1.0045111466336702)) ('log_Mcent_LRG', np.float64(12.933434445417905)) ('sigma_M_LRG', np.float64(0.576257466125881))
[Interation 7] chi2=1034.1843664121732
[Interation 7] chi2=941.0558422477446
[Interation 7] chi2=1057.606820559781
[Interation 7] chi2=1039.270102467063
[Interation 7] ('M_0_LRG', np.float64(12.309320061158427)) ('M_1_LRG', np.float64(13.812835896660326)) ('alpha_LRG', np.float64(1.093066737614003)) ('f_sigv_LRG', np.float64(0.9880412421437185)) ('log_Mcent_LRG', np.float64(12.91525834524143)) ('sigma_M_LRG', np.float64(0.5663126700060878))
[Interation 7] ('M_0_LRG', np.float64(12.357419769242332)) ('M_1_LRG', np.float64(13.823458799573437)) ('alpha_LRG', np.float64(1.0571605430564608)) ('f_sigv_LRG', np.float64(1.0195769505777088)) ('log_Mcent_LRG', np.float64(12.928101686439504)) ('sigma_M_LRG', np.float64(0.571123302457774))
[Interation 7] ('M_0_LRG', np.float64(12.476945142773827)) ('M_1_LRG', np.float64(13.79662412463263)) ('alpha_LRG', np.float64(1.0407637324366206)) ('f_sigv_LRG', np.float64(0.9814387040030317)) ('log_Mcent_LRG', np.float64(12.909429906159644)) ('sigma_M_LRG', np.float64(0.5635009123790811))
[Interation 7] ('M_0_LRG', np.float64(12.313777891320152)) ('M_1_LRG', np.float64(13.828360266573462)) ('alpha_LRG', np.float64(1.092945746636762)) ('f_sigv_LRG', np.float64(0.9932076115824867)) ('log_Mcent_LRG', np.float64(12.924720395367089)) ('sigma_M_LRG', np.float64(0.5686148858790531))
[Interation 7] ('M_0_LRG', np.float64(12.16960032744141)) ('M_1_LRG', np.float64(13.857455670487951)) ('alpha_LRG', np.float64(1.137946904891171)) ('f_sigv_LRG', np.float64(1.006328822345839)) ('log_Mcent_LRG', np.float64(12.946799292686798)) ('sigma_M_LRG', np.float64(0.5779308453953278))
[Interation 7] ('M_0_LRG', np.float64(12.236945865649918)) ('M_1_LRG', np.float64(13.831632475008094)) ('alpha_LRG', np.float64(1.1272137039896575)) ('f_sigv_LRG', np.float64(1.0050864549102654)) ('log_Mcent_LRG', np.float64(12.919387811336057)) ('sigma_M_LRG', np.float64(0.5606425271336897))
[Interation 7] ('M_0_LRG', np.float64(12.272342238679414)) ('M_1_LRG', np.float64(13.801515569878095)) ('alpha_LRG', np.float64(1.140773727493491)) ('f_sigv_LRG', np.float64(1.0073100491594427)) ('log_Mcent_LRG', np.float64(12.903304990628952)) ('sigma_M_LRG', np.float64(0.5465569603170329))
[Interation 7] ('M_0_LRG', np.float64(12.44947964491643)) ('M_1_LRG', np.float64(13.790549635324705)) ('alpha_LRG', np.float64(1.052366200617593)) ('f_sigv_LRG', np.float64(0.98538923334616)) ('log_Mcent_LRG', np.float64(12.893025902290661)) ('sigma_M_LRG', np.float64(0.5507289925791566))
[Interation 7] ('M_0_LRG', np.float64(12.276434992660079)) ('M_1_LRG', np.float64(13.8287857778267)) ('alpha_LRG', np.float64(1.1144498369763922)) ('f_sigv_LRG', np.float64(1.0097243496353832)) ('log_Mcent_LRG', np.float64(12.919998340777791)) ('sigma_M_LRG', np.float64(0.5570536067717534))
[Interation 7] ('M_0_LRG', np.float64(12.340876892825879)) ('M_1_LRG', np.float64(13.827527792752893)) ('alpha_LRG', np.float64(1.1092049695968194)) ('f_sigv_LRG', np.float64(1.0029788716814303)) ('log_Mcent_LRG', np.float64(12.934149465599331)) ('sigma_M_LRG', np.float64(0.5696366488647018))
[Interation 7] ('M_0_LRG', np.float64(12.373166080868936)) ('M_1_LRG', np.float64(13.825022473951037)) ('alpha_LRG', np.float64(1.0581881769276735)) ('f_sigv_LRG', np.float64(1.0086500117916977)) ('log_Mcent_LRG', np.float64(12.911898215150632)) ('sigma_M_LRG', np.float64(0.5570064983965591))
[Interation 7] ('M_0_LRG', np.float64(12.344926931893063)) ('M_1_LRG', np.float64(13.84482369466014)) ('alpha_LRG', np.float64(1.085093853476051)) ('f_sigv_LRG', np.float64(0.9982566273476832)) ('log_Mcent_LRG', np.float64(12.952840404048178)) ('sigma_M_LRG', np.float64(0.587467927430469))
[Interation 7] chi2=1056.2924491008305
[Interation 7] chi2=984.922339054044
[Interation 7] chi2=977.5689651623857
[Interation 7] chi2=1044.3696995200175
[Interation 7] chi2=995.8908141925268
[Interation 7] chi2=1083.1914970677324
[Interation 7] chi2=938.235620086318
[Interation 7] chi2=909.1973862017281
[Interation 7] chi2=1053.6203982970655
[Interation 7] chi2=960.9706602376704
[Interation 7] chi2=1025.178984307697
[Interation 7] chi2=936.8322743111343
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_07.npy
Set number of threads to 32
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.29941359599423)) ('M_1_LRG', np.float64(13.794274115244901)) ('alpha_LRG', np.float64(1.1159840958182297)) ('f_sigv_LRG', np.float64(0.9908927730165472)) ('log_Mcent_LRG', np.float64(12.885761767006276)) ('sigma_M_LRG', np.float64(0.5408226453804347))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3352630138397217
Start satellite assignement
Satellite assignement done 0.07785892486572266
LRG mock catalogue done 0.1499640941619873
535270 central galaxies, 93819 satellites, fraction of satellite 0.15 
Done overall time  LRG 0.6614620685577393
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_07.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:18
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.66509722788033)) ('M_1_LRG', np.float64(13.585569209667542)) ('alpha_LRG', np.float64(1.134734497464558)) ('f_sigv_LRG', np.float64(0.9818654136278329)) ('log_Mcent_LRG', np.float64(12.79067432568963)) ('sigma_M_LRG', np.float64(0.4607400760841104))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.461366163725803)) ('M_1_LRG', np.float64(13.695193889518388)) ('alpha_LRG', np.float64(1.0165358073443698)) ('f_sigv_LRG', np.float64(0.9720426997833106)) ('log_Mcent_LRG', np.float64(12.731018109421438)) ('sigma_M_LRG', np.float64(0.4117181616526654))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.511867062352215)) ('M_1_LRG', np.float64(13.719708735308997)) ('alpha_LRG', np.float64(1.1193264676700532)) ('f_sigv_LRG', np.float64(0.88232454449268)) ('log_Mcent_LRG', np.float64(12.786495492038334)) ('sigma_M_LRG', np.float64(0.47783141141914154))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.464081613399722)) ('M_1_LRG', np.float64(13.702622885263727)) ('alpha_LRG', np.float64(1.0819946760338288)) ('f_sigv_LRG', np.float64(0.9474748897932487)) ('log_Mcent_LRG', np.float64(12.772587996081981)) ('sigma_M_LRG', np.float64(0.43778663631594755))
[Interation 8] chi2=1718.5266946872218
[Interation 8] chi2=1034.2407795605545
[Interation 8] chi2=1244.4769468005172
[Interation 8] chi2=1116.828479129175
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.599751840115108)) ('M_1_LRG', np.float64(13.642953239448172)) ('alpha_LRG', np.float64(1.0480749570393675)) ('f_sigv_LRG', np.float64(0.9676114626967023)) ('log_Mcent_LRG', np.float64(12.751986869822929)) ('sigma_M_LRG', np.float64(0.44393936227512565))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.589934233412965)) ('M_1_LRG', np.float64(13.669965271681415)) ('alpha_LRG', np.float64(1.0066581104743053)) ('f_sigv_LRG', np.float64(0.9928367378040895)) ('log_Mcent_LRG', np.float64(12.767667187213101)) ('sigma_M_LRG', np.float64(0.44922193972528635))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.508880419295659)) ('M_1_LRG', np.float64(13.76316850931333)) ('alpha_LRG', np.float64(1.0796205421936271)) ('f_sigv_LRG', np.float64(0.9806286993558632)) ('log_Mcent_LRG', np.float64(12.884353554385072)) ('sigma_M_LRG', np.float64(0.5499794660574578))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.527096839813723)) ('M_1_LRG', np.float64(13.684389093530406)) ('alpha_LRG', np.float64(1.085153394822103)) ('f_sigv_LRG', np.float64(0.9713390891461755)) ('log_Mcent_LRG', np.float64(12.801317701167129)) ('sigma_M_LRG', np.float64(0.4898567820071475))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.57464873585696)) ('M_1_LRG', np.float64(13.719276790115957)) ('alpha_LRG', np.float64(1.0405197232223626)) ('f_sigv_LRG', np.float64(0.9539450505543062)) ('log_Mcent_LRG', np.float64(12.813924957612086)) ('sigma_M_LRG', np.float64(0.4848657860461606))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.500711381673762)) ('M_1_LRG', np.float64(13.783246918034644)) ('alpha_LRG', np.float64(1.0832273144261613)) ('f_sigv_LRG', np.float64(0.9752439030618955)) ('log_Mcent_LRG', np.float64(12.893432394658953)) ('sigma_M_LRG', np.float64(0.5452984890189246))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.613109718786731)) ('M_1_LRG', np.float64(13.612662302318954)) ('alpha_LRG', np.float64(1.0255270984735907)) ('f_sigv_LRG', np.float64(0.9468966416170286)) ('log_Mcent_LRG', np.float64(12.725773580055817)) ('sigma_M_LRG', np.float64(0.4293298712153765))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.507322232989612)) ('M_1_LRG', np.float64(13.654718924354077)) ('alpha_LRG', np.float64(1.046944919696211)) ('f_sigv_LRG', np.float64(0.9620129149667707)) ('log_Mcent_LRG', np.float64(12.727199901515522)) ('sigma_M_LRG', np.float64(0.42980198508402234))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.619403201214247)) ('M_1_LRG', np.float64(13.648356675070016)) ('alpha_LRG', np.float64(0.9841899735388825)) ('f_sigv_LRG', np.float64(1.0095107755233141)) ('log_Mcent_LRG', np.float64(12.75062939410257)) ('sigma_M_LRG', np.float64(0.444138872420281))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.558433107622104)) ('M_1_LRG', np.float64(13.693284773486008)) ('alpha_LRG', np.float64(0.9512550748219349)) ('f_sigv_LRG', np.float64(1.0129375628853063)) ('log_Mcent_LRG', np.float64(12.766381882502323)) ('sigma_M_LRG', np.float64(0.4557431383127136))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.523727598325504)) ('M_1_LRG', np.float64(13.635634009059306)) ('alpha_LRG', np.float64(1.080997950035298)) ('f_sigv_LRG', np.float64(0.9351496637636345)) ('log_Mcent_LRG', np.float64(12.715187491025935)) ('sigma_M_LRG', np.float64(0.41818526686658963))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.563978081263667)) ('M_1_LRG', np.float64(13.691543989628318)) ('alpha_LRG', np.float64(1.0069977390787814)) ('f_sigv_LRG', np.float64(0.9610361204622843)) ('log_Mcent_LRG', np.float64(12.794723033945887)) ('sigma_M_LRG', np.float64(0.4878767802623999))
[Interation 8] chi2=1016.1940745069073
[Interation 8] chi2=1021.8364681787722
[Interation 8] chi2=1060.490402846233
[Interation 8] chi2=1106.7173608314895
[Interation 8] chi2=1015.0439934877021
[Interation 8] chi2=1034.6683339749302
[Interation 8] chi2=999.871302151385
[Interation 8] chi2=993.2150636734322
[Interation 8] chi2=1062.6951892381321
[Interation 8] chi2=1053.3719090094417
[Interation 8] chi2=1082.4222122179963
[Interation 8] chi2=1067.7638874341774
[Interation 9] ('M_0_LRG', np.float64(12.592572559631627)) ('M_1_LRG', np.float64(13.73920531381652)) ('alpha_LRG', np.float64(1.0252782296910334)) ('f_sigv_LRG', np.float64(0.9818391410505971)) ('log_Mcent_LRG', np.float64(12.871670787494242)) ('sigma_M_LRG', np.float64(0.5421057227517102))
[Interation 9] ('M_0_LRG', np.float64(12.51325537269708)) ('M_1_LRG', np.float64(13.785930433538804)) ('alpha_LRG', np.float64(1.0219417451912785)) ('f_sigv_LRG', np.float64(0.9966993867342036)) ('log_Mcent_LRG', np.float64(12.894489703618468)) ('sigma_M_LRG', np.float64(0.5620864048216007))
[Interation 9] ('M_0_LRG', np.float64(12.524893890757827)) ('M_1_LRG', np.float64(13.730315615586287)) ('alpha_LRG', np.float64(1.0379713366665284)) ('f_sigv_LRG', np.float64(1.000147270948812)) ('log_Mcent_LRG', np.float64(12.829560702991952)) ('sigma_M_LRG', np.float64(0.5083562732183149))
[Interation 9] ('M_0_LRG', np.float64(12.580470022601078)) ('M_1_LRG', np.float64(13.671989039057937)) ('alpha_LRG', np.float64(1.023887622268546)) ('f_sigv_LRG', np.float64(0.9756486576786574)) ('log_Mcent_LRG', np.float64(12.777097531886202)) ('sigma_M_LRG', np.float64(0.46636519596436754))
[Interation 9] chi2=1105.9878982210198
[Interation 9] chi2=1088.121434641348
[Interation 9] chi2=1056.679352707901
[Interation 9] chi2=992.4608545964501
[Interation 9] ('M_0_LRG', np.float64(12.538642941444849)) ('M_1_LRG', np.float64(13.741304743972997)) ('alpha_LRG', np.float64(1.038406608295486)) ('f_sigv_LRG', np.float64(0.9829638429889678)) ('log_Mcent_LRG', np.float64(12.85212012521286)) ('sigma_M_LRG', np.float64(0.5265409413578984))
[Interation 9] ('M_0_LRG', np.float64(12.571984095273743)) ('M_1_LRG', np.float64(13.724448219135061)) ('alpha_LRG', np.float64(1.0259086776068085)) ('f_sigv_LRG', np.float64(0.9854077226455165)) ('log_Mcent_LRG', np.float64(12.842584034729995)) ('sigma_M_LRG', np.float64(0.5186603355460688))
[Interation 9] ('M_0_LRG', np.float64(12.570267158347276)) ('M_1_LRG', np.float64(13.727052998506514)) ('alpha_LRG', np.float64(1.037139895935393)) ('f_sigv_LRG', np.float64(0.9721997876696057)) ('log_Mcent_LRG', np.float64(12.85323264754455)) ('sigma_M_LRG', np.float64(0.5284637841719316))
[Interation 9] ('M_0_LRG', np.float64(12.549607307408749)) ('M_1_LRG', np.float64(13.687835436598315)) ('alpha_LRG', np.float64(1.0510946290380643)) ('f_sigv_LRG', np.float64(0.9862726176392299)) ('log_Mcent_LRG', np.float64(12.791404810190256)) ('sigma_M_LRG', np.float64(0.47078157124032693))
[Interation 9] ('M_0_LRG', np.float64(12.556645731859762)) ('M_1_LRG', np.float64(13.794302451550049)) ('alpha_LRG', np.float64(1.011896570443787)) ('f_sigv_LRG', np.float64(0.9875968066273081)) ('log_Mcent_LRG', np.float64(12.92096681303527)) ('sigma_M_LRG', np.float64(0.580741434740614))
[Interation 9] ('M_0_LRG', np.float64(12.543825028125179)) ('M_1_LRG', np.float64(13.751688715671921)) ('alpha_LRG', np.float64(1.0267323156115544)) ('f_sigv_LRG', np.float64(0.9901196351864961)) ('log_Mcent_LRG', np.float64(12.867057312899972)) ('sigma_M_LRG', np.float64(0.5380974881331488))
[Interation 9] ('M_0_LRG', np.float64(12.523501495010972)) ('M_1_LRG', np.float64(13.696984514801052)) ('alpha_LRG', np.float64(1.0553437403883505)) ('f_sigv_LRG', np.float64(0.9905329152196388)) ('log_Mcent_LRG', np.float64(12.790777675616624)) ('sigma_M_LRG', np.float64(0.47111949042135204))
[Interation 9] ('M_0_LRG', np.float64(12.56593827512591)) ('M_1_LRG', np.float64(13.680625949177445)) ('alpha_LRG', np.float64(1.0514241318050803)) ('f_sigv_LRG', np.float64(0.9739233658134511)) ('log_Mcent_LRG', np.float64(12.800850726783224)) ('sigma_M_LRG', np.float64(0.48684743889936444))
[Interation 9] ('M_0_LRG', np.float64(12.556682474493048)) ('M_1_LRG', np.float64(13.67916435454385)) ('alpha_LRG', np.float64(1.0472298673107376)) ('f_sigv_LRG', np.float64(0.981023244565426)) ('log_Mcent_LRG', np.float64(12.783697973082331)) ('sigma_M_LRG', np.float64(0.4698973455524406))
[Interation 9] ('M_0_LRG', np.float64(12.564231248296412)) ('M_1_LRG', np.float64(13.709479375715178)) ('alpha_LRG', np.float64(1.0230400346211785)) ('f_sigv_LRG', np.float64(0.9979926770122356)) ('log_Mcent_LRG', np.float64(12.802810202223046)) ('sigma_M_LRG', np.float64(0.4804769908132031))
[Interation 9] ('M_0_LRG', np.float64(12.562580947136196)) ('M_1_LRG', np.float64(13.687677826689894)) ('alpha_LRG', np.float64(1.047571548988674)) ('f_sigv_LRG', np.float64(0.9706411731201772)) ('log_Mcent_LRG', np.float64(12.802067955951864)) ('sigma_M_LRG', np.float64(0.4881884437046027))
[Interation 9] ('M_0_LRG', np.float64(12.638844647486508)) ('M_1_LRG', np.float64(13.668612669833385)) ('alpha_LRG', np.float64(1.0220966878045639)) ('f_sigv_LRG', np.float64(0.9658886405071186)) ('log_Mcent_LRG', np.float64(12.789893358329373)) ('sigma_M_LRG', np.float64(0.4764443526850866))
[Interation 9] chi2=1012.2442180970728
[Interation 9] chi2=1058.2028388569195
[Interation 9] chi2=1014.4338574323277
[Interation 9] chi2=1043.3172756244066
[Interation 9] chi2=1188.4404283289816
[Interation 9] chi2=1052.836931255811
[Interation 9] chi2=1069.9045087693157
[Interation 9] chi2=1065.039767251604
[Interation 9] chi2=1021.5127051858769
[Interation 9] chi2=977.8849538669638
[Interation 9] chi2=1061.520098298612
[Interation 9] chi2=1014.2918406033004
[Interation 10] ('M_0_LRG', np.float64(12.578696554518631)) ('M_1_LRG', np.float64(13.669481077374783)) ('alpha_LRG', np.float64(1.0361343636984466)) ('f_sigv_LRG', np.float64(0.9804470725980392)) ('log_Mcent_LRG', np.float64(12.790840027017692)) ('sigma_M_LRG', np.float64(0.4840974022472659))
[Interation 10] ('M_0_LRG', np.float64(12.574243626366123)) ('M_1_LRG', np.float64(13.714282092202033)) ('alpha_LRG', np.float64(1.011513683410371)) ('f_sigv_LRG', np.float64(0.9760500311609906)) ('log_Mcent_LRG', np.float64(12.82460968552502)) ('sigma_M_LRG', np.float64(0.5049284423469496))
[Interation 10] ('M_0_LRG', np.float64(12.580238383011885)) ('M_1_LRG', np.float64(13.740037061020082)) ('alpha_LRG', np.float64(1.0116430933304341)) ('f_sigv_LRG', np.float64(0.9791736772978675)) ('log_Mcent_LRG', np.float64(12.850220583143964)) ('sigma_M_LRG', np.float64(0.5227762776970853))
[Interation 10] ('M_0_LRG', np.float64(12.575230347810505)) ('M_1_LRG', np.float64(13.704464864819338)) ('alpha_LRG', np.float64(1.0171564551646142)) ('f_sigv_LRG', np.float64(0.9861591667694203)) ('log_Mcent_LRG', np.float64(12.809390414846725)) ('sigma_M_LRG', np.float64(0.48906515401594985))
[Interation 10] chi2=1019.754670072496
[Interation 10] chi2=1042.7980253837443
[Interation 10] chi2=1004.7818759830328
[Interation 10] chi2=1054.1480552841697
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_08.npy
Set number of threads to 32
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.568105744177684)) ('M_1_LRG', np.float64(13.763999103988514)) ('alpha_LRG', np.float64(0.9965010148545868)) ('f_sigv_LRG', np.float64(0.9931922574294245)) ('log_Mcent_LRG', np.float64(12.879164903904284)) ('sigma_M_LRG', np.float64(0.5453333852288498))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.32726287841796875
Start satellite assignement
Satellite assignement done 0.07412528991699219
LRG mock catalogue done 0.1447772979736328
549491 central galaxies, 88665 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6540625095367432
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_08.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:19
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:19
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:19
Load rppi measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:21
Load rppi measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load smu measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Load correlation matrix for LRG at z0.95 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:18
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.450024419051262)) ('M_1_LRG', np.float64(13.685391761528)) ('alpha_LRG', np.float64(0.9607944689462853)) ('f_sigv_LRG', np.float64(1.0713571236463242)) ('log_Mcent_LRG', np.float64(12.718723876001443)) ('sigma_M_LRG', np.float64(0.4117326180740566))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.325387800013253)) ('M_1_LRG', np.float64(13.5217964151145)) ('alpha_LRG', np.float64(1.0037466799204064)) ('f_sigv_LRG', np.float64(0.9796810129180824)) ('log_Mcent_LRG', np.float64(12.669133845943746)) ('sigma_M_LRG', np.float64(0.46325939285078266))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.56474030497)) ('M_1_LRG', np.float64(13.454038966389442)) ('alpha_LRG', np.float64(0.9411966170948619)) ('f_sigv_LRG', np.float64(1.0528036582504974)) ('log_Mcent_LRG', np.float64(12.673788949306342)) ('sigma_M_LRG', np.float64(0.4543163125157989))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.55966125710129)) ('M_1_LRG', np.float64(13.620377072681414)) ('alpha_LRG', np.float64(1.1556803087971717)) ('f_sigv_LRG', np.float64(0.9391264927397973)) ('log_Mcent_LRG', np.float64(12.824302326035133)) ('sigma_M_LRG', np.float64(0.4993022340960568))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.535899767744425)) ('M_1_LRG', np.float64(13.686669944509301)) ('alpha_LRG', np.float64(0.8543085697022156)) ('f_sigv_LRG', np.float64(1.002562923883328)) ('log_Mcent_LRG', np.float64(12.699488151443994)) ('sigma_M_LRG', np.float64(0.4762409521408079))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.530891701850589)) ('M_1_LRG', np.float64(13.55614503269631)) ('alpha_LRG', np.float64(1.0640645494108196)) ('f_sigv_LRG', np.float64(0.8947148956225826)) ('log_Mcent_LRG', np.float64(12.753454636554268)) ('sigma_M_LRG', np.float64(0.5109594511045535))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.397399534256355)) ('M_1_LRG', np.float64(13.536323065349288)) ('alpha_LRG', np.float64(1.0355094260295423)) ('f_sigv_LRG', np.float64(0.9952494039286823)) ('log_Mcent_LRG', np.float64(12.731825361774124)) ('sigma_M_LRG', np.float64(0.5437178152322321))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.54095399425606)) ('M_1_LRG', np.float64(13.709005342497935)) ('alpha_LRG', np.float64(1.0083353039206222)) ('f_sigv_LRG', np.float64(0.9528157289532359)) ('log_Mcent_LRG', np.float64(12.618495002710084)) ('sigma_M_LRG', np.float64(0.39055279900744966))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.511726576903563)) ('M_1_LRG', np.float64(13.423210401743098)) ('alpha_LRG', np.float64(1.1075430720477593)) ('f_sigv_LRG', np.float64(1.0829891737721953)) ('log_Mcent_LRG', np.float64(12.711544479143058)) ('sigma_M_LRG', np.float64(0.4926504692531211))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.542140185274055)) ('M_1_LRG', np.float64(13.476447110271453)) ('alpha_LRG', np.float64(0.9735473123479951)) ('f_sigv_LRG', np.float64(0.9602683078330544)) ('log_Mcent_LRG', np.float64(12.733348792393162)) ('sigma_M_LRG', np.float64(0.43196104072473385))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.505190387821477)) ('M_1_LRG', np.float64(13.463797285124484)) ('alpha_LRG', np.float64(1.0539420915814264)) ('f_sigv_LRG', np.float64(0.8862709007304691)) ('log_Mcent_LRG', np.float64(12.704969253798874)) ('sigma_M_LRG', np.float64(0.5106860773040345))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.414240999100375)) ('M_1_LRG', np.float64(13.686858879601967)) ('alpha_LRG', np.float64(0.9751389000930002)) ('f_sigv_LRG', np.float64(1.0399599511355238)) ('log_Mcent_LRG', np.float64(12.761778245381183)) ('sigma_M_LRG', np.float64(0.417663278752654))
[Interation 10] chi2=1147.6561466678481
[Interation 10] chi2=1921.1790360389507
[Interation 10] chi2=1675.680044341539
[Interation 10] chi2=1662.3727793794794
[Interation 10] chi2=1468.4964592044485
[Interation 10] chi2=1895.6846594098158
[Interation 10] chi2=3444.9112859441484
[Interation 10] chi2=2889.5699456302405
[Interation 10] chi2=2043.349400597786
[Interation 10] chi2=3060.274798061873
[Interation 10] chi2=1785.5546659082024
[Interation 10] chi2=1668.8639976791442
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 11] ('M_0_LRG', np.float64(12.525696197410777)) ('M_1_LRG', np.float64(13.741673576477856)) ('alpha_LRG', np.float64(1.0640269607319706)) ('f_sigv_LRG', np.float64(0.9979923444780072)) ('log_Mcent_LRG', np.float64(12.851146840925255)) ('sigma_M_LRG', np.float64(0.5162677256979683))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 11] ('M_0_LRG', np.float64(12.542424223584772)) ('M_1_LRG', np.float64(13.726617434038376)) ('alpha_LRG', np.float64(1.027777168726574)) ('f_sigv_LRG', np.float64(1.0144862785232047)) ('log_Mcent_LRG', np.float64(12.82197527509581)) ('sigma_M_LRG', np.float64(0.48488411542188176))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 11] ('M_0_LRG', np.float64(12.54522635639508)) ('M_1_LRG', np.float64(13.73793702188899)) ('alpha_LRG', np.float64(1.022216129228482)) ('f_sigv_LRG', np.float64(1.0050079712851632)) ('log_Mcent_LRG', np.float64(12.832423276719698)) ('sigma_M_LRG', np.float64(0.5068234500725821))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 11] ('M_0_LRG', np.float64(12.492861592370872)) ('M_1_LRG', np.float64(13.741633404863647)) ('alpha_LRG', np.float64(1.044601489305315)) ('f_sigv_LRG', np.float64(1.0122880379942545)) ('log_Mcent_LRG', np.float64(12.826062977189554)) ('sigma_M_LRG', np.float64(0.4937889049438194))
[Interation 11] chi2=1137.6221146127089
[Interation 11] chi2=1097.0435886785647
[Interation 11] chi2=971.9280866154942
[Interation 11] chi2=1048.6246752630648
[Interation 11] ('M_0_LRG', np.float64(12.521721025236202)) ('M_1_LRG', np.float64(13.75709492484176)) ('alpha_LRG', np.float64(1.0203012024897946)) ('f_sigv_LRG', np.float64(0.9995723282463866)) ('log_Mcent_LRG', np.float64(12.846678073109638)) ('sigma_M_LRG', np.float64(0.5127438975514037))
[Interation 11] ('M_0_LRG', np.float64(12.497706178797417)) ('M_1_LRG', np.float64(13.75723016855224)) ('alpha_LRG', np.float64(1.0501840457595557)) ('f_sigv_LRG', np.float64(1.0005356317424685)) ('log_Mcent_LRG', np.float64(12.862827063407906)) ('sigma_M_LRG', np.float64(0.5301666893191818))
[Interation 11] ('M_0_LRG', np.float64(12.509540880273164)) ('M_1_LRG', np.float64(13.738538462017512)) ('alpha_LRG', np.float64(1.0530033159650725)) ('f_sigv_LRG', np.float64(0.9882339057325207)) ('log_Mcent_LRG', np.float64(12.82767503292479)) ('sigma_M_LRG', np.float64(0.5048190261001649))
[Interation 11] ('M_0_LRG', np.float64(12.456506421439187)) ('M_1_LRG', np.float64(13.718653835728666)) ('alpha_LRG', np.float64(1.0707780485206564)) ('f_sigv_LRG', np.float64(1.00870524087144)) ('log_Mcent_LRG', np.float64(12.812732505383256)) ('sigma_M_LRG', np.float64(0.4855500003244434))
[Interation 11] ('M_0_LRG', np.float64(12.479167770151962)) ('M_1_LRG', np.float64(13.785232625779715)) ('alpha_LRG', np.float64(1.0439794074283275)) ('f_sigv_LRG', np.float64(1.0042285949709915)) ('log_Mcent_LRG', np.float64(12.89319005950432)) ('sigma_M_LRG', np.float64(0.550937817093193))
[Interation 11] ('M_0_LRG', np.float64(12.46104120676295)) ('M_1_LRG', np.float64(13.763145982988192)) ('alpha_LRG', np.float64(1.051603955027901)) ('f_sigv_LRG', np.float64(1.0045364924439593)) ('log_Mcent_LRG', np.float64(12.86046439495969)) ('sigma_M_LRG', np.float64(0.5249070833146151))
[Interation 11] ('M_0_LRG', np.float64(12.502322318292629)) ('M_1_LRG', np.float64(13.760526544801905)) ('alpha_LRG', np.float64(1.0366445632846102)) ('f_sigv_LRG', np.float64(1.0055017465217155)) ('log_Mcent_LRG', np.float64(12.874374067311708)) ('sigma_M_LRG', np.float64(0.5400253914396119))
[Interation 11] ('M_0_LRG', np.float64(12.450414615557529)) ('M_1_LRG', np.float64(13.759027473068802)) ('alpha_LRG', np.float64(1.0553424020324629)) ('f_sigv_LRG', np.float64(1.0127407595201876)) ('log_Mcent_LRG', np.float64(12.85677518527476)) ('sigma_M_LRG', np.float64(0.5209620981194144))
[Interation 11] ('M_0_LRG', np.float64(12.389889588286746)) ('M_1_LRG', np.float64(13.803082223626717)) ('alpha_LRG', np.float64(1.0760937729606914)) ('f_sigv_LRG', np.float64(1.0203889461358195)) ('log_Mcent_LRG', np.float64(12.883397317727745)) ('sigma_M_LRG', np.float64(0.5330130048521586))
[Interation 11] ('M_0_LRG', np.float64(12.394565839066942)) ('M_1_LRG', np.float64(13.752508008149254)) ('alpha_LRG', np.float64(1.1100323085314865)) ('f_sigv_LRG', np.float64(1.0026610678180552)) ('log_Mcent_LRG', np.float64(12.852632269605914)) ('sigma_M_LRG', np.float64(0.5254084569987245))
[Interation 11] ('M_0_LRG', np.float64(12.431552704253612)) ('M_1_LRG', np.float64(13.751612523768166)) ('alpha_LRG', np.float64(1.0694800452079631)) ('f_sigv_LRG', np.float64(1.0016186492061343)) ('log_Mcent_LRG', np.float64(12.845972568816043)) ('sigma_M_LRG', np.float64(0.5163074361026956))
[Interation 11] ('M_0_LRG', np.float64(12.403981945855728)) ('M_1_LRG', np.float64(13.771754083681433)) ('alpha_LRG', np.float64(1.0702687006434102)) ('f_sigv_LRG', np.float64(1.0000136726984028)) ('log_Mcent_LRG', np.float64(12.847823103502238)) ('sigma_M_LRG', np.float64(0.5122870424490981))
[Interation 11] chi2=1050.1439826534017
[Interation 11] chi2=989.7814038010231
[Interation 11] chi2=959.0939032325427
[Interation 11] chi2=1032.9951021931602
[Interation 11] chi2=1021.3504923547378
[Interation 11] chi2=1163.276684627002
[Interation 11] chi2=1138.6230144269525
[Interation 11] chi2=1028.192486568462
[Interation 11] chi2=1000.7414008825027
[Interation 11] chi2=991.1023288103233
[Interation 11] chi2=1028.9811982973208
[Interation 11] chi2=1004.6519400956104
[Interation 12] ('M_0_LRG', np.float64(12.438893233041295)) ('M_1_LRG', np.float64(13.788426761992032)) ('alpha_LRG', np.float64(1.052330846682915)) ('f_sigv_LRG', np.float64(1.0147795333138845)) ('log_Mcent_LRG', np.float64(12.891516768481964)) ('sigma_M_LRG', np.float64(0.5478313049983726))
[Interation 12] ('M_0_LRG', np.float64(12.470959227093626)) ('M_1_LRG', np.float64(13.792502477013128)) ('alpha_LRG', np.float64(1.0484390530564258)) ('f_sigv_LRG', np.float64(1.0136156333543807)) ('log_Mcent_LRG', np.float64(12.909353851215686)) ('sigma_M_LRG', np.float64(0.5606401081119338))
[Interation 12] ('M_0_LRG', np.float64(12.439893961359937)) ('M_1_LRG', np.float64(13.785013975899638)) ('alpha_LRG', np.float64(1.0639519320431345)) ('f_sigv_LRG', np.float64(1.0038959245850632)) ('log_Mcent_LRG', np.float64(12.895364766675259)) ('sigma_M_LRG', np.float64(0.5594428791754177))
[Interation 12] ('M_0_LRG', np.float64(12.455502682620123)) ('M_1_LRG', np.float64(13.794100622983898)) ('alpha_LRG', np.float64(1.059781966061424)) ('f_sigv_LRG', np.float64(1.004413735361731)) ('log_Mcent_LRG', np.float64(12.907786065498675)) ('sigma_M_LRG', np.float64(0.5633674840904268))
[Interation 12] chi2=1045.5727821188011
[Interation 12] chi2=967.7790971786532
[Interation 12] chi2=1071.5344269097939
[Interation 12] chi2=1032.2291367366122
[Interation 12] ('M_0_LRG', np.float64(12.46180197579012)) ('M_1_LRG', np.float64(13.800405857326549)) ('alpha_LRG', np.float64(1.0495415662316474)) ('f_sigv_LRG', np.float64(0.9918981180178956)) ('log_Mcent_LRG', np.float64(12.920677195117122)) ('sigma_M_LRG', np.float64(0.5717619275849962))
[Interation 12] ('M_0_LRG', np.float64(12.447842959786428)) ('M_1_LRG', np.float64(13.77839602668176)) ('alpha_LRG', np.float64(1.0599604543294903)) ('f_sigv_LRG', np.float64(1.0016533216496384)) ('log_Mcent_LRG', np.float64(12.875594979574796)) ('sigma_M_LRG', np.float64(0.5367381328996039))
[Interation 12] ('M_0_LRG', np.float64(12.446598154607093)) ('M_1_LRG', np.float64(13.778236039537473)) ('alpha_LRG', np.float64(1.061593229477997)) ('f_sigv_LRG', np.float64(0.9909681543112646)) ('log_Mcent_LRG', np.float64(12.875591258965342)) ('sigma_M_LRG', np.float64(0.5352775835477737))
[Interation 12] ('M_0_LRG', np.float64(12.44806120378359)) ('M_1_LRG', np.float64(13.81592745742559)) ('alpha_LRG', np.float64(1.0556350100303549)) ('f_sigv_LRG', np.float64(1.0098421611199535)) ('log_Mcent_LRG', np.float64(12.934563029991638)) ('sigma_M_LRG', np.float64(0.579073412486316))
[Interation 12] ('M_0_LRG', np.float64(12.462681799025265)) ('M_1_LRG', np.float64(13.793032980434571)) ('alpha_LRG', np.float64(1.0598396073950946)) ('f_sigv_LRG', np.float64(1.0037728788583828)) ('log_Mcent_LRG', np.float64(12.909967239336982)) ('sigma_M_LRG', np.float64(0.5657665954957528))
[Interation 12] ('M_0_LRG', np.float64(12.44218077159019)) ('M_1_LRG', np.float64(13.793458105918422)) ('alpha_LRG', np.float64(1.0556952646050919)) ('f_sigv_LRG', np.float64(0.9921726400983215)) ('log_Mcent_LRG', np.float64(12.906232236778381)) ('sigma_M_LRG', np.float64(0.566357353792289))
[Interation 12] ('M_0_LRG', np.float64(12.463551182774108)) ('M_1_LRG', np.float64(13.804563298778287)) ('alpha_LRG', np.float64(1.0545024587956324)) ('f_sigv_LRG', np.float64(1.0062170692936352)) ('log_Mcent_LRG', np.float64(12.921620245556433)) ('sigma_M_LRG', np.float64(0.5695439752478088))
[Interation 12] ('M_0_LRG', np.float64(12.445044122886662)) ('M_1_LRG', np.float64(13.774844258984821)) ('alpha_LRG', np.float64(1.0693250462338606)) ('f_sigv_LRG', np.float64(1.0086380716665768)) ('log_Mcent_LRG', np.float64(12.866428375957831)) ('sigma_M_LRG', np.float64(0.5250564690163646))
[Interation 12] ('M_0_LRG', np.float64(12.444473742841895)) ('M_1_LRG', np.float64(13.803488227812185)) ('alpha_LRG', np.float64(1.0481833412651265)) ('f_sigv_LRG', np.float64(1.009397453123264)) ('log_Mcent_LRG', np.float64(12.90536571170432)) ('sigma_M_LRG', np.float64(0.5597440143205457))
[Interation 12] ('M_0_LRG', np.float64(12.462413723028845)) ('M_1_LRG', np.float64(13.801477284549414)) ('alpha_LRG', np.float64(1.063147274321717)) ('f_sigv_LRG', np.float64(0.9950569732038292)) ('log_Mcent_LRG', np.float64(12.932762397933491)) ('sigma_M_LRG', np.float64(0.5834958524002761))
[Interation 12] ('M_0_LRG', np.float64(12.47119616090585)) ('M_1_LRG', np.float64(13.812169837581017)) ('alpha_LRG', np.float64(1.050054701021629)) ('f_sigv_LRG', np.float64(1.0088212188888563)) ('log_Mcent_LRG', np.float64(12.946818486783075)) ('sigma_M_LRG', np.float64(0.5944945561459551))
[Interation 12] ('M_0_LRG', np.float64(12.44881145066003)) ('M_1_LRG', np.float64(13.808692376908406)) ('alpha_LRG', np.float64(1.0547430150580532)) ('f_sigv_LRG', np.float64(1.000606836630692)) ('log_Mcent_LRG', np.float64(12.919576320872098)) ('sigma_M_LRG', np.float64(0.5697239325240051))
[Interation 12] chi2=957.493363382459
[Interation 12] chi2=990.5752070599682
[Interation 12] chi2=1109.3186912211115
[Interation 12] chi2=1025.3820078589317
[Interation 12] chi2=1073.300327422716
[Interation 12] chi2=997.5776412710527
[Interation 12] chi2=943.3951701708334
[Interation 12] chi2=1027.9248920715515
[Interation 12] chi2=1070.870578090953
[Interation 12] chi2=983.22375096856
[Interation 12] chi2=991.7223142968418
[Interation 12] chi2=1056.4030265538845
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_09.npy
Set number of threads to 32
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.459641185402766)) ('M_1_LRG', np.float64(13.799600616681579)) ('alpha_LRG', np.float64(1.0661254533175573)) ('f_sigv_LRG', np.float64(1.0066680993295585)) ('log_Mcent_LRG', np.float64(12.918466358470994)) ('sigma_M_LRG', np.float64(0.5682050985362124))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3480551242828369
Start satellite assignement
Satellite assignement done 0.07201147079467773
LRG mock catalogue done 0.1374349594116211
515437 central galaxies, 84160 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.663057804107666
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_09.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:18
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:18
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:19
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.95 ...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:18
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Load correlation matrix for LRG at z0.95 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.559463371955536)) ('M_1_LRG', np.float64(13.681878876492709)) ('alpha_LRG', np.float64(1.057460352181751)) ('f_sigv_LRG', np.float64(1.0007714773457506)) ('log_Mcent_LRG', np.float64(12.858817749396644)) ('sigma_M_LRG', np.float64(0.5834198335131441))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.380283268147855)) ('M_1_LRG', np.float64(13.799034325813293)) ('alpha_LRG', np.float64(1.1131914901429587)) ('f_sigv_LRG', np.float64(1.0854625000853793)) ('log_Mcent_LRG', np.float64(12.806722216845955)) ('sigma_M_LRG', np.float64(0.45015323655721223))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.419466251810045)) ('M_1_LRG', np.float64(13.573240601461634)) ('alpha_LRG', np.float64(1.1709299901646781)) ('f_sigv_LRG', np.float64(0.9490381575427405)) ('log_Mcent_LRG', np.float64(12.781262533144586)) ('sigma_M_LRG', np.float64(0.4940242008769481))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.656572207108917)) ('M_1_LRG', np.float64(13.611843664502803)) ('alpha_LRG', np.float64(0.8525422980173826)) ('f_sigv_LRG', np.float64(0.9430944264325349)) ('log_Mcent_LRG', np.float64(12.669789293499095)) ('sigma_M_LRG', np.float64(0.3827177302179332))
[Interation 13] chi2=1219.080215513211
[Interation 13] chi2=1383.6589459637523
[Interation 13] chi2=1780.4231133096
[Interation 13] chi2=1175.4254486389032
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.61930801728204)) ('M_1_LRG', np.float64(13.694046706763318)) ('alpha_LRG', np.float64(0.9777988187287965)) ('f_sigv_LRG', np.float64(0.9729866941839497)) ('log_Mcent_LRG', np.float64(12.80710569049921)) ('sigma_M_LRG', np.float64(0.4904077581397175))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.594004177948078)) ('M_1_LRG', np.float64(13.711788038337145)) ('alpha_LRG', np.float64(0.9682356179556739)) ('f_sigv_LRG', np.float64(0.9886093515667009)) ('log_Mcent_LRG', np.float64(12.814854966825434)) ('sigma_M_LRG', np.float64(0.48928715881149754))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.479431603116616)) ('M_1_LRG', np.float64(13.695797615616598)) ('alpha_LRG', np.float64(1.0693226700395124)) ('f_sigv_LRG', np.float64(0.9819788436119152)) ('log_Mcent_LRG', np.float64(12.78358995891876)) ('sigma_M_LRG', np.float64(0.4605792545736678))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.62214693698803)) ('M_1_LRG', np.float64(13.662472595159183)) ('alpha_LRG', np.float64(1.0019997759068804)) ('f_sigv_LRG', np.float64(0.9948974224854423)) ('log_Mcent_LRG', np.float64(12.754217516570352)) ('sigma_M_LRG', np.float64(0.44151252290774257))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.671604974657209)) ('M_1_LRG', np.float64(13.656789825785909)) ('alpha_LRG', np.float64(1.0027391274674953)) ('f_sigv_LRG', np.float64(0.9808621851709578)) ('log_Mcent_LRG', np.float64(12.81144667142705)) ('sigma_M_LRG', np.float64(0.503836917928542))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.598682829131366)) ('M_1_LRG', np.float64(13.727453476490945)) ('alpha_LRG', np.float64(0.9668939715606806)) ('f_sigv_LRG', np.float64(0.9843606537278878)) ('log_Mcent_LRG', np.float64(12.84544647698264)) ('sigma_M_LRG', np.float64(0.5167882257737506))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.622645092521223)) ('M_1_LRG', np.float64(13.739447795111705)) ('alpha_LRG', np.float64(0.9719740321295309)) ('f_sigv_LRG', np.float64(0.9944297357992306)) ('log_Mcent_LRG', np.float64(12.856092017310539)) ('sigma_M_LRG', np.float64(0.5305062133171445))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.630966311634443)) ('M_1_LRG', np.float64(13.727840680762755)) ('alpha_LRG', np.float64(0.9977252842499926)) ('f_sigv_LRG', np.float64(0.9629079428994692)) ('log_Mcent_LRG', np.float64(12.853477294913485)) ('sigma_M_LRG', np.float64(0.5316882907471069))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.595139726379605)) ('M_1_LRG', np.float64(13.633795303167236)) ('alpha_LRG', np.float64(1.0196386064345646)) ('f_sigv_LRG', np.float64(0.9815712694487375)) ('log_Mcent_LRG', np.float64(12.738524701996633)) ('sigma_M_LRG', np.float64(0.43486339456288287))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.753268884055423)) ('M_1_LRG', np.float64(13.735718246225161)) ('alpha_LRG', np.float64(0.8701944455444693)) ('f_sigv_LRG', np.float64(0.9940164070773658)) ('log_Mcent_LRG', np.float64(12.875516650955657)) ('sigma_M_LRG', np.float64(0.547240691126125))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.548694218423652)) ('M_1_LRG', np.float64(13.730372201389693)) ('alpha_LRG', np.float64(0.9925688869474243)) ('f_sigv_LRG', np.float64(1.0108398399087593)) ('log_Mcent_LRG', np.float64(12.803210889075503)) ('sigma_M_LRG', np.float64(0.4838340251548382))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.522559470620548)) ('M_1_LRG', np.float64(13.771356963262294)) ('alpha_LRG', np.float64(1.0477397504636476)) ('f_sigv_LRG', np.float64(0.9693686382733888)) ('log_Mcent_LRG', np.float64(12.883989088521652)) ('sigma_M_LRG', np.float64(0.5615409443793995))
[Interation 13] chi2=992.407129587849
[Interation 13] chi2=1082.9884828893641
[Interation 13] chi2=1033.8733599278191
[Interation 13] chi2=1047.1296040546747
[Interation 13] chi2=1090.1494123770792
[Interation 13] chi2=1046.0435337590088
[Interation 13] chi2=1019.7857943641911
[Interation 13] chi2=959.0328198717958
[Interation 13] chi2=1060.5456133797875
[Interation 13] chi2=964.580414501659
[Interation 13] chi2=1044.5609715166197
[Interation 13] chi2=1018.8116548903284
[Interation 14] ('M_0_LRG', np.float64(12.577868990027223)) ('M_1_LRG', np.float64(13.738376070256804)) ('alpha_LRG', np.float64(0.9905859479703574)) ('f_sigv_LRG', np.float64(0.9929862252115986)) ('log_Mcent_LRG', np.float64(12.849623712548265)) ('sigma_M_LRG', np.float64(0.5223728950716021))
[Interation 14] ('M_0_LRG', np.float64(12.58064240730944)) ('M_1_LRG', np.float64(13.739357554334887)) ('alpha_LRG', np.float64(0.9946681102688106)) ('f_sigv_LRG', np.float64(0.9845735701728122)) ('log_Mcent_LRG', np.float64(12.846337241880178)) ('sigma_M_LRG', np.float64(0.5176157889811799))
[Interation 14] ('M_0_LRG', np.float64(12.596928166526906)) ('M_1_LRG', np.float64(13.702289831928608)) ('alpha_LRG', np.float64(1.0115640436803135)) ('f_sigv_LRG', np.float64(0.9844787559439341)) ('log_Mcent_LRG', np.float64(12.818131170083342)) ('sigma_M_LRG', np.float64(0.4986449382330818))
[Interation 14] ('M_0_LRG', np.float64(12.60876350537099)) ('M_1_LRG', np.float64(13.689044274723392)) ('alpha_LRG', np.float64(1.0156355791083531)) ('f_sigv_LRG', np.float64(0.9787678223534185)) ('log_Mcent_LRG', np.float64(12.803698118484474)) ('sigma_M_LRG', np.float64(0.4875390758599835))
[Interation 14] chi2=919.4398429663464
[Interation 14] chi2=1051.7890121769337
[Interation 14] chi2=1000.8160000352518
[Interation 14] chi2=1013.2144053788054
[Interation 14] ('M_0_LRG', np.float64(12.586745687489412)) ('M_1_LRG', np.float64(13.714778416940987)) ('alpha_LRG', np.float64(1.0127565851188676)) ('f_sigv_LRG', np.float64(0.9881954628056879)) ('log_Mcent_LRG', np.float64(12.828355670576709)) ('sigma_M_LRG', np.float64(0.5041137716177123))
[Interation 14] ('M_0_LRG', np.float64(12.606215674600634)) ('M_1_LRG', np.float64(13.712102511342566)) ('alpha_LRG', np.float64(0.9980005256277699)) ('f_sigv_LRG', np.float64(0.9828415133664846)) ('log_Mcent_LRG', np.float64(12.833979488497997)) ('sigma_M_LRG', np.float64(0.5138770676114832))
[Interation 14] ('M_0_LRG', np.float64(12.592794156558945)) ('M_1_LRG', np.float64(13.70987708381585)) ('alpha_LRG', np.float64(0.9917898914744634)) ('f_sigv_LRG', np.float64(0.9921746222862464)) ('log_Mcent_LRG', np.float64(12.823930453348305)) ('sigma_M_LRG', np.float64(0.5074933702211074))
[Interation 14] ('M_0_LRG', np.float64(12.586737162640375)) ('M_1_LRG', np.float64(13.71487941089833)) ('alpha_LRG', np.float64(1.0045324713441832)) ('f_sigv_LRG', np.float64(0.9856683812612065)) ('log_Mcent_LRG', np.float64(12.834254672580252)) ('sigma_M_LRG', np.float64(0.5147158778243597))
[Interation 14] ('M_0_LRG', np.float64(12.577917321264882)) ('M_1_LRG', np.float64(13.710641700322729)) ('alpha_LRG', np.float64(1.0220984249011227)) ('f_sigv_LRG', np.float64(0.9791799624532515)) ('log_Mcent_LRG', np.float64(12.818957253598908)) ('sigma_M_LRG', np.float64(0.49781828123082617))
[Interation 14] ('M_0_LRG', np.float64(12.586654953564967)) ('M_1_LRG', np.float64(13.709338710799258)) ('alpha_LRG', np.float64(1.0001111212955225)) ('f_sigv_LRG', np.float64(0.9959706475623643)) ('log_Mcent_LRG', np.float64(12.815888603075102)) ('sigma_M_LRG', np.float64(0.4969056521386088))
[Interation 14] ('M_0_LRG', np.float64(12.589707712774509)) ('M_1_LRG', np.float64(13.729306103213405)) ('alpha_LRG', np.float64(0.9816658480881565)) ('f_sigv_LRG', np.float64(0.998738274829058)) ('log_Mcent_LRG', np.float64(12.835927174868926)) ('sigma_M_LRG', np.float64(0.509931311821851))
[Interation 14] ('M_0_LRG', np.float64(12.593990604764954)) ('M_1_LRG', np.float64(13.728955948423184)) ('alpha_LRG', np.float64(0.9941084969684504)) ('f_sigv_LRG', np.float64(1.0004970775831978)) ('log_Mcent_LRG', np.float64(12.848474184480354)) ('sigma_M_LRG', np.float64(0.5201141412236701))
[Interation 14] ('M_0_LRG', np.float64(12.58750824529552)) ('M_1_LRG', np.float64(13.700173132906993)) ('alpha_LRG', np.float64(1.0028682826893651)) ('f_sigv_LRG', np.float64(0.9968186227991718)) ('log_Mcent_LRG', np.float64(12.81273806357327)) ('sigma_M_LRG', np.float64(0.49375819379210945))
[Interation 14] ('M_0_LRG', np.float64(12.578659552114559)) ('M_1_LRG', np.float64(13.711918923092618)) ('alpha_LRG', np.float64(1.0152420698137148)) ('f_sigv_LRG', np.float64(0.9866311936483536)) ('log_Mcent_LRG', np.float64(12.8263720778916)) ('sigma_M_LRG', np.float64(0.5033566349646532))
[Interation 14] ('M_0_LRG', np.float64(12.585646603157004)) ('M_1_LRG', np.float64(13.717923189547808)) ('alpha_LRG', np.float64(0.9941900992070306)) ('f_sigv_LRG', np.float64(1.0042083797955388)) ('log_Mcent_LRG', np.float64(12.821826098700141)) ('sigma_M_LRG', np.float64(0.4940348599593545))
[Interation 14] ('M_0_LRG', np.float64(12.59215670977206)) ('M_1_LRG', np.float64(13.719523831230916)) ('alpha_LRG', np.float64(0.9981308331145151)) ('f_sigv_LRG', np.float64(0.9853148344133181)) ('log_Mcent_LRG', np.float64(12.831040956963726)) ('sigma_M_LRG', np.float64(0.5068116702971666))
[Interation 14] chi2=946.7894227472369
[Interation 14] chi2=1005.415413990654
[Interation 14] chi2=995.711665238135
[Interation 14] chi2=996.5858354259833
[Interation 14] chi2=993.0990676299282
[Interation 14] chi2=1031.8826243464082
[Interation 14] chi2=970.5148016344716
[Interation 14] chi2=949.0729860934044
[Interation 14] chi2=981.2448419504598
[Interation 14] chi2=990.6505604158349
[Interation 14] chi2=989.4327592737951
[Interation 14] chi2=1028.9055604084574
[Interation 15] ('M_0_LRG', np.float64(12.585927096542466)) ('M_1_LRG', np.float64(13.722270021423617)) ('alpha_LRG', np.float64(0.9851119762440207)) ('f_sigv_LRG', np.float64(1.0079376494134857)) ('log_Mcent_LRG', np.float64(12.833101798025018)) ('sigma_M_LRG', np.float64(0.507254908450372))
[Interation 15] ('M_0_LRG', np.float64(12.5785860143539)) ('M_1_LRG', np.float64(13.719730548359015)) ('alpha_LRG', np.float64(0.9877510020871058)) ('f_sigv_LRG', np.float64(0.99838211608442)) ('log_Mcent_LRG', np.float64(12.828733007563295)) ('sigma_M_LRG', np.float64(0.5048212707319877))
[Interation 15] ('M_0_LRG', np.float64(12.593666396219145)) ('M_1_LRG', np.float64(13.718032900649833)) ('alpha_LRG', np.float64(0.9891361151558254)) ('f_sigv_LRG', np.float64(0.9867161906187363)) ('log_Mcent_LRG', np.float64(12.837840725503147)) ('sigma_M_LRG', np.float64(0.5183649356594533))
[Interation 15] ('M_0_LRG', np.float64(12.580552299259008)) ('M_1_LRG', np.float64(13.72386219951661)) ('alpha_LRG', np.float64(0.988297554048433)) ('f_sigv_LRG', np.float64(1.0002329619896104)) ('log_Mcent_LRG', np.float64(12.838655067744199)) ('sigma_M_LRG', np.float64(0.5149195086012802))
[Interation 15] chi2=1085.855802895581
[Interation 15] chi2=1041.2452682314117
[Interation 15] chi2=1012.9446597045752
[Interation 15] chi2=968.2894662859045
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_10.npy
Set number of threads to 32
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.583423048354613)) ('M_1_LRG', np.float64(13.714941434979156)) ('alpha_LRG', np.float64(1.0046247314952523)) ('f_sigv_LRG', np.float64(0.9982809657434829)) ('log_Mcent_LRG', np.float64(12.826829770866784)) ('sigma_M_LRG', np.float64(0.5026411627013806))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3615391254425049
Start satellite assignement
Satellite assignement done 0.07895231246948242
LRG mock catalogue done 0.15627837181091309
587103 central galaxies, 96456 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.711888313293457
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_10.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:17
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:17
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:18
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:21
Load correlation matrix for LRG at z0.95 ...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Load smu measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:19
Load smu measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:25
Load correlation matrix for LRG at z0.95 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.508886404979439)) ('M_1_LRG', np.float64(13.557580481209573)) ('alpha_LRG', np.float64(0.9918954499895093)) ('f_sigv_LRG', np.float64(1.0311774415930859)) ('log_Mcent_LRG', np.float64(12.740628004117506)) ('sigma_M_LRG', np.float64(0.5001668530627197))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.484496087234229)) ('M_1_LRG', np.float64(13.385588484706433)) ('alpha_LRG', np.float64(0.980834216800634)) ('f_sigv_LRG', np.float64(0.9626105855362085)) ('log_Mcent_LRG', np.float64(12.648942915497909)) ('sigma_M_LRG', np.float64(0.4204836644086345))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.61193135574896)) ('M_1_LRG', np.float64(13.419556141088197)) ('alpha_LRG', np.float64(0.9251709379915811)) ('f_sigv_LRG', np.float64(0.9791358861025711)) ('log_Mcent_LRG', np.float64(12.714140694992327)) ('sigma_M_LRG', np.float64(0.3980564061311669))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.543663969346447)) ('M_1_LRG', np.float64(13.684531026629433)) ('alpha_LRG', np.float64(1.0760749744113967)) ('f_sigv_LRG', np.float64(0.9827656248439831)) ('log_Mcent_LRG', np.float64(12.661489875699992)) ('sigma_M_LRG', np.float64(0.3881262563552129))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.558726609091199)) ('M_1_LRG', np.float64(13.609828616698234)) ('alpha_LRG', np.float64(1.0297278580070763)) ('f_sigv_LRG', np.float64(0.9256481090009037)) ('log_Mcent_LRG', np.float64(12.760547176681458)) ('sigma_M_LRG', np.float64(0.5370379198833821))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.4212867122103)) ('M_1_LRG', np.float64(13.16445415529677)) ('alpha_LRG', np.float64(0.9780246530375842)) ('f_sigv_LRG', np.float64(1.0238356505737056)) ('log_Mcent_LRG', np.float64(12.662648932846832)) ('sigma_M_LRG', np.float64(0.4637069932589219))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.556080350285507)) ('M_1_LRG', np.float64(13.370761639025087)) ('alpha_LRG', np.float64(1.1381758742907482)) ('f_sigv_LRG', np.float64(0.9072389474578507)) ('log_Mcent_LRG', np.float64(12.748333001639137)) ('sigma_M_LRG', np.float64(0.48478150756420085))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.543734332875879)) ('M_1_LRG', np.float64(13.51672102375684)) ('alpha_LRG', np.float64(1.0115695769758233)) ('f_sigv_LRG', np.float64(0.9534579422312791)) ('log_Mcent_LRG', np.float64(12.669047071300895)) ('sigma_M_LRG', np.float64(0.41221770747554864))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.456153573768951)) ('M_1_LRG', np.float64(13.387974380630904)) ('alpha_LRG', np.float64(1.0386017562412935)) ('f_sigv_LRG', np.float64(0.8665792892045366)) ('log_Mcent_LRG', np.float64(12.859773950067725)) ('sigma_M_LRG', np.float64(0.5910056341398436))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.5111665592111)) ('M_1_LRG', np.float64(13.659934808660461)) ('alpha_LRG', np.float64(1.024369045328278)) ('f_sigv_LRG', np.float64(0.946258091533753)) ('log_Mcent_LRG', np.float64(12.761392464982322)) ('sigma_M_LRG', np.float64(0.4833943191169615))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.429469401111715)) ('M_1_LRG', np.float64(13.585972367304791)) ('alpha_LRG', np.float64(1.1020834204458738)) ('f_sigv_LRG', np.float64(1.0426384178915102)) ('log_Mcent_LRG', np.float64(12.68002164388337)) ('sigma_M_LRG', np.float64(0.4752205708194371))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.653391446719265)) ('M_1_LRG', np.float64(13.513315661120266)) ('alpha_LRG', np.float64(0.9771881631426282)) ('f_sigv_LRG', np.float64(1.0033159489488497)) ('log_Mcent_LRG', np.float64(12.839988685807647)) ('sigma_M_LRG', np.float64(0.5820182980527179))
[Interation 15] chi2=1477.3922966321118
[Interation 15] chi2=2639.746751727989
[Interation 15] chi2=4569.1271114706615
[Interation 15] chi2=1964.7823685414266
[Interation 15] chi2=1614.1214883457105
[Interation 15] chi2=7547.279527612258
[Interation 15] chi2=10005.136804743435
[Interation 15] chi2=1157.5986233473946
[Interation 15] chi2=9832.696691053958
[Interation 15] chi2=1141.5634236990059
[Interation 15] chi2=2184.295882962124
[Interation 15] chi2=1979.8746605867684
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 16] ('M_0_LRG', np.float64(12.655113093329408)) ('M_1_LRG', np.float64(13.64992905865153)) ('alpha_LRG', np.float64(0.9722585400499478)) ('f_sigv_LRG', np.float64(1.0008894707727498)) ('log_Mcent_LRG', np.float64(12.7533951845213)) ('sigma_M_LRG', np.float64(0.4475713907043821))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 16] ('M_0_LRG', np.float64(12.60107889762494)) ('M_1_LRG', np.float64(13.689538942888685)) ('alpha_LRG', np.float64(0.953008488540739)) ('f_sigv_LRG', np.float64(0.9985186335673463)) ('log_Mcent_LRG', np.float64(12.792762812276969)) ('sigma_M_LRG', np.float64(0.48678815432856737))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 16] ('M_0_LRG', np.float64(12.485639465441599)) ('M_1_LRG', np.float64(13.682355372251628)) ('alpha_LRG', np.float64(1.0532549204722825)) ('f_sigv_LRG', np.float64(0.9616922261094943)) ('log_Mcent_LRG', np.float64(12.751534123908167)) ('sigma_M_LRG', np.float64(0.4419789908256884))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 16] ('M_0_LRG', np.float64(12.407564613992191)) ('M_1_LRG', np.float64(13.69047687236881)) ('alpha_LRG', np.float64(1.057077344532246)) ('f_sigv_LRG', np.float64(1.0159166346256239)) ('log_Mcent_LRG', np.float64(12.759834768896061)) ('sigma_M_LRG', np.float64(0.44415449005670304))
[Interation 16] chi2=991.6405304693403
[Interation 16] chi2=964.6950513716669
[Interation 16] chi2=1153.4989623880392
[Interation 16] chi2=1033.9071163542683
[Interation 16] ('M_0_LRG', np.float64(12.446792782937546)) ('M_1_LRG', np.float64(13.788979032931236)) ('alpha_LRG', np.float64(1.060960029515867)) ('f_sigv_LRG', np.float64(1.0228365251222025)) ('log_Mcent_LRG', np.float64(12.876288655848128)) ('sigma_M_LRG', np.float64(0.53022984238371))
[Interation 16] ('M_0_LRG', np.float64(12.536407796076436)) ('M_1_LRG', np.float64(13.755120039690985)) ('alpha_LRG', np.float64(1.0230264747174993)) ('f_sigv_LRG', np.float64(0.9832936726491963)) ('log_Mcent_LRG', np.float64(12.878364417601357)) ('sigma_M_LRG', np.float64(0.5475688207039922))
[Interation 16] ('M_0_LRG', np.float64(12.606289485816042)) ('M_1_LRG', np.float64(13.696198523137317)) ('alpha_LRG', np.float64(0.9970541135511855)) ('f_sigv_LRG', np.float64(0.9965721510554549)) ('log_Mcent_LRG', np.float64(12.8002516056117)) ('sigma_M_LRG', np.float64(0.48254137926071955))
[Interation 16] ('M_0_LRG', np.float64(12.496389009486565)) ('M_1_LRG', np.float64(13.757445918110768)) ('alpha_LRG', np.float64(1.041865745124578)) ('f_sigv_LRG', np.float64(0.9942233249545868)) ('log_Mcent_LRG', np.float64(12.861405098497393)) ('sigma_M_LRG', np.float64(0.5300488215528159))
[Interation 16] ('M_0_LRG', np.float64(12.548132950397015)) ('M_1_LRG', np.float64(13.73907426590704)) ('alpha_LRG', np.float64(1.0322237736151538)) ('f_sigv_LRG', np.float64(0.9814772259571902)) ('log_Mcent_LRG', np.float64(12.860221767235853)) ('sigma_M_LRG', np.float64(0.5316176065577217))
[Interation 16] ('M_0_LRG', np.float64(12.48367322354252)) ('M_1_LRG', np.float64(13.781172476832182)) ('alpha_LRG', np.float64(1.048424091718696)) ('f_sigv_LRG', np.float64(0.9963582510662231)) ('log_Mcent_LRG', np.float64(12.883155623488049)) ('sigma_M_LRG', np.float64(0.5442810480192509))
[Interation 16] ('M_0_LRG', np.float64(12.512989457441272)) ('M_1_LRG', np.float64(13.768036162793813)) ('alpha_LRG', np.float64(1.0451728100304978)) ('f_sigv_LRG', np.float64(0.9996335873219925)) ('log_Mcent_LRG', np.float64(12.886342866747897)) ('sigma_M_LRG', np.float64(0.5507080773781836))
[Interation 16] ('M_0_LRG', np.float64(12.515527081488559)) ('M_1_LRG', np.float64(13.760493427877632)) ('alpha_LRG', np.float64(1.0230288664427905)) ('f_sigv_LRG', np.float64(1.004441937855234)) ('log_Mcent_LRG', np.float64(12.84773246600763)) ('sigma_M_LRG', np.float64(0.5118280550998993))
[Interation 16] ('M_0_LRG', np.float64(12.532799265664412)) ('M_1_LRG', np.float64(13.750898926002113)) ('alpha_LRG', np.float64(1.0199305832146983)) ('f_sigv_LRG', np.float64(1.003463535627819)) ('log_Mcent_LRG', np.float64(12.864510958305466)) ('sigma_M_LRG', np.float64(0.5335567449774985))
[Interation 16] ('M_0_LRG', np.float64(12.40193240867964)) ('M_1_LRG', np.float64(13.838796449943205)) ('alpha_LRG', np.float64(1.1109421109219408)) ('f_sigv_LRG', np.float64(0.9861461138261093)) ('log_Mcent_LRG', np.float64(12.951794199506308)) ('sigma_M_LRG', np.float64(0.5935649986451018))
[Interation 16] ('M_0_LRG', np.float64(12.429978499946333)) ('M_1_LRG', np.float64(13.805077698584514)) ('alpha_LRG', np.float64(1.0830635299026272)) ('f_sigv_LRG', np.float64(1.009254455817215)) ('log_Mcent_LRG', np.float64(12.895197239245176)) ('sigma_M_LRG', np.float64(0.5437496176010546))
[Interation 16] ('M_0_LRG', np.float64(12.530442919796421)) ('M_1_LRG', np.float64(13.790449629892603)) ('alpha_LRG', np.float64(1.012620490846318)) ('f_sigv_LRG', np.float64(1.018176499731243)) ('log_Mcent_LRG', np.float64(12.894889088293144)) ('sigma_M_LRG', np.float64(0.5494426190245313))
[Interation 16] chi2=947.3355544507625
[Interation 16] chi2=1004.8145820548388
[Interation 16] chi2=1012.512879186027
[Interation 16] chi2=1025.3287977539762
[Interation 16] chi2=1030.604687340742
[Interation 16] chi2=967.028917412698
[Interation 16] chi2=969.0279300670146
[Interation 16] chi2=986.1190659442191
[Interation 16] chi2=990.4282621091277
[Interation 16] chi2=1076.6888394762238
[Interation 16] chi2=1043.2170834053452
[Interation 16] chi2=915.3082934719203
[Interation 17] ('M_0_LRG', np.float64(12.529705698996317)) ('M_1_LRG', np.float64(13.765035627674328)) ('alpha_LRG', np.float64(1.0295032816922998)) ('f_sigv_LRG', np.float64(0.9984060881721111)) ('log_Mcent_LRG', np.float64(12.866756619043306)) ('sigma_M_LRG', np.float64(0.5261997941576332))
[Interation 17] ('M_0_LRG', np.float64(12.465621322873996)) ('M_1_LRG', np.float64(13.80701192090966)) ('alpha_LRG', np.float64(1.0484455235571977)) ('f_sigv_LRG', np.float64(1.0114961507640834)) ('log_Mcent_LRG', np.float64(12.902549122431013)) ('sigma_M_LRG', np.float64(0.5524667920304678))
[Interation 17] ('M_0_LRG', np.float64(12.508116840483622)) ('M_1_LRG', np.float64(13.794961570508264)) ('alpha_LRG', np.float64(1.0484367714623948)) ('f_sigv_LRG', np.float64(0.9791711120230575)) ('log_Mcent_LRG', np.float64(12.9139938326433)) ('sigma_M_LRG', np.float64(0.5711006675993269))
[Interation 17] ('M_0_LRG', np.float64(12.474768421119588)) ('M_1_LRG', np.float64(13.776508731522418)) ('alpha_LRG', np.float64(1.0407672030416921)) ('f_sigv_LRG', np.float64(0.9971387934285212)) ('log_Mcent_LRG', np.float64(12.885655316574365)) ('sigma_M_LRG', np.float64(0.5459408091124912))
[Interation 17] chi2=1115.4173673253206
[Interation 17] chi2=1084.1738763551834
[Interation 17] chi2=1027.5274343750816
[Interation 17] chi2=996.7535399106049
[Interation 17] ('M_0_LRG', np.float64(12.454489731208483)) ('M_1_LRG', np.float64(13.814459163837567)) ('alpha_LRG', np.float64(1.0635872461664009)) ('f_sigv_LRG', np.float64(0.997032661695538)) ('log_Mcent_LRG', np.float64(12.924074055781112)) ('sigma_M_LRG', np.float64(0.5704132391029341))
[Interation 17] ('M_0_LRG', np.float64(12.513445399067143)) ('M_1_LRG', np.float64(13.775528043260177)) ('alpha_LRG', np.float64(1.050112705639708)) ('f_sigv_LRG', np.float64(0.9909943054129694)) ('log_Mcent_LRG', np.float64(12.87982453715714)) ('sigma_M_LRG', np.float64(0.5371841373364017))
[Interation 17] ('M_0_LRG', np.float64(12.479510471998463)) ('M_1_LRG', np.float64(13.792737773337251)) ('alpha_LRG', np.float64(1.0487373398528859)) ('f_sigv_LRG', np.float64(0.9985488949662428)) ('log_Mcent_LRG', np.float64(12.901193178372987)) ('sigma_M_LRG', np.float64(0.5569063014644863))
[Interation 17] ('M_0_LRG', np.float64(12.439822825867806)) ('M_1_LRG', np.float64(13.807035447230334)) ('alpha_LRG', np.float64(1.0570480238746116)) ('f_sigv_LRG', np.float64(1.0049432691654212)) ('log_Mcent_LRG', np.float64(12.917808010763023)) ('sigma_M_LRG', np.float64(0.56919717317736))
[Interation 17] ('M_0_LRG', np.float64(12.459655033947445)) ('M_1_LRG', np.float64(13.822193217549952)) ('alpha_LRG', np.float64(1.05517519158518)) ('f_sigv_LRG', np.float64(1.0039245264782233)) ('log_Mcent_LRG', np.float64(12.945386374906612)) ('sigma_M_LRG', np.float64(0.5902421952011866))
[Interation 17] ('M_0_LRG', np.float64(12.462554779201847)) ('M_1_LRG', np.float64(13.815826409562664)) ('alpha_LRG', np.float64(1.0613253662530828)) ('f_sigv_LRG', np.float64(0.9943630931287113)) ('log_Mcent_LRG', np.float64(12.931139989468962)) ('sigma_M_LRG', np.float64(0.5767105696670339))
[Interation 17] ('M_0_LRG', np.float64(12.512790895678005)) ('M_1_LRG', np.float64(13.77745471361204)) ('alpha_LRG', np.float64(1.040626288835796)) ('f_sigv_LRG', np.float64(0.988339739049191)) ('log_Mcent_LRG', np.float64(12.89831182428689)) ('sigma_M_LRG', np.float64(0.5586154265317873))
[Interation 17] ('M_0_LRG', np.float64(12.516864365827779)) ('M_1_LRG', np.float64(13.784030180687152)) ('alpha_LRG', np.float64(1.033559153010649)) ('f_sigv_LRG', np.float64(0.9998637378109011)) ('log_Mcent_LRG', np.float64(12.897034503499698)) ('sigma_M_LRG', np.float64(0.5545559785139768))
[Interation 17] ('M_0_LRG', np.float64(12.45097133860562)) ('M_1_LRG', np.float64(13.818224112263545)) ('alpha_LRG', np.float64(1.06616366687652)) ('f_sigv_LRG', np.float64(0.9949445203891057)) ('log_Mcent_LRG', np.float64(12.928487075623053)) ('sigma_M_LRG', np.float64(0.5735964716390884))
[Interation 17] ('M_0_LRG', np.float64(12.43821066660718)) ('M_1_LRG', np.float64(13.82577459300682)) ('alpha_LRG', np.float64(1.061657331214013)) ('f_sigv_LRG', np.float64(1.0027055978230939)) ('log_Mcent_LRG', np.float64(12.931434675867228)) ('sigma_M_LRG', np.float64(0.5756471968318451))
[Interation 17] ('M_0_LRG', np.float64(12.422405178021306)) ('M_1_LRG', np.float64(13.826225567386453)) ('alpha_LRG', np.float64(1.0622236709246808)) ('f_sigv_LRG', np.float64(1.0048852303637608)) ('log_Mcent_LRG', np.float64(12.941847747022424)) ('sigma_M_LRG', np.float64(0.5851733788218733))
[Interation 17] ('M_0_LRG', np.float64(12.456684602335978)) ('M_1_LRG', np.float64(13.820157402535386)) ('alpha_LRG', np.float64(1.074783423429826)) ('f_sigv_LRG', np.float64(0.9882040835902773)) ('log_Mcent_LRG', np.float64(12.950213768523998)) ('sigma_M_LRG', np.float64(0.5943074171566401))
[Interation 17] chi2=921.5793910261751
[Interation 17] chi2=989.7105812850824
[Interation 17] chi2=988.2047464802039
[Interation 17] chi2=1083.2645022790923
[Interation 17] chi2=1011.5075119734635
[Interation 17] chi2=1137.429701651474
[Interation 17] chi2=1101.4692143731995
[Interation 17] chi2=1021.2476118379908
[Interation 17] chi2=1064.135524754572
[Interation 17] chi2=918.1670990552273
[Interation 17] chi2=1036.4203457106544
[Interation 17] chi2=965.645316469603
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_11.npy
Set number of threads to 32
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.493515539284118)) ('M_1_LRG', np.float64(13.794910995370392)) ('alpha_LRG', np.float64(1.0508456624406148)) ('f_sigv_LRG', np.float64(0.9875553783499195)) ('log_Mcent_LRG', np.float64(12.905015937546159)) ('sigma_M_LRG', np.float64(0.5582526216933567))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.31368422508239746
Start satellite assignement
Satellite assignement done 0.07121038436889648
LRG mock catalogue done 0.14298272132873535
523146 central galaxies, 84500 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6346495151519775
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_11.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.418638356654675)) ('M_1_LRG', np.float64(13.507122678473197)) ('alpha_LRG', np.float64(1.0283070760709119)) ('f_sigv_LRG', np.float64(1.0442270422098636)) ('log_Mcent_LRG', np.float64(12.699531667226774)) ('sigma_M_LRG', np.float64(0.5374218480390527))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.526632355058632)) ('M_1_LRG', np.float64(13.583136355124413)) ('alpha_LRG', np.float64(1.0304263753338805)) ('f_sigv_LRG', np.float64(0.9931463331918889)) ('log_Mcent_LRG', np.float64(12.75155649819673)) ('sigma_M_LRG', np.float64(0.4312181371926846))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.500073776435805)) ('M_1_LRG', np.float64(13.479482682507761)) ('alpha_LRG', np.float64(1.0103176428146396)) ('f_sigv_LRG', np.float64(1.0634954478729346)) ('log_Mcent_LRG', np.float64(12.757962848074317)) ('sigma_M_LRG', np.float64(0.45429291557634355))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.348048537958999)) ('M_1_LRG', np.float64(13.49231202473256)) ('alpha_LRG', np.float64(1.0875332130189723)) ('f_sigv_LRG', np.float64(1.0449766450280458)) ('log_Mcent_LRG', np.float64(12.78159112701467)) ('sigma_M_LRG', np.float64(0.4843842070107292))
[Interation 18] chi2=2694.5317258450045
[Interation 18] chi2=1676.021969685732
[Interation 18] chi2=3587.282388589992
[Interation 18] chi2=4001.1682959274012
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.70932821101863)) ('M_1_LRG', np.float64(13.645512209949423)) ('alpha_LRG', np.float64(0.9781575517922685)) ('f_sigv_LRG', np.float64(0.9463794100400058)) ('log_Mcent_LRG', np.float64(12.765123176120307)) ('sigma_M_LRG', np.float64(0.4644060520117264))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.516719042083468)) ('M_1_LRG', np.float64(13.739851333331469)) ('alpha_LRG', np.float64(1.016730311646235)) ('f_sigv_LRG', np.float64(1.013816151599745)) ('log_Mcent_LRG', np.float64(12.820533104127515)) ('sigma_M_LRG', np.float64(0.4965926214318175))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.634716782335486)) ('M_1_LRG', np.float64(13.74222930438337)) ('alpha_LRG', np.float64(0.9771305792966964)) ('f_sigv_LRG', np.float64(0.9693341384785866)) ('log_Mcent_LRG', np.float64(12.869811692506834)) ('sigma_M_LRG', np.float64(0.5440714079086459))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.543890535753807)) ('M_1_LRG', np.float64(13.65508380095165)) ('alpha_LRG', np.float64(1.0459111827364866)) ('f_sigv_LRG', np.float64(0.9651608486656024)) ('log_Mcent_LRG', np.float64(12.767214168307573)) ('sigma_M_LRG', np.float64(0.46289781190422036))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.454326216244686)) ('M_1_LRG', np.float64(13.773950767371625)) ('alpha_LRG', np.float64(1.0581927587411424)) ('f_sigv_LRG', np.float64(1.0205031053694926)) ('log_Mcent_LRG', np.float64(12.848782224950357)) ('sigma_M_LRG', np.float64(0.518362320261042))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.495637736373348)) ('M_1_LRG', np.float64(13.690310433502262)) ('alpha_LRG', np.float64(1.047339803631142)) ('f_sigv_LRG', np.float64(1.000707741367699)) ('log_Mcent_LRG', np.float64(12.765077993718537)) ('sigma_M_LRG', np.float64(0.45098992597894694))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.546809268974249)) ('M_1_LRG', np.float64(13.738364564934255)) ('alpha_LRG', np.float64(0.9746748773861529)) ('f_sigv_LRG', np.float64(1.0312622106330758)) ('log_Mcent_LRG', np.float64(12.838513773215068)) ('sigma_M_LRG', np.float64(0.5114142231576947))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.501809961683747)) ('M_1_LRG', np.float64(13.71252671936973)) ('alpha_LRG', np.float64(1.0273913062679467)) ('f_sigv_LRG', np.float64(0.9857156250991889)) ('log_Mcent_LRG', np.float64(12.808628139890294)) ('sigma_M_LRG', np.float64(0.49358862665429143))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.548330998513304)) ('M_1_LRG', np.float64(13.68814818186652)) ('alpha_LRG', np.float64(1.03968659629708)) ('f_sigv_LRG', np.float64(0.9936585672877091)) ('log_Mcent_LRG', np.float64(12.783406702226834)) ('sigma_M_LRG', np.float64(0.465950976364734))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.467332680550395)) ('M_1_LRG', np.float64(13.76109439928952)) ('alpha_LRG', np.float64(1.0326286620911014)) ('f_sigv_LRG', np.float64(1.0249881568475876)) ('log_Mcent_LRG', np.float64(12.84360704628165)) ('sigma_M_LRG', np.float64(0.5116774376207069))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.554896417636606)) ('M_1_LRG', np.float64(13.714021824341977)) ('alpha_LRG', np.float64(0.9968390609058015)) ('f_sigv_LRG', np.float64(0.9978195722968265)) ('log_Mcent_LRG', np.float64(12.807579879559649)) ('sigma_M_LRG', np.float64(0.488006066368805))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.605502594807762)) ('M_1_LRG', np.float64(13.633261569637535)) ('alpha_LRG', np.float64(1.0043931197170057)) ('f_sigv_LRG', np.float64(0.9724998966467212)) ('log_Mcent_LRG', np.float64(12.752609350264086)) ('sigma_M_LRG', np.float64(0.4519188591439449))
[Interation 18] chi2=1090.4972757150913
[Interation 18] chi2=1001.6048502038503
[Interation 18] chi2=1041.9253098945167
[Interation 18] chi2=1061.5272378088398
[Interation 18] chi2=1068.143581427985
[Interation 18] chi2=1076.8015384712603
[Interation 18] chi2=1004.7515252618651
[Interation 18] chi2=1011.0201563738538
[Interation 18] chi2=1004.449263657388
[Interation 18] chi2=1093.62974999755
[Interation 18] chi2=1067.628512805633
[Interation 18] chi2=1108.9114565556204
[Interation 19] ('M_0_LRG', np.float64(12.561731479144058)) ('M_1_LRG', np.float64(13.73118282039881)) ('alpha_LRG', np.float64(1.0243504374133443)) ('f_sigv_LRG', np.float64(1.0047366223407064)) ('log_Mcent_LRG', np.float64(12.838041604455428)) ('sigma_M_LRG', np.float64(0.5112569591983186))
[Interation 19] ('M_0_LRG', np.float64(12.509256900020095)) ('M_1_LRG', np.float64(13.714272197600682)) ('alpha_LRG', np.float64(1.0296139011247845)) ('f_sigv_LRG', np.float64(1.0180079554650723)) ('log_Mcent_LRG', np.float64(12.811744863056939)) ('sigma_M_LRG', np.float64(0.49184729711563735))
[Interation 19] ('M_0_LRG', np.float64(12.600899005376673)) ('M_1_LRG', np.float64(13.695819548653208)) ('alpha_LRG', np.float64(1.021030820463349)) ('f_sigv_LRG', np.float64(0.9956098089277168)) ('log_Mcent_LRG', np.float64(12.81357945629463)) ('sigma_M_LRG', np.float64(0.4943406858731459))
[Interation 19] ('M_0_LRG', np.float64(12.517551137952776)) ('M_1_LRG', np.float64(13.694140107197216)) ('alpha_LRG', np.float64(1.0573389641293582)) ('f_sigv_LRG', np.float64(0.9992360934784461)) ('log_Mcent_LRG', np.float64(12.800359297542224)) ('sigma_M_LRG', np.float64(0.4882733463117938))
[Interation 19] chi2=1055.1430001223746
[Interation 19] chi2=1034.8703581838138
[Interation 19] chi2=958.8595018688279
[Interation 19] chi2=1026.412367223678
[Interation 19] ('M_0_LRG', np.float64(12.504082091379288)) ('M_1_LRG', np.float64(13.700922444038543)) ('alpha_LRG', np.float64(1.0666213708493366)) ('f_sigv_LRG', np.float64(0.9955652061502965)) ('log_Mcent_LRG', np.float64(12.796966895829124)) ('sigma_M_LRG', np.float64(0.4785153667166132))
[Interation 19] ('M_0_LRG', np.float64(12.491880760436963)) ('M_1_LRG', np.float64(13.726574387366457)) ('alpha_LRG', np.float64(1.084833107871426)) ('f_sigv_LRG', np.float64(0.9929530622704636)) ('log_Mcent_LRG', np.float64(12.821727117427333)) ('sigma_M_LRG', np.float64(0.49934884098627136))
[Interation 19] ('M_0_LRG', np.float64(12.526804507202119)) ('M_1_LRG', np.float64(13.725157714267255)) ('alpha_LRG', np.float64(1.0401198600311705)) ('f_sigv_LRG', np.float64(0.9974653150292911)) ('log_Mcent_LRG', np.float64(12.823675273778544)) ('sigma_M_LRG', np.float64(0.5019285450634959))
[Interation 19] ('M_0_LRG', np.float64(12.488176650156921)) ('M_1_LRG', np.float64(13.729741545061287)) ('alpha_LRG', np.float64(1.0742213336445745)) ('f_sigv_LRG', np.float64(1.0027499622109757)) ('log_Mcent_LRG', np.float64(12.829257814242505)) ('sigma_M_LRG', np.float64(0.5037749220805338))
[Interation 19] ('M_0_LRG', np.float64(12.519130700757579)) ('M_1_LRG', np.float64(13.733033779593024)) ('alpha_LRG', np.float64(1.0370438313180976)) ('f_sigv_LRG', np.float64(1.0070977766432956)) ('log_Mcent_LRG', np.float64(12.832195669973958)) ('sigma_M_LRG', np.float64(0.5071910929848281))
[Interation 19] ('M_0_LRG', np.float64(12.524788867753493)) ('M_1_LRG', np.float64(13.727007239540182)) ('alpha_LRG', np.float64(1.0652938847237365)) ('f_sigv_LRG', np.float64(0.994800498023471)) ('log_Mcent_LRG', np.float64(12.83352399606099)) ('sigma_M_LRG', np.float64(0.5099483081838709))
[Interation 19] ('M_0_LRG', np.float64(12.525294894754945)) ('M_1_LRG', np.float64(13.73115632537842)) ('alpha_LRG', np.float64(1.0511690081127638)) ('f_sigv_LRG', np.float64(0.9924077124726628)) ('log_Mcent_LRG', np.float64(12.838966487777787)) ('sigma_M_LRG', np.float64(0.5146480735360218))
[Interation 19] ('M_0_LRG', np.float64(12.49623369637775)) ('M_1_LRG', np.float64(13.709026163394693)) ('alpha_LRG', np.float64(1.0808705807552128)) ('f_sigv_LRG', np.float64(0.9843356519969272)) ('log_Mcent_LRG', np.float64(12.800184307643438)) ('sigma_M_LRG', np.float64(0.4810818169681493))
[Interation 19] ('M_0_LRG', np.float64(12.487004360767312)) ('M_1_LRG', np.float64(13.723144929832616)) ('alpha_LRG', np.float64(1.0539835284098988)) ('f_sigv_LRG', np.float64(0.9923801908000137)) ('log_Mcent_LRG', np.float64(12.809079607465971)) ('sigma_M_LRG', np.float64(0.48482507337361624))
[Interation 19] ('M_0_LRG', np.float64(12.5016946542467)) ('M_1_LRG', np.float64(13.712865473090016)) ('alpha_LRG', np.float64(1.066258140727743)) ('f_sigv_LRG', np.float64(0.9939798895554599)) ('log_Mcent_LRG', np.float64(12.80966272112251)) ('sigma_M_LRG', np.float64(0.48841461888398013))
[Interation 19] ('M_0_LRG', np.float64(12.500832825074895)) ('M_1_LRG', np.float64(13.736629204536316)) ('alpha_LRG', np.float64(1.064196788583979)) ('f_sigv_LRG', np.float64(0.9971600112501764)) ('log_Mcent_LRG', np.float64(12.846132986871863)) ('sigma_M_LRG', np.float64(0.5202104581504915))
[Interation 19] ('M_0_LRG', np.float64(12.518786020602471)) ('M_1_LRG', np.float64(13.710344935162228)) ('alpha_LRG', np.float64(1.0607184185029432)) ('f_sigv_LRG', np.float64(0.9912972843888443)) ('log_Mcent_LRG', np.float64(12.81026343588496)) ('sigma_M_LRG', np.float64(0.4929551818767059))
[Interation 19] chi2=1021.6325898540429
[Interation 19] chi2=1024.0675491591874
[Interation 19] chi2=1024.301949247935
[Interation 19] chi2=1050.7559209504288
[Interation 19] chi2=972.8122111606998
[Interation 19] chi2=1016.1533944856716
[Interation 19] chi2=1013.5597197312064
[Interation 19] chi2=1030.9851959262974
[Interation 19] chi2=947.8529257402969
[Interation 19] chi2=982.1258552266689
[Interation 19] chi2=988.6880989837491
[Interation 19] chi2=1034.422065448097
[Interation 20] ('M_0_LRG', np.float64(12.515215974897298)) ('M_1_LRG', np.float64(13.71849534353827)) ('alpha_LRG', np.float64(1.0643612616573135)) ('f_sigv_LRG', np.float64(0.9910406931503412)) ('log_Mcent_LRG', np.float64(12.824987166481039)) ('sigma_M_LRG', np.float64(0.5068852068392162))
[Interation 20] ('M_0_LRG', np.float64(12.467196620106284)) ('M_1_LRG', np.float64(13.743309874737553)) ('alpha_LRG', np.float64(1.0818268110987599)) ('f_sigv_LRG', np.float64(0.9859293459463344)) ('log_Mcent_LRG', np.float64(12.851305942538444)) ('sigma_M_LRG', np.float64(0.5262166807328279))
[Interation 20] ('M_0_LRG', np.float64(12.495959068448114)) ('M_1_LRG', np.float64(13.734782643582417)) ('alpha_LRG', np.float64(1.0715917417676082)) ('f_sigv_LRG', np.float64(0.9874584848444884)) ('log_Mcent_LRG', np.float64(12.839596647392268)) ('sigma_M_LRG', np.float64(0.5148884044998734))
[Interation 20] ('M_0_LRG', np.float64(12.486299511383418)) ('M_1_LRG', np.float64(13.72368594224136)) ('alpha_LRG', np.float64(1.0689133021983412)) ('f_sigv_LRG', np.float64(1.0027616740633294)) ('log_Mcent_LRG', np.float64(12.82433721596077)) ('sigma_M_LRG', np.float64(0.5001225901549339))
[Interation 20] chi2=1028.7815430062042
[Interation 20] chi2=1128.4986224814195
[Interation 20] chi2=1048.086696369338
[Interation 20] chi2=1006.1071390246254
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_12.npy
Set number of threads to 32
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.500938590834664)) ('M_1_LRG', np.float64(13.733662299408705)) ('alpha_LRG', np.float64(1.074261893846058)) ('f_sigv_LRG', np.float64(0.9879196078951649)) ('log_Mcent_LRG', np.float64(12.854049130538613)) ('sigma_M_LRG', np.float64(0.5305688631346109))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.33093738555908203
Start satellite assignement
Satellite assignement done 0.07606744766235352
LRG mock catalogue done 0.14980030059814453
572880 central galaxies, 93833 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6586170196533203
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_12.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:28
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Load rppi measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.435982971379206)) ('M_1_LRG', np.float64(13.494446681342916)) ('alpha_LRG', np.float64(1.0075468710431605)) ('f_sigv_LRG', np.float64(1.064509910228541)) ('log_Mcent_LRG', np.float64(12.724761087029005)) ('sigma_M_LRG', np.float64(0.4895535652352939))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.492139303822258)) ('M_1_LRG', np.float64(13.912141869686865)) ('alpha_LRG', np.float64(0.9857840354271179)) ('f_sigv_LRG', np.float64(0.9620634036235802)) ('log_Mcent_LRG', np.float64(12.796569872327925)) ('sigma_M_LRG', np.float64(0.4616118661033784))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.548927933756904)) ('M_1_LRG', np.float64(13.558916478728626)) ('alpha_LRG', np.float64(0.9425636110465084)) ('f_sigv_LRG', np.float64(1.0782681366315112)) ('log_Mcent_LRG', np.float64(12.789413994158316)) ('sigma_M_LRG', np.float64(0.4821106622254451))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.4113688269371)) ('M_1_LRG', np.float64(13.406458371523122)) ('alpha_LRG', np.float64(1.0014919759738254)) ('f_sigv_LRG', np.float64(0.8842621126018047)) ('log_Mcent_LRG', np.float64(12.59746424405893)) ('sigma_M_LRG', np.float64(0.4225581821031089))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.525869057822971)) ('M_1_LRG', np.float64(13.409983270938344)) ('alpha_LRG', np.float64(0.9906821706768423)) ('f_sigv_LRG', np.float64(0.942684706615558)) ('log_Mcent_LRG', np.float64(12.73827364502736)) ('sigma_M_LRG', np.float64(0.5558618979917574))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.335103640720765)) ('M_1_LRG', np.float64(13.677886368445263)) ('alpha_LRG', np.float64(1.021864743673101)) ('f_sigv_LRG', np.float64(1.0793184613819407)) ('log_Mcent_LRG', np.float64(12.760261002579034)) ('sigma_M_LRG', np.float64(0.4796259533183663))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.476224022677787)) ('M_1_LRG', np.float64(13.644507938216098)) ('alpha_LRG', np.float64(1.0371050924545817)) ('f_sigv_LRG', np.float64(0.9253938689251504)) ('log_Mcent_LRG', np.float64(12.741561801441083)) ('sigma_M_LRG', np.float64(0.4792017440128712))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.39308994373585)) ('M_1_LRG', np.float64(13.599586862114398)) ('alpha_LRG', np.float64(1.0323192991127415)) ('f_sigv_LRG', np.float64(0.9828223359656106)) ('log_Mcent_LRG', np.float64(12.707393111130843)) ('sigma_M_LRG', np.float64(0.41709806798795646))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.535993703066293)) ('M_1_LRG', np.float64(13.611935190668955)) ('alpha_LRG', np.float64(0.9981063965679436)) ('f_sigv_LRG', np.float64(0.9186840739368932)) ('log_Mcent_LRG', np.float64(12.756273649238613)) ('sigma_M_LRG', np.float64(0.5627643746389399))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.524462216222293)) ('M_1_LRG', np.float64(13.682770227872744)) ('alpha_LRG', np.float64(1.086710771047022)) ('f_sigv_LRG', np.float64(1.0374009031567388)) ('log_Mcent_LRG', np.float64(12.768403300081598)) ('sigma_M_LRG', np.float64(0.46601273212992456))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.315675359257584)) ('M_1_LRG', np.float64(13.765599197391495)) ('alpha_LRG', np.float64(1.1662354615497885)) ('f_sigv_LRG', np.float64(0.9744163772071082)) ('log_Mcent_LRG', np.float64(12.730404340646347)) ('sigma_M_LRG', np.float64(0.42424366532360497))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.22311473342031)) ('M_1_LRG', np.float64(13.687197298360093)) ('alpha_LRG', np.float64(1.2095526538059191)) ('f_sigv_LRG', np.float64(1.1545527286672772)) ('log_Mcent_LRG', np.float64(12.714242745539643)) ('sigma_M_LRG', np.float64(0.3824341719274639))
[Interation 20] chi2=1848.03098303897
[Interation 20] chi2=1956.5542214905831
[Interation 20] chi2=2112.4050954803824
[Interation 20] chi2=2102.801729715443
[Interation 20] chi2=2438.420979463729
[Interation 20] chi2=1361.705795043056
[Interation 20] chi2=1092.0205748593025
[Interation 20] chi2=1254.8729647022774
[Interation 20] chi2=2050.72725862289
[Interation 20] chi2=1236.5544745509883
[Interation 20] chi2=1567.6154164545642
[Interation 20] chi2=1500.989190102439
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 21] ('M_0_LRG', np.float64(12.485530985739524)) ('M_1_LRG', np.float64(13.654898844812298)) ('alpha_LRG', np.float64(1.0900597533270158)) ('f_sigv_LRG', np.float64(1.012735362798775)) ('log_Mcent_LRG', np.float64(12.702271648474694)) ('sigma_M_LRG', np.float64(0.39189970384414385))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 21] ('M_0_LRG', np.float64(12.469661038255357)) ('M_1_LRG', np.float64(13.770901888593073)) ('alpha_LRG', np.float64(1.0849067460065356)) ('f_sigv_LRG', np.float64(0.9839369886867001)) ('log_Mcent_LRG', np.float64(12.910531483057513)) ('sigma_M_LRG', np.float64(0.5742328076965147))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 21] ('M_0_LRG', np.float64(12.513797992873686)) ('M_1_LRG', np.float64(13.746530261182013)) ('alpha_LRG', np.float64(1.0093463522774535)) ('f_sigv_LRG', np.float64(1.005925581752673)) ('log_Mcent_LRG', np.float64(12.843423607285743)) ('sigma_M_LRG', np.float64(0.5039244946302538))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 21] ('M_0_LRG', np.float64(12.606228158221851)) ('M_1_LRG', np.float64(13.630785623147375)) ('alpha_LRG', np.float64(1.0166513556748804)) ('f_sigv_LRG', np.float64(1.0273916249015076)) ('log_Mcent_LRG', np.float64(12.750712336886615)) ('sigma_M_LRG', np.float64(0.4420593692635883))
[Interation 21] chi2=972.3348550792939
[Interation 21] chi2=1055.841137197601
[Interation 21] chi2=1126.4182093745155
[Interation 21] chi2=1080.092510051787
[Interation 21] ('M_0_LRG', np.float64(12.544959950099807)) ('M_1_LRG', np.float64(13.747939389437507)) ('alpha_LRG', np.float64(1.0218582818182038)) ('f_sigv_LRG', np.float64(1.0000484907561495)) ('log_Mcent_LRG', np.float64(12.847547324241216)) ('sigma_M_LRG', np.float64(0.5150289464270286))
[Interation 21] ('M_0_LRG', np.float64(12.536115101105807)) ('M_1_LRG', np.float64(13.748596102830566)) ('alpha_LRG', np.float64(1.0426147379410786)) ('f_sigv_LRG', np.float64(0.9881780698582819)) ('log_Mcent_LRG', np.float64(12.868124783737475)) ('sigma_M_LRG', np.float64(0.5334595247689918))
[Interation 21] ('M_0_LRG', np.float64(12.505603748530326)) ('M_1_LRG', np.float64(13.768486985256173)) ('alpha_LRG', np.float64(1.0579732986460675)) ('f_sigv_LRG', np.float64(0.9963706178312008)) ('log_Mcent_LRG', np.float64(12.87301474671296)) ('sigma_M_LRG', np.float64(0.5298727645970644))
[Interation 21] ('M_0_LRG', np.float64(12.596787515275214)) ('M_1_LRG', np.float64(13.779526730283424)) ('alpha_LRG', np.float64(1.0036349700632083)) ('f_sigv_LRG', np.float64(1.0037954241252733)) ('log_Mcent_LRG', np.float64(12.901419638912241)) ('sigma_M_LRG', np.float64(0.5556222172470053))
[Interation 21] ('M_0_LRG', np.float64(12.557685230715295)) ('M_1_LRG', np.float64(13.745248575006928)) ('alpha_LRG', np.float64(1.0152992526655167)) ('f_sigv_LRG', np.float64(1.0028266875874445)) ('log_Mcent_LRG', np.float64(12.849553003842384)) ('sigma_M_LRG', np.float64(0.5157140251210863))
[Interation 21] ('M_0_LRG', np.float64(12.483697364659534)) ('M_1_LRG', np.float64(13.762432073004014)) ('alpha_LRG', np.float64(1.0511600793429277)) ('f_sigv_LRG', np.float64(1.0111808078610056)) ('log_Mcent_LRG', np.float64(12.862642603243696)) ('sigma_M_LRG', np.float64(0.5253837735869907))
[Interation 21] ('M_0_LRG', np.float64(12.472158546668185)) ('M_1_LRG', np.float64(13.787270438431868)) ('alpha_LRG', np.float64(1.0539414585005864)) ('f_sigv_LRG', np.float64(1.0055949546591259)) ('log_Mcent_LRG', np.float64(12.912809567395284)) ('sigma_M_LRG', np.float64(0.5699149746361414))
[Interation 21] ('M_0_LRG', np.float64(12.530252428670694)) ('M_1_LRG', np.float64(13.758384133204512)) ('alpha_LRG', np.float64(1.016140068924568)) ('f_sigv_LRG', np.float64(0.9993977394829798)) ('log_Mcent_LRG', np.float64(12.85765415336488)) ('sigma_M_LRG', np.float64(0.5277475216388854))
[Interation 21] ('M_0_LRG', np.float64(12.483790944196718)) ('M_1_LRG', np.float64(13.747183013716205)) ('alpha_LRG', np.float64(1.03133706247664)) ('f_sigv_LRG', np.float64(1.0156682439212181)) ('log_Mcent_LRG', np.float64(12.842056766670845)) ('sigma_M_LRG', np.float64(0.5077868165773617))
[Interation 21] ('M_0_LRG', np.float64(12.507415567508266)) ('M_1_LRG', np.float64(13.737242662882412)) ('alpha_LRG', np.float64(1.0044862954070244)) ('f_sigv_LRG', np.float64(1.006135088886364)) ('log_Mcent_LRG', np.float64(12.810173096274143)) ('sigma_M_LRG', np.float64(0.48376147815516196))
[Interation 21] ('M_0_LRG', np.float64(12.525173799779417)) ('M_1_LRG', np.float64(13.765366181546465)) ('alpha_LRG', np.float64(1.022088926210922)) ('f_sigv_LRG', np.float64(1.022187390334979)) ('log_Mcent_LRG', np.float64(12.869304167588636)) ('sigma_M_LRG', np.float64(0.5295501158832979))
[Interation 21] ('M_0_LRG', np.float64(12.600360997085396)) ('M_1_LRG', np.float64(13.770533681870887)) ('alpha_LRG', np.float64(0.9611917910349724)) ('f_sigv_LRG', np.float64(1.0172422307629994)) ('log_Mcent_LRG', np.float64(12.88674681784925)) ('sigma_M_LRG', np.float64(0.5457382544330908))
[Interation 21] chi2=1131.4529499742714
[Interation 21] chi2=1003.0419627373823
[Interation 21] chi2=1030.852128856254
[Interation 21] chi2=1108.3087757217934
[Interation 21] chi2=978.7859292227789
[Interation 21] chi2=1021.6231556203971
[Interation 21] chi2=1032.0240621668318
[Interation 21] chi2=1034.7476164895127
[Interation 21] chi2=957.558398276213
[Interation 21] chi2=1018.193730778594
[Interation 21] chi2=984.8828894271496
[Interation 21] chi2=1012.1961262937002
[Interation 22] ('M_0_LRG', np.float64(12.45350826267667)) ('M_1_LRG', np.float64(13.784535022582832)) ('alpha_LRG', np.float64(1.077381778735673)) ('f_sigv_LRG', np.float64(1.0054700887940633)) ('log_Mcent_LRG', np.float64(12.877303615907502)) ('sigma_M_LRG', np.float64(0.5347703329345538))
[Interation 22] ('M_0_LRG', np.float64(12.485817592187106)) ('M_1_LRG', np.float64(13.77268090739819)) ('alpha_LRG', np.float64(1.059261131934615)) ('f_sigv_LRG', np.float64(0.9997134210491602)) ('log_Mcent_LRG', np.float64(12.877631967573882)) ('sigma_M_LRG', np.float64(0.5378759250650884))
[Interation 22] ('M_0_LRG', np.float64(12.502370119747976)) ('M_1_LRG', np.float64(13.779006741273967)) ('alpha_LRG', np.float64(1.04882698898311)) ('f_sigv_LRG', np.float64(1.010571446937136)) ('log_Mcent_LRG', np.float64(12.889028822402432)) ('sigma_M_LRG', np.float64(0.5436436154085419))
[Interation 22] ('M_0_LRG', np.float64(12.564596828131824)) ('M_1_LRG', np.float64(13.760277590571892)) ('alpha_LRG', np.float64(1.0292336269663866)) ('f_sigv_LRG', np.float64(0.9904342710726338)) ('log_Mcent_LRG', np.float64(12.887136278944118)) ('sigma_M_LRG', np.float64(0.5504066772943066))
[Interation 22] chi2=958.8093336497552
[Interation 22] chi2=937.584130836683
[Interation 22] chi2=897.6150255991292
[Interation 22] chi2=1086.4284015150486
[Interation 22] ('M_0_LRG', np.float64(12.485435547489029)) ('M_1_LRG', np.float64(13.791812694481544)) ('alpha_LRG', np.float64(1.0544879062686872)) ('f_sigv_LRG', np.float64(0.9983628131270135)) ('log_Mcent_LRG', np.float64(12.907895472681265)) ('sigma_M_LRG', np.float64(0.5634674062353935))
[Interation 22] ('M_0_LRG', np.float64(12.500663966947592)) ('M_1_LRG', np.float64(13.756996898247063)) ('alpha_LRG', np.float64(1.0518150489638067)) ('f_sigv_LRG', np.float64(0.9971151587068403)) ('log_Mcent_LRG', np.float64(12.861315242574628)) ('sigma_M_LRG', np.float64(0.5296171273606711))
[Interation 22] ('M_0_LRG', np.float64(12.428290661684512)) ('M_1_LRG', np.float64(13.77858687105039)) ('alpha_LRG', np.float64(1.05872255527229)) ('f_sigv_LRG', np.float64(1.0128356846651285)) ('log_Mcent_LRG', np.float64(12.882060896744154)) ('sigma_M_LRG', np.float64(0.541207939112878))
[Interation 22] ('M_0_LRG', np.float64(12.536297918092265)) ('M_1_LRG', np.float64(13.774473993195603)) ('alpha_LRG', np.float64(1.0202963169839976)) ('f_sigv_LRG', np.float64(0.9990968769742731)) ('log_Mcent_LRG', np.float64(12.878904533608784)) ('sigma_M_LRG', np.float64(0.539963222079077))
[Interation 22] ('M_0_LRG', np.float64(12.46797320063116)) ('M_1_LRG', np.float64(13.772986001867139)) ('alpha_LRG', np.float64(1.0467834564915444)) ('f_sigv_LRG', np.float64(1.0143418435140152)) ('log_Mcent_LRG', np.float64(12.874408898793567)) ('sigma_M_LRG', np.float64(0.5339004812438941))
[Interation 22] ('M_0_LRG', np.float64(12.522859529313727)) ('M_1_LRG', np.float64(13.77867867406447)) ('alpha_LRG', np.float64(1.0360456515734404)) ('f_sigv_LRG', np.float64(1.0001648141451813)) ('log_Mcent_LRG', np.float64(12.89526915328891)) ('sigma_M_LRG', np.float64(0.5562682120029746))
[Interation 22] ('M_0_LRG', np.float64(12.511659354793002)) ('M_1_LRG', np.float64(13.783276856559226)) ('alpha_LRG', np.float64(1.0417785632273087)) ('f_sigv_LRG', np.float64(0.9977065795760796)) ('log_Mcent_LRG', np.float64(12.89663331152257)) ('sigma_M_LRG', np.float64(0.5540047336689662))
[Interation 22] ('M_0_LRG', np.float64(12.547309439613576)) ('M_1_LRG', np.float64(13.778986207887659)) ('alpha_LRG', np.float64(1.039576804265576)) ('f_sigv_LRG', np.float64(0.9886938438140439)) ('log_Mcent_LRG', np.float64(12.900649140059528)) ('sigma_M_LRG', np.float64(0.5604637022277773))
[Interation 22] ('M_0_LRG', np.float64(12.539237604164432)) ('M_1_LRG', np.float64(13.7902951975722)) ('alpha_LRG', np.float64(1.0330824102118392)) ('f_sigv_LRG', np.float64(0.9961295698017348)) ('log_Mcent_LRG', np.float64(12.911544178703814)) ('sigma_M_LRG', np.float64(0.567692609292567))
[Interation 22] ('M_0_LRG', np.float64(12.458669425001572)) ('M_1_LRG', np.float64(13.781576161180087)) ('alpha_LRG', np.float64(1.069200723656601)) ('f_sigv_LRG', np.float64(1.0031792672790312)) ('log_Mcent_LRG', np.float64(12.891270209941002)) ('sigma_M_LRG', np.float64(0.551343034293527))
[Interation 22] ('M_0_LRG', np.float64(12.520944354267563)) ('M_1_LRG', np.float64(13.793598766303445)) ('alpha_LRG', np.float64(1.0377953329294478)) ('f_sigv_LRG', np.float64(1.0116231714589805)) ('log_Mcent_LRG', np.float64(12.914167924629103)) ('sigma_M_LRG', np.float64(0.5663686518811579))
[Interation 22] ('M_0_LRG', np.float64(12.455632790357841)) ('M_1_LRG', np.float64(13.779111232314444)) ('alpha_LRG', np.float64(1.067638089457495)) ('f_sigv_LRG', np.float64(1.0083449379884395)) ('log_Mcent_LRG', np.float64(12.888888503130701)) ('sigma_M_LRG', np.float64(0.5490413115966181))
[Interation 22] chi2=1077.8168027116706
[Interation 22] chi2=885.1374281391764
[Interation 22] chi2=1105.034430300486
[Interation 22] chi2=945.440227646379
[Interation 22] chi2=994.1190568390847
[Interation 22] chi2=1003.1596505316527
[Interation 22] chi2=1036.6458612055421
[Interation 22] chi2=1061.0201613836202
[Interation 22] chi2=1054.2487488207903
[Interation 22] chi2=1069.781771006106
[Interation 22] chi2=1053.8733431264056
[Interation 22] chi2=936.8325174664767
[Interation 23] ('M_0_LRG', np.float64(12.512583732074413)) ('M_1_LRG', np.float64(13.775358603085843)) ('alpha_LRG', np.float64(1.0316064529648477)) ('f_sigv_LRG', np.float64(1.002311875908232)) ('log_Mcent_LRG', np.float64(12.883158255403615)) ('sigma_M_LRG', np.float64(0.5448093458153367))
[Interation 23] ('M_0_LRG', np.float64(12.510943578090298)) ('M_1_LRG', np.float64(13.7709797970408)) ('alpha_LRG', np.float64(1.042129606672359)) ('f_sigv_LRG', np.float64(0.996647246523664)) ('log_Mcent_LRG', np.float64(12.886949136877663)) ('sigma_M_LRG', np.float64(0.5497122565139599))
[Interation 23] ('M_0_LRG', np.float64(12.526083469289594)) ('M_1_LRG', np.float64(13.76918135358722)) ('alpha_LRG', np.float64(1.0381607019949968)) ('f_sigv_LRG', np.float64(0.9946740226691791)) ('log_Mcent_LRG', np.float64(12.879459723185287)) ('sigma_M_LRG', np.float64(0.5415878257189316))
[Interation 23] ('M_0_LRG', np.float64(12.540483971297919)) ('M_1_LRG', np.float64(13.764848493329014)) ('alpha_LRG', np.float64(1.020912000971367)) ('f_sigv_LRG', np.float64(1.0020492664331386)) ('log_Mcent_LRG', np.float64(12.873608055233252)) ('sigma_M_LRG', np.float64(0.5362112078188844))
[Interation 23] chi2=996.1214033582271
[Interation 23] chi2=1037.7499725420507
[Interation 23] chi2=928.5693162111315
[Interation 23] chi2=929.6853180587183
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_13.npy
Set number of threads to 32
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.566651361589305)) ('M_1_LRG', np.float64(13.778753234341837)) ('alpha_LRG', np.float64(1.0206767298004273)) ('f_sigv_LRG', np.float64(0.9925942650516713)) ('log_Mcent_LRG', np.float64(12.90150958138262)) ('sigma_M_LRG', np.float64(0.5618342195379034))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.34225988388061523
Start satellite assignement
Satellite assignement done 0.0840446949005127
LRG mock catalogue done 0.16180133819580078
533219 central galaxies, 83118 satellites, fraction of satellite 0.13 
Done overall time  LRG 0.7139880657196045
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_13.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load smu measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.622551438863413)) ('M_1_LRG', np.float64(13.699553682603414)) ('alpha_LRG', np.float64(1.0098649425225108)) ('f_sigv_LRG', np.float64(0.9601034867157785)) ('log_Mcent_LRG', np.float64(12.83757565446834)) ('sigma_M_LRG', np.float64(0.529026637188495))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.704540434793431)) ('M_1_LRG', np.float64(13.743620438485094)) ('alpha_LRG', np.float64(0.9404571477767565)) ('f_sigv_LRG', np.float64(0.9951974266615455)) ('log_Mcent_LRG', np.float64(12.884711330176119)) ('sigma_M_LRG', np.float64(0.5519585039033095))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.60941575788569)) ('M_1_LRG', np.float64(13.759970822949924)) ('alpha_LRG', np.float64(0.9358713131205513)) ('f_sigv_LRG', np.float64(1.0154843362258679)) ('log_Mcent_LRG', np.float64(12.854592775169362)) ('sigma_M_LRG', np.float64(0.5199682324678508))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.579172969180016)) ('M_1_LRG', np.float64(13.663854066824939)) ('alpha_LRG', np.float64(1.0214975136316682)) ('f_sigv_LRG', np.float64(0.9961257981735281)) ('log_Mcent_LRG', np.float64(12.77735305244184)) ('sigma_M_LRG', np.float64(0.46891093272764134))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.636050449807957)) ('M_1_LRG', np.float64(13.72536950751925)) ('alpha_LRG', np.float64(0.9467250328917679)) ('f_sigv_LRG', np.float64(0.9713068044628248)) ('log_Mcent_LRG', np.float64(12.844718764986036)) ('sigma_M_LRG', np.float64(0.5313861174026265))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.627141012162376)) ('M_1_LRG', np.float64(13.701693433586263)) ('alpha_LRG', np.float64(0.9334576964537187)) ('f_sigv_LRG', np.float64(1.0223583558657414)) ('log_Mcent_LRG', np.float64(12.78481971675223)) ('sigma_M_LRG', np.float64(0.46689343586752835))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.546816995460347)) ('M_1_LRG', np.float64(13.604032147836737)) ('alpha_LRG', np.float64(1.0311220049232088)) ('f_sigv_LRG', np.float64(0.9426767351683562)) ('log_Mcent_LRG', np.float64(12.696579548514684)) ('sigma_M_LRG', np.float64(0.4104442216423413))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.523128906888411)) ('M_1_LRG', np.float64(13.671300813113959)) ('alpha_LRG', np.float64(1.0541345988899422)) ('f_sigv_LRG', np.float64(0.9852363742274857)) ('log_Mcent_LRG', np.float64(12.76363391444002)) ('sigma_M_LRG', np.float64(0.4525201995448928))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.651225989569962)) ('M_1_LRG', np.float64(13.750807313001891)) ('alpha_LRG', np.float64(0.9505744607852831)) ('f_sigv_LRG', np.float64(0.9893400694281294)) ('log_Mcent_LRG', np.float64(12.85841088836133)) ('sigma_M_LRG', np.float64(0.5248490739399967))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.595978443553992)) ('M_1_LRG', np.float64(13.710738296656762)) ('alpha_LRG', np.float64(1.0244951403824423)) ('f_sigv_LRG', np.float64(0.994533995329476)) ('log_Mcent_LRG', np.float64(12.824860647862062)) ('sigma_M_LRG', np.float64(0.5044591316796558))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.667321911491655)) ('M_1_LRG', np.float64(13.722338811967091)) ('alpha_LRG', np.float64(0.9265406421975505)) ('f_sigv_LRG', np.float64(0.9976054393575682)) ('log_Mcent_LRG', np.float64(12.814657181734294)) ('sigma_M_LRG', np.float64(0.48681934459328696))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.585483657703131)) ('M_1_LRG', np.float64(13.673241439705937)) ('alpha_LRG', np.float64(0.9772845094641884)) ('f_sigv_LRG', np.float64(1.0044978571763445)) ('log_Mcent_LRG', np.float64(12.739255312885282)) ('sigma_M_LRG', np.float64(0.43083498035873025))
[Interation 23] chi2=990.2211759441687
[Interation 23] chi2=1013.9778693854834
[Interation 23] chi2=967.5505585623488
[Interation 23] chi2=1040.8046077121428
[Interation 23] chi2=1070.2274182016577
[Interation 23] chi2=1084.9002325836086
[Interation 23] chi2=990.073293373278
[Interation 23] chi2=1067.9789371382276
[Interation 23] chi2=1127.5750643897313
[Interation 23] chi2=972.5086257637358
[Interation 23] chi2=1085.0970631354528
[Interation 23] chi2=1052.3054362657526
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 24] ('M_0_LRG', np.float64(12.619240232616749)) ('M_1_LRG', np.float64(13.679212442123408)) ('alpha_LRG', np.float64(0.9815693754420404)) ('f_sigv_LRG', np.float64(0.9770076770160644)) ('log_Mcent_LRG', np.float64(12.78327208774705)) ('sigma_M_LRG', np.float64(0.47588088348042135))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 24] ('M_0_LRG', np.float64(12.612744708817436)) ('M_1_LRG', np.float64(13.732482629101261)) ('alpha_LRG', np.float64(0.9485511933702038)) ('f_sigv_LRG', np.float64(0.9934094190413062)) ('log_Mcent_LRG', np.float64(12.828959591973005)) ('sigma_M_LRG', np.float64(0.5081800444672228))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 24] ('M_0_LRG', np.float64(12.544005987412351)) ('M_1_LRG', np.float64(13.653343748478699)) ('alpha_LRG', np.float64(1.0551012799376125)) ('f_sigv_LRG', np.float64(0.9888210033020229)) ('log_Mcent_LRG', np.float64(12.752291602372456)) ('sigma_M_LRG', np.float64(0.43915262107224423))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 24] ('M_0_LRG', np.float64(12.529076353312512)) ('M_1_LRG', np.float64(13.736632511009338)) ('alpha_LRG', np.float64(1.0351708342990786)) ('f_sigv_LRG', np.float64(1.0085363230343471)) ('log_Mcent_LRG', np.float64(12.821251023320468)) ('sigma_M_LRG', np.float64(0.49011095002125893))
[Interation 24] chi2=1038.6560929308073
[Interation 24] chi2=1042.4399267663907
[Interation 24] chi2=1076.9818486218144
[Interation 24] chi2=1044.399815181485
[Interation 24] ('M_0_LRG', np.float64(12.635914765921749)) ('M_1_LRG', np.float64(13.698179213088848)) ('alpha_LRG', np.float64(0.9602045709827749)) ('f_sigv_LRG', np.float64(0.9843257302650279)) ('log_Mcent_LRG', np.float64(12.801198263891212)) ('sigma_M_LRG', np.float64(0.4852649260193464))
[Interation 24] ('M_0_LRG', np.float64(12.670737715205016)) ('M_1_LRG', np.float64(13.69669823122119)) ('alpha_LRG', np.float64(0.9336521829652401)) ('f_sigv_LRG', np.float64(0.9903216722840539)) ('log_Mcent_LRG', np.float64(12.810313259088167)) ('sigma_M_LRG', np.float64(0.4929581084124933))
[Interation 24] ('M_0_LRG', np.float64(12.689818856567035)) ('M_1_LRG', np.float64(13.717533286042)) ('alpha_LRG', np.float64(0.9163943667736311)) ('f_sigv_LRG', np.float64(0.9942946806353122)) ('log_Mcent_LRG', np.float64(12.840401520459691)) ('sigma_M_LRG', np.float64(0.5218583551704055))
[Interation 24] ('M_0_LRG', np.float64(12.618888922393335)) ('M_1_LRG', np.float64(13.678879160659955)) ('alpha_LRG', np.float64(0.987487620719972)) ('f_sigv_LRG', np.float64(0.9985946079230307)) ('log_Mcent_LRG', np.float64(12.793370363339623)) ('sigma_M_LRG', np.float64(0.48513750524932825))
[Interation 24] ('M_0_LRG', np.float64(12.636242755705076)) ('M_1_LRG', np.float64(13.718148325170237)) ('alpha_LRG', np.float64(0.9612300548937567)) ('f_sigv_LRG', np.float64(0.9889701530039968)) ('log_Mcent_LRG', np.float64(12.827222044850249)) ('sigma_M_LRG', np.float64(0.5002998975509285))
[Interation 24] ('M_0_LRG', np.float64(12.656370069539197)) ('M_1_LRG', np.float64(13.671000874347989)) ('alpha_LRG', np.float64(0.9665505165648106)) ('f_sigv_LRG', np.float64(0.9809087253055458)) ('log_Mcent_LRG', np.float64(12.791184902450299)) ('sigma_M_LRG', np.float64(0.4855084865155164))
[Interation 24] ('M_0_LRG', np.float64(12.654340062699573)) ('M_1_LRG', np.float64(13.69149669130492)) ('alpha_LRG', np.float64(0.9465754879323571)) ('f_sigv_LRG', np.float64(1.0038701618797858)) ('log_Mcent_LRG', np.float64(12.798483410425586)) ('sigma_M_LRG', np.float64(0.4838518315009133))
[Interation 24] ('M_0_LRG', np.float64(12.681204311524716)) ('M_1_LRG', np.float64(13.678271412165099)) ('alpha_LRG', np.float64(0.9352668568628898)) ('f_sigv_LRG', np.float64(0.9820867899313592)) ('log_Mcent_LRG', np.float64(12.795320352556262)) ('sigma_M_LRG', np.float64(0.4870065264104802))
[Interation 24] ('M_0_LRG', np.float64(12.640424990030096)) ('M_1_LRG', np.float64(13.675749118261903)) ('alpha_LRG', np.float64(0.969743607488858)) ('f_sigv_LRG', np.float64(1.002475758630513)) ('log_Mcent_LRG', np.float64(12.78122106410815)) ('sigma_M_LRG', np.float64(0.4710676653861572))
[Interation 24] ('M_0_LRG', np.float64(12.666495257225932)) ('M_1_LRG', np.float64(13.662366193066784)) ('alpha_LRG', np.float64(0.9576013591584409)) ('f_sigv_LRG', np.float64(0.9784851852180542)) ('log_Mcent_LRG', np.float64(12.772026346211216)) ('sigma_M_LRG', np.float64(0.4624468708605874))
[Interation 24] ('M_0_LRG', np.float64(12.655374743057024)) ('M_1_LRG', np.float64(13.683519311681744)) ('alpha_LRG', np.float64(0.9354097358638958)) ('f_sigv_LRG', np.float64(0.9960985806579471)) ('log_Mcent_LRG', np.float64(12.795209420615516)) ('sigma_M_LRG', np.float64(0.48735445797655125))
[Interation 24] ('M_0_LRG', np.float64(12.688725953863553)) ('M_1_LRG', np.float64(13.722028641777163)) ('alpha_LRG', np.float64(0.929665859563033)) ('f_sigv_LRG', np.float64(0.9635301604960781)) ('log_Mcent_LRG', np.float64(12.848486527166749)) ('sigma_M_LRG', np.float64(0.5253457205535952))
[Interation 24] chi2=1014.1877781813884
[Interation 24] chi2=1024.1699300383314
[Interation 24] chi2=1002.7615917039083
[Interation 24] chi2=1061.958026242127
[Interation 24] chi2=1024.6331150614635
[Interation 24] chi2=1100.7638649765777
[Interation 24] chi2=1024.1096947436624
[Interation 24] chi2=1097.7149330570944
[Interation 24] chi2=1073.807421437705
[Interation 24] chi2=1011.0718310571746
[Interation 24] chi2=951.2345730638079
[Interation 24] chi2=982.5410031107127
[Interation 25] ('M_0_LRG', np.float64(12.683165300850666)) ('M_1_LRG', np.float64(13.693389506233093)) ('alpha_LRG', np.float64(0.9322485335891117)) ('f_sigv_LRG', np.float64(0.9841214010550212)) ('log_Mcent_LRG', np.float64(12.805187587907236)) ('sigma_M_LRG', np.float64(0.48909995758116537))
[Interation 25] ('M_0_LRG', np.float64(12.62501185435916)) ('M_1_LRG', np.float64(13.681247866829185)) ('alpha_LRG', np.float64(0.9893942549680099)) ('f_sigv_LRG', np.float64(0.9848777208234994)) ('log_Mcent_LRG', np.float64(12.792062094557934)) ('sigma_M_LRG', np.float64(0.4833404462383323))
[Interation 25] ('M_0_LRG', np.float64(12.632292829962958)) ('M_1_LRG', np.float64(13.692136697324822)) ('alpha_LRG', np.float64(0.9782119389470109)) ('f_sigv_LRG', np.float64(0.9907053750465783)) ('log_Mcent_LRG', np.float64(12.801622726675514)) ('sigma_M_LRG', np.float64(0.4856997964582367))
[Interation 25] ('M_0_LRG', np.float64(12.633721939720179)) ('M_1_LRG', np.float64(13.705063651290125)) ('alpha_LRG', np.float64(0.9631515689728596)) ('f_sigv_LRG', np.float64(0.9899735596526748)) ('log_Mcent_LRG', np.float64(12.818581525399479)) ('sigma_M_LRG', np.float64(0.5006591105942123))
[Interation 25] chi2=950.1444642681103
[Interation 25] chi2=1018.1100238232979
[Interation 25] chi2=1016.3047497471114
[Interation 25] chi2=1045.6946528194994
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_14.npy
Set number of threads to 32
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.650560233755755)) ('M_1_LRG', np.float64(13.71877119254904)) ('alpha_LRG', np.float64(0.943998353729073)) ('f_sigv_LRG', np.float64(0.996335981458283)) ('log_Mcent_LRG', np.float64(12.834677097955625)) ('sigma_M_LRG', np.float64(0.5174899467192009))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.34485816955566406
Start satellite assignement
Satellite assignement done 0.07713127136230469
LRG mock catalogue done 0.15452909469604492
589493 central galaxies, 93265 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.686922550201416
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_14.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:19
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:19
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:19
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Load correlation matrix for LRG at z0.95 ...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:25
Load correlation matrix for LRG at z0.95 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:25
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Load smu measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Load correlation matrix for LRG at z0.95 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.518366407740013)) ('M_1_LRG', np.float64(13.702550523082953)) ('alpha_LRG', np.float64(0.8990748555763011)) ('f_sigv_LRG', np.float64(1.0097859175819748)) ('log_Mcent_LRG', np.float64(12.789022190579802)) ('sigma_M_LRG', np.float64(0.45554791296437397))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.493821413116827)) ('M_1_LRG', np.float64(13.670498694456295)) ('alpha_LRG', np.float64(1.1568095417029405)) ('f_sigv_LRG', np.float64(0.9724107841852613)) ('log_Mcent_LRG', np.float64(12.828036233615682)) ('sigma_M_LRG', np.float64(0.47877181312795347))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.499690876702093)) ('M_1_LRG', np.float64(13.662316080432987)) ('alpha_LRG', np.float64(0.9644440910610761)) ('f_sigv_LRG', np.float64(1.0179411020077016)) ('log_Mcent_LRG', np.float64(12.723626142108944)) ('sigma_M_LRG', np.float64(0.442460534938355))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.478720026856664)) ('M_1_LRG', np.float64(13.634838175259409)) ('alpha_LRG', np.float64(1.0657666830382904)) ('f_sigv_LRG', np.float64(1.0179629866961544)) ('log_Mcent_LRG', np.float64(12.811307191860761)) ('sigma_M_LRG', np.float64(0.5206902586461414))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.406762911560339)) ('M_1_LRG', np.float64(13.534026226898751)) ('alpha_LRG', np.float64(1.2251434724881405)) ('f_sigv_LRG', np.float64(0.8945749252135773)) ('log_Mcent_LRG', np.float64(12.714892033940682)) ('sigma_M_LRG', np.float64(0.40531214618169126))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.57032257447205)) ('M_1_LRG', np.float64(13.468967635435236)) ('alpha_LRG', np.float64(0.9501913096439771)) ('f_sigv_LRG', np.float64(1.1324849643862374)) ('log_Mcent_LRG', np.float64(12.66770318147616)) ('sigma_M_LRG', np.float64(0.43225892907217434))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.468059925813794)) ('M_1_LRG', np.float64(13.571268962314612)) ('alpha_LRG', np.float64(1.1482990910899555)) ('f_sigv_LRG', np.float64(0.9604408556520795)) ('log_Mcent_LRG', np.float64(12.60477593781094)) ('sigma_M_LRG', np.float64(0.3133988002382919))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.348049832670156)) ('M_1_LRG', np.float64(13.585758777450597)) ('alpha_LRG', np.float64(1.0694853402367848)) ('f_sigv_LRG', np.float64(0.9410301478083105)) ('log_Mcent_LRG', np.float64(12.701596545542976)) ('sigma_M_LRG', np.float64(0.43418046895877693))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.533240121791719)) ('M_1_LRG', np.float64(13.793767524397792)) ('alpha_LRG', np.float64(1.0493425653995565)) ('f_sigv_LRG', np.float64(1.039528406807807)) ('log_Mcent_LRG', np.float64(12.791114218366397)) ('sigma_M_LRG', np.float64(0.44035075399508844))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.574781799397874)) ('M_1_LRG', np.float64(13.698662520785165)) ('alpha_LRG', np.float64(0.969910289632836)) ('f_sigv_LRG', np.float64(1.008542882765268)) ('log_Mcent_LRG', np.float64(12.72948120794527)) ('sigma_M_LRG', np.float64(0.3967458956575627))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.403262894052277)) ('M_1_LRG', np.float64(13.568508228643873)) ('alpha_LRG', np.float64(1.1960049641757453)) ('f_sigv_LRG', np.float64(0.9758713140461497)) ('log_Mcent_LRG', np.float64(12.737824093491124)) ('sigma_M_LRG', np.float64(0.48959815829413467))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.519520937722813)) ('M_1_LRG', np.float64(13.679323561642851)) ('alpha_LRG', np.float64(0.871673858135158)) ('f_sigv_LRG', np.float64(1.0064249661807458)) ('log_Mcent_LRG', np.float64(12.711893468313752)) ('sigma_M_LRG', np.float64(0.45688633492785435))
[Interation 25] chi2=1568.8722660689323
[Interation 25] chi2=1530.092469350228
[Interation 25] chi2=1154.3362412991562
[Interation 25] chi2=1141.9393512085521
[Interation 25] chi2=2751.5703784746615
[Interation 25] chi2=1910.545964000243
[Interation 25] chi2=1219.3667587002606
[Interation 25] chi2=1235.4456316291526
[Interation 25] chi2=1414.2041861110765
[Interation 25] chi2=1170.1785242418803
[Interation 25] chi2=1483.1507242964044
[Interation 25] chi2=1452.3751378540717
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 26] ('M_0_LRG', np.float64(12.674710064586538)) ('M_1_LRG', np.float64(13.611105384996677)) ('alpha_LRG', np.float64(0.9872496804197457)) ('f_sigv_LRG', np.float64(0.9746216467051839)) ('log_Mcent_LRG', np.float64(12.777657038612082)) ('sigma_M_LRG', np.float64(0.47643952369839104))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 26] ('M_0_LRG', np.float64(12.545983887607068)) ('M_1_LRG', np.float64(13.81193455498991)) ('alpha_LRG', np.float64(1.02415385105346)) ('f_sigv_LRG', np.float64(1.0305864679064456)) ('log_Mcent_LRG', np.float64(12.904142865918432)) ('sigma_M_LRG', np.float64(0.5430655118483058))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 26] ('M_0_LRG', np.float64(12.61401413915841)) ('M_1_LRG', np.float64(13.691586917813353)) ('alpha_LRG', np.float64(0.9704298330420221)) ('f_sigv_LRG', np.float64(0.9468113615659535)) ('log_Mcent_LRG', np.float64(12.812504902218805)) ('sigma_M_LRG', np.float64(0.5102695247623807))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 26] ('M_0_LRG', np.float64(12.464464499691415)) ('M_1_LRG', np.float64(13.69904046808552)) ('alpha_LRG', np.float64(1.0722616693343294)) ('f_sigv_LRG', np.float64(1.0123460202822372)) ('log_Mcent_LRG', np.float64(12.778275947792183)) ('sigma_M_LRG', np.float64(0.44333673932893547))
[Interation 26] chi2=1043.0351495092932
[Interation 26] chi2=1085.0870950824296
[Interation 26] chi2=1087.7938083476743
[Interation 26] chi2=1010.5777668495617
[Interation 26] ('M_0_LRG', np.float64(12.550860413620786)) ('M_1_LRG', np.float64(13.747086854255965)) ('alpha_LRG', np.float64(1.024208779390699)) ('f_sigv_LRG', np.float64(0.9933545193134576)) ('log_Mcent_LRG', np.float64(12.845464261858483)) ('sigma_M_LRG', np.float64(0.512894542543716))
[Interation 26] ('M_0_LRG', np.float64(12.548554503707752)) ('M_1_LRG', np.float64(13.75962577999625)) ('alpha_LRG', np.float64(1.0006491327233673)) ('f_sigv_LRG', np.float64(1.0035595931154184)) ('log_Mcent_LRG', np.float64(12.865083990767323)) ('sigma_M_LRG', np.float64(0.5286582829682781))
[Interation 26] ('M_0_LRG', np.float64(12.558762076614128)) ('M_1_LRG', np.float64(13.746924168888311)) ('alpha_LRG', np.float64(1.0227726238266037)) ('f_sigv_LRG', np.float64(0.9809128177243248)) ('log_Mcent_LRG', np.float64(12.871326826530487)) ('sigma_M_LRG', np.float64(0.5423460742316114))
[Interation 26] ('M_0_LRG', np.float64(12.5915630203742)) ('M_1_LRG', np.float64(13.715199098587279)) ('alpha_LRG', np.float64(0.978141947287072)) ('f_sigv_LRG', np.float64(0.991000157886389)) ('log_Mcent_LRG', np.float64(12.81410073142377)) ('sigma_M_LRG', np.float64(0.4975071657661553))
[Interation 26] ('M_0_LRG', np.float64(12.542120267089292)) ('M_1_LRG', np.float64(13.77337144204255)) ('alpha_LRG', np.float64(1.0376945625976914)) ('f_sigv_LRG', np.float64(0.9662460997681827)) ('log_Mcent_LRG', np.float64(12.914934387559812)) ('sigma_M_LRG', np.float64(0.5813612290849784))
[Interation 26] ('M_0_LRG', np.float64(12.581476045995757)) ('M_1_LRG', np.float64(13.733394003160255)) ('alpha_LRG', np.float64(0.9782901668257068)) ('f_sigv_LRG', np.float64(0.9936318310940289)) ('log_Mcent_LRG', np.float64(12.836880359666674)) ('sigma_M_LRG', np.float64(0.5119342531537344))
[Interation 26] ('M_0_LRG', np.float64(12.575798037081935)) ('M_1_LRG', np.float64(13.753146423812323)) ('alpha_LRG', np.float64(0.9930688013166048)) ('f_sigv_LRG', np.float64(0.9865457592353714)) ('log_Mcent_LRG', np.float64(12.870303268745674)) ('sigma_M_LRG', np.float64(0.5394680011921725))
[Interation 26] ('M_0_LRG', np.float64(12.521160500069795)) ('M_1_LRG', np.float64(13.783492156153526)) ('alpha_LRG', np.float64(1.0200149712231095)) ('f_sigv_LRG', np.float64(0.9882036264554276)) ('log_Mcent_LRG', np.float64(12.91019030633145)) ('sigma_M_LRG', np.float64(0.5687102321338059))
[Interation 26] ('M_0_LRG', np.float64(12.612968565955045)) ('M_1_LRG', np.float64(13.703360247368417)) ('alpha_LRG', np.float64(0.9683803444215175)) ('f_sigv_LRG', np.float64(0.998938764018057)) ('log_Mcent_LRG', np.float64(12.807023725946438)) ('sigma_M_LRG', np.float64(0.489276487161806))
[Interation 26] ('M_0_LRG', np.float64(12.699122391928688)) ('M_1_LRG', np.float64(13.678985522793287)) ('alpha_LRG', np.float64(0.9271206735815035)) ('f_sigv_LRG', np.float64(0.9959017489240124)) ('log_Mcent_LRG', np.float64(12.812920631737834)) ('sigma_M_LRG', np.float64(0.4993596707416945))
[Interation 26] ('M_0_LRG', np.float64(12.717934314959702)) ('M_1_LRG', np.float64(13.656121662217613)) ('alpha_LRG', np.float64(0.94263419865931)) ('f_sigv_LRG', np.float64(0.9929675559517342)) ('log_Mcent_LRG', np.float64(12.778613873057347)) ('sigma_M_LRG', np.float64(0.46762482251935816))
[Interation 26] ('M_0_LRG', np.float64(12.551549071406296)) ('M_1_LRG', np.float64(13.727102780486842)) ('alpha_LRG', np.float64(1.0097581064495669)) ('f_sigv_LRG', np.float64(0.9858724534192553)) ('log_Mcent_LRG', np.float64(12.847392636199638)) ('sigma_M_LRG', np.float64(0.5273259696826981))
[Interation 26] chi2=966.698768900898
[Interation 26] chi2=1005.0430147201934
[Interation 26] chi2=1032.534084910366
[Interation 26] chi2=1009.9162553656562
[Interation 26] chi2=1034.779407200824
[Interation 26] chi2=966.3544011249897
[Interation 26] chi2=1114.655232176993
[Interation 26] chi2=1124.2714457327347
[Interation 26] chi2=1039.9899289383397
[Interation 26] chi2=1010.2476707499732
[Interation 26] chi2=1060.107027852712
[Interation 26] chi2=1111.398299109334
[Interation 27] ('M_0_LRG', np.float64(12.505713770483137)) ('M_1_LRG', np.float64(13.749285402475198)) ('alpha_LRG', np.float64(1.0104187427763915)) ('f_sigv_LRG', np.float64(1.0188997672123905)) ('log_Mcent_LRG', np.float64(12.828542421598566)) ('sigma_M_LRG', np.float64(0.4935532850220768))
[Interation 27] ('M_0_LRG', np.float64(12.550880514121287)) ('M_1_LRG', np.float64(13.729816343881197)) ('alpha_LRG', np.float64(1.0065858180875453)) ('f_sigv_LRG', np.float64(0.9949758806875918)) ('log_Mcent_LRG', np.float64(12.84601928922873)) ('sigma_M_LRG', np.float64(0.5208802409094284))
[Interation 27] ('M_0_LRG', np.float64(12.596350525424828)) ('M_1_LRG', np.float64(13.708363228273415)) ('alpha_LRG', np.float64(1.0049694878671402)) ('f_sigv_LRG', np.float64(0.981350142668422)) ('log_Mcent_LRG', np.float64(12.819665114746506)) ('sigma_M_LRG', np.float64(0.4969356299611315))
[Interation 27] ('M_0_LRG', np.float64(12.56989791500839)) ('M_1_LRG', np.float64(13.685235607713581)) ('alpha_LRG', np.float64(1.0223559756431133)) ('f_sigv_LRG', np.float64(0.9884242393923315)) ('log_Mcent_LRG', np.float64(12.792116686438595)) ('sigma_M_LRG', np.float64(0.4794458647293444))
[Interation 27] chi2=1059.512555232114
[Interation 27] chi2=1096.5531970862623
[Interation 27] chi2=1042.0381554870469
[Interation 27] chi2=963.3106871128053
[Interation 27] ('M_0_LRG', np.float64(12.647981707415255)) ('M_1_LRG', np.float64(13.722438742572017)) ('alpha_LRG', np.float64(0.9558963125785653)) ('f_sigv_LRG', np.float64(0.9974401814052841)) ('log_Mcent_LRG', np.float64(12.838701164550766)) ('sigma_M_LRG', np.float64(0.5147467424011754))
[Interation 27] ('M_0_LRG', np.float64(12.490877819839762)) ('M_1_LRG', np.float64(13.760145973275097)) ('alpha_LRG', np.float64(1.0514826678465823)) ('f_sigv_LRG', np.float64(0.9839597144067461)) ('log_Mcent_LRG', np.float64(12.861644000504967)) ('sigma_M_LRG', np.float64(0.5262385408149829))
[Interation 27] ('M_0_LRG', np.float64(12.638308789756184)) ('M_1_LRG', np.float64(13.709143258030739)) ('alpha_LRG', np.float64(0.9714433240774932)) ('f_sigv_LRG', np.float64(0.984071458211449)) ('log_Mcent_LRG', np.float64(12.830417476430696)) ('sigma_M_LRG', np.float64(0.5124343327476487))
[Interation 27] ('M_0_LRG', np.float64(12.519360318157032)) ('M_1_LRG', np.float64(13.741882727692868)) ('alpha_LRG', np.float64(1.0317844916262389)) ('f_sigv_LRG', np.float64(1.0002476736840091)) ('log_Mcent_LRG', np.float64(12.836858381251915)) ('sigma_M_LRG', np.float64(0.5055669884315103))
[Interation 27] ('M_0_LRG', np.float64(12.509689821512662)) ('M_1_LRG', np.float64(13.766639361289915)) ('alpha_LRG', np.float64(1.0309647986467325)) ('f_sigv_LRG', np.float64(0.9997248756614219)) ('log_Mcent_LRG', np.float64(12.86768296807462)) ('sigma_M_LRG', np.float64(0.5319903968618105))
[Interation 27] ('M_0_LRG', np.float64(12.53083001781888)) ('M_1_LRG', np.float64(13.748828017215388)) ('alpha_LRG', np.float64(1.0159877208833843)) ('f_sigv_LRG', np.float64(0.9994884744708122)) ('log_Mcent_LRG', np.float64(12.847295857804317)) ('sigma_M_LRG', np.float64(0.5152420892618943))
[Interation 27] ('M_0_LRG', np.float64(12.580293936699556)) ('M_1_LRG', np.float64(13.74446802558528)) ('alpha_LRG', np.float64(0.991196765837193)) ('f_sigv_LRG', np.float64(0.9977474492249853)) ('log_Mcent_LRG', np.float64(12.851553757147684)) ('sigma_M_LRG', np.float64(0.5206544783580905))
[Interation 27] ('M_0_LRG', np.float64(12.515653497325436)) ('M_1_LRG', np.float64(13.74812633060359)) ('alpha_LRG', np.float64(1.026196319751353)) ('f_sigv_LRG', np.float64(1.0030031083958255)) ('log_Mcent_LRG', np.float64(12.850305686446276)) ('sigma_M_LRG', np.float64(0.5191739455625777))
[Interation 27] ('M_0_LRG', np.float64(12.62343851346064)) ('M_1_LRG', np.float64(13.736533173784995)) ('alpha_LRG', np.float64(0.9752220617723231)) ('f_sigv_LRG', np.float64(0.9925427319682505)) ('log_Mcent_LRG', np.float64(12.85199338027268)) ('sigma_M_LRG', np.float64(0.5229990479729167))
[Interation 27] ('M_0_LRG', np.float64(12.619532365208853)) ('M_1_LRG', np.float64(13.739384696805363)) ('alpha_LRG', np.float64(0.9756950400210049)) ('f_sigv_LRG', np.float64(0.9980868519135587)) ('log_Mcent_LRG', np.float64(12.853815067273809)) ('sigma_M_LRG', np.float64(0.522228257594387))
[Interation 27] ('M_0_LRG', np.float64(12.691544739089743)) ('M_1_LRG', np.float64(13.696871466482618)) ('alpha_LRG', np.float64(0.9330466828530757)) ('f_sigv_LRG', np.float64(0.9918034099532954)) ('log_Mcent_LRG', np.float64(12.814256019887257)) ('sigma_M_LRG', np.float64(0.49815436968688853))
[Interation 27] ('M_0_LRG', np.float64(12.68825360146039)) ('M_1_LRG', np.float64(13.735191852043132)) ('alpha_LRG', np.float64(0.9297233776071683)) ('f_sigv_LRG', np.float64(0.9960394068958837)) ('log_Mcent_LRG', np.float64(12.851062135947807)) ('sigma_M_LRG', np.float64(0.5213368477765916))
[Interation 27] chi2=971.4369850960784
[Interation 27] chi2=1043.7644182722636
[Interation 27] chi2=1107.0989173270618
[Interation 27] chi2=1030.2101794727714
[Interation 27] chi2=1003.2407334252792
[Interation 27] chi2=944.5121922963081
[Interation 27] chi2=1072.0997654059504
[Interation 27] chi2=1022.0960558717364
[Interation 27] chi2=1074.735636253178
[Interation 27] chi2=1080.9403284603384
[Interation 27] chi2=1039.8682940856752
[Interation 27] chi2=1040.5911156789773
[Interation 28] ('M_0_LRG', np.float64(12.626298541280592)) ('M_1_LRG', np.float64(13.746467763464453)) ('alpha_LRG', np.float64(0.9592399533285938)) ('f_sigv_LRG', np.float64(0.999867660064439)) ('log_Mcent_LRG', np.float64(12.860460112395833)) ('sigma_M_LRG', np.float64(0.5282053708387533))
[Interation 28] ('M_0_LRG', np.float64(12.627380198113112)) ('M_1_LRG', np.float64(13.726139206280882)) ('alpha_LRG', np.float64(0.9625573607637288)) ('f_sigv_LRG', np.float64(1.0028960611118116)) ('log_Mcent_LRG', np.float64(12.841060458063755)) ('sigma_M_LRG', np.float64(0.5137484063739075))
[Interation 28] ('M_0_LRG', np.float64(12.536365822621176)) ('M_1_LRG', np.float64(13.759127589399885)) ('alpha_LRG', np.float64(1.01355036250495)) ('f_sigv_LRG', np.float64(0.9953678501100912)) ('log_Mcent_LRG', np.float64(12.858967499699089)) ('sigma_M_LRG', np.float64(0.5261412302885154))
[Interation 28] ('M_0_LRG', np.float64(12.587067214757042)) ('M_1_LRG', np.float64(13.73754558603962)) ('alpha_LRG', np.float64(0.985276748322474)) ('f_sigv_LRG', np.float64(0.9950870395163166)) ('log_Mcent_LRG', np.float64(12.846539738805026)) ('sigma_M_LRG', np.float64(0.519834083897876))
[Interation 28] chi2=1057.3718148438777
[Interation 28] chi2=940.5032320033574
[Interation 28] chi2=945.5145796974366
[Interation 28] chi2=1044.37956553007
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_15.npy
Set number of threads to 32
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.60813711068808)) ('M_1_LRG', np.float64(13.717535203889915)) ('alpha_LRG', np.float64(0.9811646945144711)) ('f_sigv_LRG', np.float64(0.9913573194051938)) ('log_Mcent_LRG', np.float64(12.826226359398104)) ('sigma_M_LRG', np.float64(0.5034127497694373))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.34320592880249023
Start satellite assignement
Satellite assignement done 0.07901906967163086
LRG mock catalogue done 0.15584182739257812
589155 central galaxies, 95772 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6813788414001465
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_15.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:19
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Load rppi measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Load smu measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load smu measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:22
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Load correlation matrix for LRG at z0.95 ...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.602187112907938)) ('M_1_LRG', np.float64(13.775054262844337)) ('alpha_LRG', np.float64(0.9838883807818666)) ('f_sigv_LRG', np.float64(0.9752289865303289)) ('log_Mcent_LRG', np.float64(12.905368889307647)) ('sigma_M_LRG', np.float64(0.5750644986041675))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.621659632257446)) ('M_1_LRG', np.float64(13.728536036815123)) ('alpha_LRG', np.float64(0.9873739128691552)) ('f_sigv_LRG', np.float64(0.9817497836911389)) ('log_Mcent_LRG', np.float64(12.852845486764643)) ('sigma_M_LRG', np.float64(0.5276214646248978))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.62973164138099)) ('M_1_LRG', np.float64(13.707254330529294)) ('alpha_LRG', np.float64(0.9482348450263303)) ('f_sigv_LRG', np.float64(0.9760429843205843)) ('log_Mcent_LRG', np.float64(12.814774545569495)) ('sigma_M_LRG', np.float64(0.49285766589994534))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.576739410034088)) ('M_1_LRG', np.float64(13.737370642110042)) ('alpha_LRG', np.float64(0.9683749651113588)) ('f_sigv_LRG', np.float64(1.0212987803329405)) ('log_Mcent_LRG', np.float64(12.864627956982726)) ('sigma_M_LRG', np.float64(0.5340883421335139))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.436706581222568)) ('M_1_LRG', np.float64(13.773761264774462)) ('alpha_LRG', np.float64(1.0905151478023163)) ('f_sigv_LRG', np.float64(0.9871562001234576)) ('log_Mcent_LRG', np.float64(12.869953002912668)) ('sigma_M_LRG', np.float64(0.5342509821965381))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.576781184165014)) ('M_1_LRG', np.float64(13.67934694488916)) ('alpha_LRG', np.float64(1.0360056957187505)) ('f_sigv_LRG', np.float64(0.9760794662591928)) ('log_Mcent_LRG', np.float64(12.789368033879493)) ('sigma_M_LRG', np.float64(0.4709821265699492))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.611928763961123)) ('M_1_LRG', np.float64(13.759796266628431)) ('alpha_LRG', np.float64(0.9691618372893567)) ('f_sigv_LRG', np.float64(0.9749281564966507)) ('log_Mcent_LRG', np.float64(12.886851028037276)) ('sigma_M_LRG', np.float64(0.5616693873152263))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.595094173275653)) ('M_1_LRG', np.float64(13.684049081857683)) ('alpha_LRG', np.float64(1.009766046646665)) ('f_sigv_LRG', np.float64(0.9825359772658857)) ('log_Mcent_LRG', np.float64(12.789984431468595)) ('sigma_M_LRG', np.float64(0.47327218910819707))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.635017632630854)) ('M_1_LRG', np.float64(13.663776688293613)) ('alpha_LRG', np.float64(0.94853538064956)) ('f_sigv_LRG', np.float64(1.0043027444605974)) ('log_Mcent_LRG', np.float64(12.771145511494389)) ('sigma_M_LRG', np.float64(0.4678256805545157))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.588086163042949)) ('M_1_LRG', np.float64(13.736906890813163)) ('alpha_LRG', np.float64(1.016004234254335)) ('f_sigv_LRG', np.float64(0.9827122701252361)) ('log_Mcent_LRG', np.float64(12.845991956912721)) ('sigma_M_LRG', np.float64(0.5155502751780253))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.572005990425613)) ('M_1_LRG', np.float64(13.713601151854672)) ('alpha_LRG', np.float64(1.0060049627295709)) ('f_sigv_LRG', np.float64(0.9614139391308961)) ('log_Mcent_LRG', np.float64(12.831087929632968)) ('sigma_M_LRG', np.float64(0.5197516324369886))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.51033628324586)) ('M_1_LRG', np.float64(13.61653078424655)) ('alpha_LRG', np.float64(1.038587572952534)) ('f_sigv_LRG', np.float64(0.9958768525543161)) ('log_Mcent_LRG', np.float64(12.673785000856519)) ('sigma_M_LRG', np.float64(0.3798580546924353))
[Interation 28] chi2=990.0087905010919
[Interation 28] chi2=1117.5640977151133
[Interation 28] chi2=1024.3721224230085
[Interation 28] chi2=919.7108646322591
[Interation 28] chi2=1034.8761600828443
[Interation 28] chi2=988.6309688251151
[Interation 28] chi2=914.3818381755514
[Interation 28] chi2=1020.3980116720558
[Interation 28] chi2=968.4957103638693
[Interation 28] chi2=990.1188752076453
[Interation 28] chi2=951.450220967271
[Interation 28] chi2=937.1414351507359
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 29] ('M_0_LRG', np.float64(12.508119574021915)) ('M_1_LRG', np.float64(13.708369517388066)) ('alpha_LRG', np.float64(1.0562436525377197)) ('f_sigv_LRG', np.float64(0.9696910807024254)) ('log_Mcent_LRG', np.float64(12.795905947783538)) ('sigma_M_LRG', np.float64(0.48367934487703296))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 29] ('M_0_LRG', np.float64(12.583326004949816)) ('M_1_LRG', np.float64(13.669828624412055)) ('alpha_LRG', np.float64(1.0118950200970358)) ('f_sigv_LRG', np.float64(0.9615192288929592)) ('log_Mcent_LRG', np.float64(12.799854725522444)) ('sigma_M_LRG', np.float64(0.5026280853353614))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 29] ('M_0_LRG', np.float64(12.530977053088138)) ('M_1_LRG', np.float64(13.68933130683323)) ('alpha_LRG', np.float64(1.0225620154389754)) ('f_sigv_LRG', np.float64(0.980944345482638)) ('log_Mcent_LRG', np.float64(12.789901648578342)) ('sigma_M_LRG', np.float64(0.4818987957452864))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 29] ('M_0_LRG', np.float64(12.487730919657636)) ('M_1_LRG', np.float64(13.769815001301836)) ('alpha_LRG', np.float64(1.046433186230457)) ('f_sigv_LRG', np.float64(1.0118519827562584)) ('log_Mcent_LRG', np.float64(12.848401789478125)) ('sigma_M_LRG', np.float64(0.5056653376292185))
[Interation 29] chi2=906.3331024477873
[Interation 29] chi2=940.0079818793286
[Interation 29] chi2=960.9565705833573
[Interation 29] chi2=959.4105080290819
[Interation 29] ('M_0_LRG', np.float64(12.571022547569436)) ('M_1_LRG', np.float64(13.736089241692374)) ('alpha_LRG', np.float64(1.0067506813024176)) ('f_sigv_LRG', np.float64(0.9962651830147137)) ('log_Mcent_LRG', np.float64(12.845542443966483)) ('sigma_M_LRG', np.float64(0.5165070498923274))
[Interation 29] ('M_0_LRG', np.float64(12.576497905373774)) ('M_1_LRG', np.float64(13.74194345463705)) ('alpha_LRG', np.float64(0.9968520179263252)) ('f_sigv_LRG', np.float64(1.0002118471570258)) ('log_Mcent_LRG', np.float64(12.837477286049856)) ('sigma_M_LRG', np.float64(0.5067886753944073))
[Interation 29] ('M_0_LRG', np.float64(12.561402087417497)) ('M_1_LRG', np.float64(13.762807311729523)) ('alpha_LRG', np.float64(1.0227512232273797)) ('f_sigv_LRG', np.float64(0.9928191032541093)) ('log_Mcent_LRG', np.float64(12.868413045418661)) ('sigma_M_LRG', np.float64(0.5319999905398549))
[Interation 29] ('M_0_LRG', np.float64(12.59816072583897)) ('M_1_LRG', np.float64(13.724309346782547)) ('alpha_LRG', np.float64(0.9980754156663437)) ('f_sigv_LRG', np.float64(0.9913206615749623)) ('log_Mcent_LRG', np.float64(12.839571258725451)) ('sigma_M_LRG', np.float64(0.5140763600948199))
[Interation 29] ('M_0_LRG', np.float64(12.512134182375807)) ('M_1_LRG', np.float64(13.78368893363699)) ('alpha_LRG', np.float64(1.032405550225184)) ('f_sigv_LRG', np.float64(1.0024830510307436)) ('log_Mcent_LRG', np.float64(12.880791268638713)) ('sigma_M_LRG', np.float64(0.5419288726552158))
[Interation 29] ('M_0_LRG', np.float64(12.52036096535975)) ('M_1_LRG', np.float64(13.774976736185733)) ('alpha_LRG', np.float64(1.0189485616925031)) ('f_sigv_LRG', np.float64(1.0027246517613846)) ('log_Mcent_LRG', np.float64(12.869955951330432)) ('sigma_M_LRG', np.float64(0.5337432008084626))
[Interation 29] ('M_0_LRG', np.float64(12.580145303738782)) ('M_1_LRG', np.float64(13.74641928513971)) ('alpha_LRG', np.float64(1.0088386302255143)) ('f_sigv_LRG', np.float64(0.9855400707897871)) ('log_Mcent_LRG', np.float64(12.864219557960231)) ('sigma_M_LRG', np.float64(0.5348121871478305))
[Interation 29] ('M_0_LRG', np.float64(12.574908213175796)) ('M_1_LRG', np.float64(13.732811719074375)) ('alpha_LRG', np.float64(1.0124904618217072)) ('f_sigv_LRG', np.float64(0.9872909176004095)) ('log_Mcent_LRG', np.float64(12.839207879146972)) ('sigma_M_LRG', np.float64(0.5141070928991384))
[Interation 29] ('M_0_LRG', np.float64(12.565814814297095)) ('M_1_LRG', np.float64(13.719326585590064)) ('alpha_LRG', np.float64(1.028973152873478)) ('f_sigv_LRG', np.float64(0.9883455575310568)) ('log_Mcent_LRG', np.float64(12.832751767382202)) ('sigma_M_LRG', np.float64(0.508646108137523))
[Interation 29] ('M_0_LRG', np.float64(12.529580883930134)) ('M_1_LRG', np.float64(13.756765922002488)) ('alpha_LRG', np.float64(1.034618027828662)) ('f_sigv_LRG', np.float64(0.9916146769265246)) ('log_Mcent_LRG', np.float64(12.865379705392892)) ('sigma_M_LRG', np.float64(0.5332603927947621))
[Interation 29] ('M_0_LRG', np.float64(12.546534063920648)) ('M_1_LRG', np.float64(13.7471182443583)) ('alpha_LRG', np.float64(1.0058084797847762)) ('f_sigv_LRG', np.float64(0.9777143702630954)) ('log_Mcent_LRG', np.float64(12.85078690599691)) ('sigma_M_LRG', np.float64(0.5286752052282164))
[Interation 29] ('M_0_LRG', np.float64(12.596138756424965)) ('M_1_LRG', np.float64(13.755525863560184)) ('alpha_LRG', np.float64(0.9964568983544876)) ('f_sigv_LRG', np.float64(0.9907355856948817)) ('log_Mcent_LRG', np.float64(12.872740124909738)) ('sigma_M_LRG', np.float64(0.5390229283154163))
[Interation 29] chi2=1031.4163166031797
[Interation 29] chi2=1016.3889981623486
[Interation 29] chi2=983.4559384500166
[Interation 29] chi2=954.6914497413029
[Interation 29] chi2=988.0290378800692
[Interation 29] chi2=1061.910910163926
[Interation 29] chi2=962.9751723277844
[Interation 29] chi2=1068.5857438108405
[Interation 29] chi2=972.8163225529482
[Interation 29] chi2=992.8935804527293
[Interation 29] chi2=1053.0109083792113
[Interation 29] chi2=1027.7728317917604
[Interation 30] ('M_0_LRG', np.float64(12.592535782035972)) ('M_1_LRG', np.float64(13.738012927150153)) ('alpha_LRG', np.float64(1.0060424519604552)) ('f_sigv_LRG', np.float64(0.980244488073255)) ('log_Mcent_LRG', np.float64(12.858156465662587)) ('sigma_M_LRG', np.float64(0.5305019646477912))
[Interation 30] ('M_0_LRG', np.float64(12.57494665317406)) ('M_1_LRG', np.float64(13.716552601177327)) ('alpha_LRG', np.float64(1.0118528254461523)) ('f_sigv_LRG', np.float64(0.9904461674056255)) ('log_Mcent_LRG', np.float64(12.831219424149412)) ('sigma_M_LRG', np.float64(0.5113308097207797))
[Interation 30] ('M_0_LRG', np.float64(12.579345096010275)) ('M_1_LRG', np.float64(13.75938118004559)) ('alpha_LRG', np.float64(1.0084093736367061)) ('f_sigv_LRG', np.float64(0.9981733473620549)) ('log_Mcent_LRG', np.float64(12.863328203131497)) ('sigma_M_LRG', np.float64(0.5268800588025184))
[Interation 30] ('M_0_LRG', np.float64(12.588096421202355)) ('M_1_LRG', np.float64(13.756144146608884)) ('alpha_LRG', np.float64(1.0135640475072556)) ('f_sigv_LRG', np.float64(0.9832067743252861)) ('log_Mcent_LRG', np.float64(12.873599008157335)) ('sigma_M_LRG', np.float64(0.539108185975956))
[Interation 30] chi2=1059.3495882072314
[Interation 30] chi2=1011.2620507562804
[Interation 30] chi2=995.8950132983153
[Interation 30] chi2=1013.2429804119793
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_16.npy
Set number of threads to 32
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.58066796873428)) ('M_1_LRG', np.float64(13.747343135060449)) ('alpha_LRG', np.float64(1.0022223625433764)) ('f_sigv_LRG', np.float64(0.9884207371218047)) ('log_Mcent_LRG', np.float64(12.861837364806386)) ('sigma_M_LRG', np.float64(0.5317023485428227))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3430666923522949
Start satellite assignement
Satellite assignement done 0.07540369033813477
LRG mock catalogue done 0.14738988876342773
561897 central galaxies, 90100 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6738026142120361
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_16.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:18
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:18
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:19
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:21
Load smu measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load correlation matrix for LRG at z0.95 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Load smu measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:24
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:26
Load correlation matrix for LRG at z0.95 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:21
Load rppi measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.546843220267695)) ('M_1_LRG', np.float64(13.706532808367655)) ('alpha_LRG', np.float64(1.034851031889718)) ('f_sigv_LRG', np.float64(1.028653044184518)) ('log_Mcent_LRG', np.float64(12.695794944979383)) ('sigma_M_LRG', np.float64(0.34970471424562993))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.623960980289782)) ('M_1_LRG', np.float64(13.747352005360186)) ('alpha_LRG', np.float64(0.9703931083386105)) ('f_sigv_LRG', np.float64(1.1025842048939467)) ('log_Mcent_LRG', np.float64(12.77684669997535)) ('sigma_M_LRG', np.float64(0.41552915293240295))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.471957887848875)) ('M_1_LRG', np.float64(13.793061564740894)) ('alpha_LRG', np.float64(1.1555241119861506)) ('f_sigv_LRG', np.float64(1.0752366948356384)) ('log_Mcent_LRG', np.float64(12.803001351552593)) ('sigma_M_LRG', np.float64(0.39686895113050413))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.616833089901405)) ('M_1_LRG', np.float64(13.638473182926361)) ('alpha_LRG', np.float64(1.0230683134913838)) ('f_sigv_LRG', np.float64(0.9553141352095135)) ('log_Mcent_LRG', np.float64(12.680622882455802)) ('sigma_M_LRG', np.float64(0.37558369126763275))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.53595402536971)) ('M_1_LRG', np.float64(13.70661004716791)) ('alpha_LRG', np.float64(0.9738928494059385)) ('f_sigv_LRG', np.float64(0.9808050453564638)) ('log_Mcent_LRG', np.float64(12.816413330367128)) ('sigma_M_LRG', np.float64(0.4667994163125174))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.491755857001815)) ('M_1_LRG', np.float64(13.60361221117015)) ('alpha_LRG', np.float64(1.0172456936903544)) ('f_sigv_LRG', np.float64(0.9491885133625719)) ('log_Mcent_LRG', np.float64(12.834523440224858)) ('sigma_M_LRG', np.float64(0.6244507856950233))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.51123150320536)) ('M_1_LRG', np.float64(13.785353091997392)) ('alpha_LRG', np.float64(0.9194335739168877)) ('f_sigv_LRG', np.float64(0.9946095905732321)) ('log_Mcent_LRG', np.float64(12.808205466273654)) ('sigma_M_LRG', np.float64(0.46806150681433756))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.42813997032533)) ('M_1_LRG', np.float64(13.633553241117143)) ('alpha_LRG', np.float64(1.1937259339459148)) ('f_sigv_LRG', np.float64(0.9834732267155949)) ('log_Mcent_LRG', np.float64(12.767656768096227)) ('sigma_M_LRG', np.float64(0.49032580548214233))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.571285934490785)) ('M_1_LRG', np.float64(13.979318110451416)) ('alpha_LRG', np.float64(0.9905072291793444)) ('f_sigv_LRG', np.float64(1.04023762225979)) ('log_Mcent_LRG', np.float64(12.837220496650179)) ('sigma_M_LRG', np.float64(0.35883724508904463))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.71808626528372)) ('M_1_LRG', np.float64(13.588118061413061)) ('alpha_LRG', np.float64(0.8242104751551066)) ('f_sigv_LRG', np.float64(0.977367225369298)) ('log_Mcent_LRG', np.float64(12.703562214866688)) ('sigma_M_LRG', np.float64(0.47110303470806086))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.699081350093094)) ('M_1_LRG', np.float64(13.525027768999376)) ('alpha_LRG', np.float64(1.0095841679730708)) ('f_sigv_LRG', np.float64(1.0215204044475366)) ('log_Mcent_LRG', np.float64(12.68338614326677)) ('sigma_M_LRG', np.float64(0.403755153924075))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.560819509886732)) ('M_1_LRG', np.float64(13.554550679728603)) ('alpha_LRG', np.float64(0.9800555253941271)) ('f_sigv_LRG', np.float64(0.8124414433399504)) ('log_Mcent_LRG', np.float64(12.710598478283341)) ('sigma_M_LRG', np.float64(0.4740970546222305))
[Interation 30] chi2=1221.3918708626684
[Interation 30] chi2=1166.226573908995
[Interation 30] chi2=1585.317255203191
[Interation 30] chi2=1233.2018847547142
[Interation 30] chi2=3052.707707063573
[Interation 30] chi2=1449.1042315244445
[Interation 30] chi2=1997.1485311849797
[Interation 30] chi2=1140.6619571156382
[Interation 30] chi2=1207.3067257775401
[Interation 30] chi2=1431.615413584489
[Interation 30] chi2=1146.6235644390547
[Interation 30] chi2=1685.4330195360958
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 31] ('M_0_LRG', np.float64(12.487555301694687)) ('M_1_LRG', np.float64(13.607284097039829)) ('alpha_LRG', np.float64(0.9752120799425377)) ('f_sigv_LRG', np.float64(0.9667642480902984)) ('log_Mcent_LRG', np.float64(12.728275783921374)) ('sigma_M_LRG', np.float64(0.4698475639042681))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 31] ('M_0_LRG', np.float64(12.525714607515665)) ('M_1_LRG', np.float64(13.740040821379564)) ('alpha_LRG', np.float64(0.9820946345860577)) ('f_sigv_LRG', np.float64(1.050466733703318)) ('log_Mcent_LRG', np.float64(12.834673816960658)) ('sigma_M_LRG', np.float64(0.5385276959534587))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 31] ('M_0_LRG', np.float64(12.503093601130857)) ('M_1_LRG', np.float64(13.703403193132308)) ('alpha_LRG', np.float64(1.066043663649247)) ('f_sigv_LRG', np.float64(0.9816659863207047)) ('log_Mcent_LRG', np.float64(12.80305423752409)) ('sigma_M_LRG', np.float64(0.48250425509676553))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 31] ('M_0_LRG', np.float64(12.51557001242368)) ('M_1_LRG', np.float64(13.606601101088787)) ('alpha_LRG', np.float64(1.0457684637575055)) ('f_sigv_LRG', np.float64(1.0566832641062827)) ('log_Mcent_LRG', np.float64(12.697740051002038)) ('sigma_M_LRG', np.float64(0.3654670624360173))
[Interation 31] chi2=1229.8228844997222
[Interation 31] chi2=1183.114303070045
[Interation 31] chi2=1006.3398566381214
[Interation 31] chi2=1132.5384761536409
[Interation 31] ('M_0_LRG', np.float64(12.547195540571847)) ('M_1_LRG', np.float64(13.700324146754683)) ('alpha_LRG', np.float64(1.0596144856076173)) ('f_sigv_LRG', np.float64(0.9880677323675373)) ('log_Mcent_LRG', np.float64(12.810513138806348)) ('sigma_M_LRG', np.float64(0.4942590927936536))
[Interation 31] ('M_0_LRG', np.float64(12.60177594253831)) ('M_1_LRG', np.float64(13.718733441957736)) ('alpha_LRG', np.float64(1.0197410166016285)) ('f_sigv_LRG', np.float64(0.98261349700333)) ('log_Mcent_LRG', np.float64(12.828875037708345)) ('sigma_M_LRG', np.float64(0.5060547810064638))
[Interation 31] ('M_0_LRG', np.float64(12.550247864893857)) ('M_1_LRG', np.float64(13.730009356735462)) ('alpha_LRG', np.float64(1.0080088244594736)) ('f_sigv_LRG', np.float64(0.9850278267221789)) ('log_Mcent_LRG', np.float64(12.839886575438953)) ('sigma_M_LRG', np.float64(0.5157424856343433))
[Interation 31] ('M_0_LRG', np.float64(12.50037706673553)) ('M_1_LRG', np.float64(13.745129096020182)) ('alpha_LRG', np.float64(1.0302422757746212)) ('f_sigv_LRG', np.float64(1.0104439541055736)) ('log_Mcent_LRG', np.float64(12.83463329362573)) ('sigma_M_LRG', np.float64(0.5080583600828642))
[Interation 31] ('M_0_LRG', np.float64(12.597200972353127)) ('M_1_LRG', np.float64(13.737107530902978)) ('alpha_LRG', np.float64(1.0202680759848979)) ('f_sigv_LRG', np.float64(0.9864127069662175)) ('log_Mcent_LRG', np.float64(12.852961496069518)) ('sigma_M_LRG', np.float64(0.5308725033597704))
[Interation 31] ('M_0_LRG', np.float64(12.573961173364818)) ('M_1_LRG', np.float64(13.685872548772839)) ('alpha_LRG', np.float64(1.051394988839583)) ('f_sigv_LRG', np.float64(0.9715095731358432)) ('log_Mcent_LRG', np.float64(12.80446098663695)) ('sigma_M_LRG', np.float64(0.49121364194807615))
[Interation 31] ('M_0_LRG', np.float64(12.424827298743093)) ('M_1_LRG', np.float64(13.695850452311355)) ('alpha_LRG', np.float64(1.1293063922681403)) ('f_sigv_LRG', np.float64(0.9727813737081814)) ('log_Mcent_LRG', np.float64(12.782626519115238)) ('sigma_M_LRG', np.float64(0.47268908152572453))
[Interation 31] ('M_0_LRG', np.float64(12.616942535899176)) ('M_1_LRG', np.float64(13.697057620973732)) ('alpha_LRG', np.float64(0.9768407300614774)) ('f_sigv_LRG', np.float64(0.9981186922745426)) ('log_Mcent_LRG', np.float64(12.798124700256677)) ('sigma_M_LRG', np.float64(0.4857618305514644))
[Interation 31] ('M_0_LRG', np.float64(12.676507828555934)) ('M_1_LRG', np.float64(13.664647913637976)) ('alpha_LRG', np.float64(1.024475562067407)) ('f_sigv_LRG', np.float64(0.9459899459975287)) ('log_Mcent_LRG', np.float64(12.824611350818227)) ('sigma_M_LRG', np.float64(0.5213231199972629))
[Interation 31] ('M_0_LRG', np.float64(12.507333464985113)) ('M_1_LRG', np.float64(13.709545706489326)) ('alpha_LRG', np.float64(1.0674944683530994)) ('f_sigv_LRG', np.float64(0.9786680815500736)) ('log_Mcent_LRG', np.float64(12.809728388143643)) ('sigma_M_LRG', np.float64(0.49496948040439803))
[Interation 31] ('M_0_LRG', np.float64(12.512472229423286)) ('M_1_LRG', np.float64(13.69515798540945)) ('alpha_LRG', np.float64(1.1061022572866859)) ('f_sigv_LRG', np.float64(0.9615831769036662)) ('log_Mcent_LRG', np.float64(12.826644334747842)) ('sigma_M_LRG', np.float64(0.510620044028531))
[Interation 31] ('M_0_LRG', np.float64(12.584066142922063)) ('M_1_LRG', np.float64(13.716492974165773)) ('alpha_LRG', np.float64(1.004967295730735)) ('f_sigv_LRG', np.float64(0.9762338502361052)) ('log_Mcent_LRG', np.float64(12.812917255298734)) ('sigma_M_LRG', np.float64(0.48879559241917225))
[Interation 31] chi2=971.360224187005
[Interation 31] chi2=1018.5809062660869
[Interation 31] chi2=1005.7178197892955
[Interation 31] chi2=1010.035008600595
[Interation 32] ('M_0_LRG', np.float64(12.62165448287366)) ('M_1_LRG', np.float64(13.735472611591451)) ('alpha_LRG', np.float64(0.9911741484672296)) ('f_sigv_LRG', np.float64(0.9920325684130336)) ('log_Mcent_LRG', np.float64(12.842704085770679)) ('sigma_M_LRG', np.float64(0.519704174831455))
[Interation 32] ('M_0_LRG', np.float64(12.51293048521932)) ('M_1_LRG', np.float64(13.711723484375502)) ('alpha_LRG', np.float64(1.0847866344358454)) ('f_sigv_LRG', np.float64(0.9795426760925685)) ('log_Mcent_LRG', np.float64(12.8206733605938)) ('sigma_M_LRG', np.float64(0.49538523491353964))
[Interation 31] chi2=1039.1229826379201
[Interation 32] ('M_0_LRG', np.float64(12.61533641231329)) ('M_1_LRG', np.float64(13.670974852179732)) ('alpha_LRG', np.float64(1.0377805453113378)) ('f_sigv_LRG', np.float64(0.9837141947671006)) ('log_Mcent_LRG', np.float64(12.789929462425025)) ('sigma_M_LRG', np.float64(0.47603060438202094))
[Interation 31] chi2=952.7169101900809
[Interation 31] chi2=999.9722060254331
[Interation 32] ('M_0_LRG', np.float64(12.518724501674196)) ('M_1_LRG', np.float64(13.709304777374236)) ('alpha_LRG', np.float64(1.0557215246061284)) ('f_sigv_LRG', np.float64(0.997270476327256)) ('log_Mcent_LRG', np.float64(12.794332813969175)) ('sigma_M_LRG', np.float64(0.4676429425743089))
[Interation 31] chi2=979.7034128732437
[Interation 31] chi2=1005.4304366693596
[Interation 31] chi2=1047.0713765236512
[Interation 31] chi2=1073.3740386753548
[Interation 31] chi2=1021.1511164168622
[Interation 32] chi2=1026.313230119143
[Interation 32] chi2=1067.7056163103887
[Interation 32] chi2=992.1656455541856
[Interation 32] chi2=1009.8620583715355
[Interation 33] ('M_0_LRG', np.float64(12.58989030201618)) ('M_1_LRG', np.float64(13.718924767781234)) ('alpha_LRG', np.float64(1.0125835563135426)) ('f_sigv_LRG', np.float64(0.9848156317557979)) ('log_Mcent_LRG', np.float64(12.820918809091566)) ('sigma_M_LRG', np.float64(0.49796116995171735))
[Interation 33] ('M_0_LRG', np.float64(12.377049263880348)) ('M_1_LRG', np.float64(13.787546575854531)) ('alpha_LRG', np.float64(1.1098658255385956)) ('f_sigv_LRG', np.float64(1.004005309942603)) ('log_Mcent_LRG', np.float64(12.87259694559395)) ('sigma_M_LRG', np.float64(0.5306570300706449))
[Interation 33] ('M_0_LRG', np.float64(12.51562120489829)) ('M_1_LRG', np.float64(13.735645628277325)) ('alpha_LRG', np.float64(1.0514458536275264)) ('f_sigv_LRG', np.float64(0.993068316304183)) ('log_Mcent_LRG', np.float64(12.838770537666933)) ('sigma_M_LRG', np.float64(0.5101937178871061))
[Interation 33] ('M_0_LRG', np.float64(12.489119615990532)) ('M_1_LRG', np.float64(13.76290767009408)) ('alpha_LRG', np.float64(1.0535910556569121)) ('f_sigv_LRG', np.float64(0.9950712968757808)) ('log_Mcent_LRG', np.float64(12.861308665871956)) ('sigma_M_LRG', np.float64(0.5265794980629198))
[Interation 33] chi2=939.8879844161753
[Interation 33] chi2=981.2000330741134
[Interation 33] chi2=950.619594806812
[Interation 33] chi2=1062.878476977063
[Interation 32] ('M_0_LRG', np.float64(12.337091580696955)) ('M_1_LRG', np.float64(13.809627419879861)) ('alpha_LRG', np.float64(1.120108206889698)) ('f_sigv_LRG', np.float64(1.015959404347145)) ('log_Mcent_LRG', np.float64(12.89204120950494)) ('sigma_M_LRG', np.float64(0.5404321284573032))
[Interation 32] ('M_0_LRG', np.float64(12.470569996417115)) ('M_1_LRG', np.float64(13.737392274926673)) ('alpha_LRG', np.float64(1.08320240629084)) ('f_sigv_LRG', np.float64(0.9896435261939854)) ('log_Mcent_LRG', np.float64(12.850311812173665)) ('sigma_M_LRG', np.float64(0.5217531906677488))
[Interation 32] ('M_0_LRG', np.float64(12.337820925057168)) ('M_1_LRG', np.float64(13.821199181160665)) ('alpha_LRG', np.float64(1.121478824943325)) ('f_sigv_LRG', np.float64(1.005254535890809)) ('log_Mcent_LRG', np.float64(12.909234843705322)) ('sigma_M_LRG', np.float64(0.5551789764700792))
[Interation 32] ('M_0_LRG', np.float64(12.55362671126309)) ('M_1_LRG', np.float64(13.7266552527086)) ('alpha_LRG', np.float64(1.0416793607346304)) ('f_sigv_LRG', np.float64(0.9790199868780207)) ('log_Mcent_LRG', np.float64(12.851679179452063)) ('sigma_M_LRG', np.float64(0.5293867445466371))
[Interation 32] ('M_0_LRG', np.float64(12.418266170483841)) ('M_1_LRG', np.float64(13.782572362020133)) ('alpha_LRG', np.float64(1.0793888475912117)) ('f_sigv_LRG', np.float64(1.0118418277298573)) ('log_Mcent_LRG', np.float64(12.862872829154336)) ('sigma_M_LRG', np.float64(0.5187078329699041))
[Interation 32] ('M_0_LRG', np.float64(12.49141096246722)) ('M_1_LRG', np.float64(13.74963807001115)) ('alpha_LRG', np.float64(1.0579769509421806)) ('f_sigv_LRG', np.float64(0.9921349733091906)) ('log_Mcent_LRG', np.float64(12.850117954621933)) ('sigma_M_LRG', np.float64(0.5188604623785017))
[Interation 32] ('M_0_LRG', np.float64(12.513796029972923)) ('M_1_LRG', np.float64(13.742106380888654)) ('alpha_LRG', np.float64(1.0543038521740358)) ('f_sigv_LRG', np.float64(0.9814297010000627)) ('log_Mcent_LRG', np.float64(12.839729687461446)) ('sigma_M_LRG', np.float64(0.5132761191812184))
[Interation 32] ('M_0_LRG', np.float64(12.542097061291354)) ('M_1_LRG', np.float64(13.750385413619544)) ('alpha_LRG', np.float64(1.0340182240225617)) ('f_sigv_LRG', np.float64(0.9742759081040391)) ('log_Mcent_LRG', np.float64(12.858754518142153)) ('sigma_M_LRG', np.float64(0.5290846257236183))
[Interation 32] ('M_0_LRG', np.float64(12.418945313934547)) ('M_1_LRG', np.float64(13.75445282711626)) ('alpha_LRG', np.float64(1.0917978820068328)) ('f_sigv_LRG', np.float64(1.0017129347418774)) ('log_Mcent_LRG', np.float64(12.844430877309211)) ('sigma_M_LRG', np.float64(0.5093003189268488))
[Interation 32] ('M_0_LRG', np.float64(12.512809597086788)) ('M_1_LRG', np.float64(13.753001086557408)) ('alpha_LRG', np.float64(1.0461741259849093)) ('f_sigv_LRG', np.float64(0.9826386625050179)) ('log_Mcent_LRG', np.float64(12.851627765422942)) ('sigma_M_LRG', np.float64(0.5210113588218013))
[Interation 32] ('M_0_LRG', np.float64(12.531873216455782)) ('M_1_LRG', np.float64(13.74798075612091)) ('alpha_LRG', np.float64(1.0323472508881713)) ('f_sigv_LRG', np.float64(0.977502088759536)) ('log_Mcent_LRG', np.float64(12.858570742375711)) ('sigma_M_LRG', np.float64(0.5284297380466826))
[Interation 32] ('M_0_LRG', np.float64(12.4289111544611)) ('M_1_LRG', np.float64(13.765298988884046)) ('alpha_LRG', np.float64(1.0900844509131664)) ('f_sigv_LRG', np.float64(0.9996247019318479)) ('log_Mcent_LRG', np.float64(12.858914092635418)) ('sigma_M_LRG', np.float64(0.5236243468953693))
[Interation 32] chi2=1010.3975695942526
[Interation 32] chi2=971.8892704754729
[Interation 32] chi2=1029.7842677146032
[Interation 32] chi2=987.3006624392045
[Interation 32] chi2=1006.1014644542325
[Interation 32] chi2=995.924322796542
[Interation 32] chi2=962.9468833184505
[Interation 32] chi2=1065.1244015392954
[Interation 32] chi2=1006.5921626717735
[Interation 32] chi2=1004.4606230700925
[Interation 32] chi2=978.4360864568845
[Interation 32] chi2=918.4715496302025
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_17.npy
Set number of threads to 32
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.507989761808172)) ('M_1_LRG', np.float64(13.753946648582751)) ('alpha_LRG', np.float64(1.0552280689425622)) ('f_sigv_LRG', np.float64(0.983917479628315)) ('log_Mcent_LRG', np.float64(12.863265075320204)) ('sigma_M_LRG', np.float64(0.5314064212169761))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3622469902038574
Start satellite assignement
Satellite assignement done 0.0750417709350586
LRG mock catalogue done 0.14883899688720703
559324 central galaxies, 90522 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6948730945587158
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_17.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:29
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:29
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:29
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:29
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:29
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:29
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:29
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:29
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:29
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:29
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:29
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:29
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:29
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:29
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:30
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:30
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:30
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 34] ('M_0_LRG', np.float64(12.67716186316307)) ('M_1_LRG', np.float64(13.715032429733412)) ('alpha_LRG', np.float64(0.9491904360998675)) ('f_sigv_LRG', np.float64(1.0005948694834848)) ('log_Mcent_LRG', np.float64(12.837142027385594)) ('sigma_M_LRG', np.float64(0.5123091465880044))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 34] ('M_0_LRG', np.float64(12.523498420242865)) ('M_1_LRG', np.float64(13.713237423630716)) ('alpha_LRG', np.float64(0.9991994854324198)) ('f_sigv_LRG', np.float64(1.0150291545163457)) ('log_Mcent_LRG', np.float64(12.783838485673545)) ('sigma_M_LRG', np.float64(0.47274157383242416))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 34] ('M_0_LRG', np.float64(12.317562493585735)) ('M_1_LRG', np.float64(13.748630736150572)) ('alpha_LRG', np.float64(1.12842886999025)) ('f_sigv_LRG', np.float64(1.0296857659346055)) ('log_Mcent_LRG', np.float64(12.810892024570727)) ('sigma_M_LRG', np.float64(0.4809584938110547))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 34] ('M_0_LRG', np.float64(12.501650373394586)) ('M_1_LRG', np.float64(13.783985259898065)) ('alpha_LRG', np.float64(0.9957969427864106)) ('f_sigv_LRG', np.float64(1.0369214457106488)) ('log_Mcent_LRG', np.float64(12.865591092091103)) ('sigma_M_LRG', np.float64(0.5266456853864463))
[Interation 34] chi2=955.4627468568997
[Interation 34] chi2=1015.8330993250022
[Interation 34] chi2=1098.019673538484
[Interation 34] chi2=1055.5959213221925
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.472986294367717)) ('M_1_LRG', np.float64(13.785964949373884)) ('alpha_LRG', np.float64(1.0082652793698683)) ('f_sigv_LRG', np.float64(1.0159397916255641)) ('log_Mcent_LRG', np.float64(12.863785354757086)) ('sigma_M_LRG', np.float64(0.5234898035333199))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.52956813069742)) ('M_1_LRG', np.float64(13.765159500031338)) ('alpha_LRG', np.float64(1.0338849326430937)) ('f_sigv_LRG', np.float64(1.0187759376988055)) ('log_Mcent_LRG', np.float64(12.87713722286485)) ('sigma_M_LRG', np.float64(0.5345966762608537))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.561844219773427)) ('M_1_LRG', np.float64(13.746731086959382)) ('alpha_LRG', np.float64(1.0018087436979606)) ('f_sigv_LRG', np.float64(0.9980262486059824)) ('log_Mcent_LRG', np.float64(12.855305439247704)) ('sigma_M_LRG', np.float64(0.5251174620555423))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.464320084913545)) ('M_1_LRG', np.float64(13.665296929918817)) ('alpha_LRG', np.float64(1.0843399041301776)) ('f_sigv_LRG', np.float64(0.9995197807566796)) ('log_Mcent_LRG', np.float64(12.77383940817122)) ('sigma_M_LRG', np.float64(0.4641233842573249))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.525467490566855)) ('M_1_LRG', np.float64(13.730947831642316)) ('alpha_LRG', np.float64(1.0094294022174404)) ('f_sigv_LRG', np.float64(1.0024224416810497)) ('log_Mcent_LRG', np.float64(12.797725138281173)) ('sigma_M_LRG', np.float64(0.46654048462240233))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.551543355002604)) ('M_1_LRG', np.float64(13.733311766716719)) ('alpha_LRG', np.float64(1.0293695756346593)) ('f_sigv_LRG', np.float64(0.9997841582375672)) ('log_Mcent_LRG', np.float64(12.85388750869184)) ('sigma_M_LRG', np.float64(0.5259977157406891))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.476180966526858)) ('M_1_LRG', np.float64(13.748170096334022)) ('alpha_LRG', np.float64(1.0344922662928897)) ('f_sigv_LRG', np.float64(1.0190207720587712)) ('log_Mcent_LRG', np.float64(12.834815363131508)) ('sigma_M_LRG', np.float64(0.5003725768293632))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.501152880479378)) ('M_1_LRG', np.float64(13.681592327469122)) ('alpha_LRG', np.float64(1.0475705247477944)) ('f_sigv_LRG', np.float64(1.0013229000403152)) ('log_Mcent_LRG', np.float64(12.769119738922155)) ('sigma_M_LRG', np.float64(0.4534876343311213))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.459171238718154)) ('M_1_LRG', np.float64(13.756252351155853)) ('alpha_LRG', np.float64(1.0538394877671509)) ('f_sigv_LRG', np.float64(1.0259333913501607)) ('log_Mcent_LRG', np.float64(12.834324797271439)) ('sigma_M_LRG', np.float64(0.49232235060297413))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.551703397575064)) ('M_1_LRG', np.float64(13.715939333425796)) ('alpha_LRG', np.float64(1.0327241049557403)) ('f_sigv_LRG', np.float64(1.0060621088375494)) ('log_Mcent_LRG', np.float64(12.830021294356703)) ('sigma_M_LRG', np.float64(0.5020346551506849))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.541721798030283)) ('M_1_LRG', np.float64(13.729392971270611)) ('alpha_LRG', np.float64(0.9906634946886452)) ('f_sigv_LRG', np.float64(1.0210271111314082)) ('log_Mcent_LRG', np.float64(12.809750100143287)) ('sigma_M_LRG', np.float64(0.4871414355509687))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.57721530872404)) ('M_1_LRG', np.float64(13.609480769086527)) ('alpha_LRG', np.float64(1.0358576294818165)) ('f_sigv_LRG', np.float64(0.9818519664451549)) ('log_Mcent_LRG', np.float64(12.721063392257124)) ('sigma_M_LRG', np.float64(0.43126415237613686))
[Interation 33] chi2=1043.722760780316
[Interation 33] chi2=1030.1557775106041
[Interation 33] chi2=1078.2262698494471
[Interation 33] chi2=1095.5635123617933
[Interation 33] chi2=1088.5731897844164
[Interation 33] chi2=1064.241088114721
[Interation 33] chi2=1017.2135529526837
[Interation 33] chi2=1078.433633675045
[Interation 33] chi2=1059.7098770115406
[Interation 33] chi2=1079.248627202668
[Interation 33] chi2=1081.908368733323
[Interation 33] chi2=1066.7096049345419
[Interation 35] ('M_0_LRG', np.float64(12.524433093392636)) ('M_1_LRG', np.float64(13.727093104885512)) ('alpha_LRG', np.float64(1.0308381022131297)) ('f_sigv_LRG', np.float64(0.9978430039534809)) ('log_Mcent_LRG', np.float64(12.834892280143018)) ('sigma_M_LRG', np.float64(0.5080910993575135))
[Interation 35] ('M_0_LRG', np.float64(12.598905272623373)) ('M_1_LRG', np.float64(13.68220587141191)) ('alpha_LRG', np.float64(1.006535788740786)) ('f_sigv_LRG', np.float64(0.9742262531021456)) ('log_Mcent_LRG', np.float64(12.797463331188396)) ('sigma_M_LRG', np.float64(0.4932802145833074))
[Interation 35] ('M_0_LRG', np.float64(12.539390721021663)) ('M_1_LRG', np.float64(13.761201911439118)) ('alpha_LRG', np.float64(1.0071263227219553)) ('f_sigv_LRG', np.float64(0.9943644750978142)) ('log_Mcent_LRG', np.float64(12.875324643009748)) ('sigma_M_LRG', np.float64(0.54084528627882))
[Interation 35] ('M_0_LRG', np.float64(12.480777525981386)) ('M_1_LRG', np.float64(13.750212070514849)) ('alpha_LRG', np.float64(1.0502292356788456)) ('f_sigv_LRG', np.float64(1.0111786803875713)) ('log_Mcent_LRG', np.float64(12.85586574605849)) ('sigma_M_LRG', np.float64(0.5149979190864786))
[Interation 35] chi2=1052.0062124996073
[Interation 35] chi2=1075.8876444924488
[Interation 35] chi2=995.8782621336966
[Interation 35] chi2=1019.6919696940324
[Interation 34] ('M_0_LRG', np.float64(12.560850918061913)) ('M_1_LRG', np.float64(13.705589716808813)) ('alpha_LRG', np.float64(1.022341376950163)) ('f_sigv_LRG', np.float64(0.9827751669122923)) ('log_Mcent_LRG', np.float64(12.825533073148334)) ('sigma_M_LRG', np.float64(0.5077595088568623))
[Interation 34] ('M_0_LRG', np.float64(12.5485801220293)) ('M_1_LRG', np.float64(13.730005788548066)) ('alpha_LRG', np.float64(1.019044059232319)) ('f_sigv_LRG', np.float64(0.979098008291981)) ('log_Mcent_LRG', np.float64(12.856911049417302)) ('sigma_M_LRG', np.float64(0.5361154748656716))
[Interation 34] ('M_0_LRG', np.float64(12.558364894838807)) ('M_1_LRG', np.float64(13.689355920990712)) ('alpha_LRG', np.float64(1.0164146400466554)) ('f_sigv_LRG', np.float64(0.9820952070244924)) ('log_Mcent_LRG', np.float64(12.804243179920661)) ('sigma_M_LRG', np.float64(0.49764416914913995))
[Interation 34] ('M_0_LRG', np.float64(12.523689975501233)) ('M_1_LRG', np.float64(13.769053124258642)) ('alpha_LRG', np.float64(1.0159381798646752)) ('f_sigv_LRG', np.float64(0.9930164058400152)) ('log_Mcent_LRG', np.float64(12.882447557633204)) ('sigma_M_LRG', np.float64(0.5516728800858043))
[Interation 34] ('M_0_LRG', np.float64(12.548655848430869)) ('M_1_LRG', np.float64(13.720519889461551)) ('alpha_LRG', np.float64(1.0136153945301418)) ('f_sigv_LRG', np.float64(0.9879354635663876)) ('log_Mcent_LRG', np.float64(12.83517636860634)) ('sigma_M_LRG', np.float64(0.5156216873823143))
[Interation 34] ('M_0_LRG', np.float64(12.562004685793047)) ('M_1_LRG', np.float64(13.662279094995721)) ('alpha_LRG', np.float64(1.0295620865963278)) ('f_sigv_LRG', np.float64(0.9848105468703005)) ('log_Mcent_LRG', np.float64(12.761773759505859)) ('sigma_M_LRG', np.float64(0.45841933004644775))
[Interation 34] ('M_0_LRG', np.float64(12.578412504150162)) ('M_1_LRG', np.float64(13.679155823596426)) ('alpha_LRG', np.float64(1.0010136386080253)) ('f_sigv_LRG', np.float64(0.9821188759804624)) ('log_Mcent_LRG', np.float64(12.779180824063479)) ('sigma_M_LRG', np.float64(0.4718764516476732))
[Interation 34] ('M_0_LRG', np.float64(12.570117442406225)) ('M_1_LRG', np.float64(13.689432513435536)) ('alpha_LRG', np.float64(1.0082771008831655)) ('f_sigv_LRG', np.float64(0.9860361708047299)) ('log_Mcent_LRG', np.float64(12.793147755248219)) ('sigma_M_LRG', np.float64(0.48245007196816214))
[Interation 34] ('M_0_LRG', np.float64(12.562359475117423)) ('M_1_LRG', np.float64(13.693581663180384)) ('alpha_LRG', np.float64(1.0205227738162042)) ('f_sigv_LRG', np.float64(0.9785352450637396)) ('log_Mcent_LRG', np.float64(12.802132896003132)) ('sigma_M_LRG', np.float64(0.48985076586131093))
[Interation 34] ('M_0_LRG', np.float64(12.53534196447954)) ('M_1_LRG', np.float64(13.73738803887047)) ('alpha_LRG', np.float64(1.010031096472807)) ('f_sigv_LRG', np.float64(0.9880326809354038)) ('log_Mcent_LRG', np.float64(12.839776315599071)) ('sigma_M_LRG', np.float64(0.5184295416361508))
[Interation 34] ('M_0_LRG', np.float64(12.567012340283531)) ('M_1_LRG', np.float64(13.700235141011833)) ('alpha_LRG', np.float64(1.0168015277568871)) ('f_sigv_LRG', np.float64(0.9757843152396986)) ('log_Mcent_LRG', np.float64(12.821562026255368)) ('sigma_M_LRG', np.float64(0.5077645166227754))
[Interation 34] ('M_0_LRG', np.float64(12.544622710380178)) ('M_1_LRG', np.float64(13.729058281310005)) ('alpha_LRG', np.float64(1.008595586561554)) ('f_sigv_LRG', np.float64(0.9958461903569892)) ('log_Mcent_LRG', np.float64(12.83366815154493)) ('sigma_M_LRG', np.float64(0.5118866064102201))
[Interation 34] chi2=912.7698351276011
[Interation 34] chi2=1067.2486295669617
[Interation 34] chi2=1069.873022857375
[Interation 34] chi2=976.3717143926459
[Interation 34] chi2=1071.6312457407714
[Interation 34] chi2=1070.5164466048586
[Interation 34] chi2=1053.2273700877677
[Interation 34] chi2=1037.4925100400267
[Interation 34] chi2=1040.476669948935
[Interation 34] chi2=970.7212132003384
[Interation 34] chi2=1035.2788356015715
[Interation 34] chi2=1022.5792691021649
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_18.npy
Set number of threads to 32
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.52952986575634)) ('M_1_LRG', np.float64(13.732248191811419)) ('alpha_LRG', np.float64(1.0153923587545948)) ('f_sigv_LRG', np.float64(1.0007225508987914)) ('log_Mcent_LRG', np.float64(12.829086071798782)) ('sigma_M_LRG', np.float64(0.5040808832758217))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.35436296463012695
Start satellite assignement
Satellite assignement done 0.07843494415283203
LRG mock catalogue done 0.1566016674041748
584617 central galaxies, 98169 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6931970119476318
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_18.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:30
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:30
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:30
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:30
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:30
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:30
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:30
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:30
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:30
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:30
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:30
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:30
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:30
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:31
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:31
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:31
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:25
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 36] ('M_0_LRG', np.float64(12.58086099686798)) ('M_1_LRG', np.float64(13.53108017077364)) ('alpha_LRG', np.float64(0.9936243339926554)) ('f_sigv_LRG', np.float64(0.8856639847555615)) ('log_Mcent_LRG', np.float64(12.65010269940647)) ('sigma_M_LRG', np.float64(0.4611144734293493))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 36] ('M_0_LRG', np.float64(12.454431478438398)) ('M_1_LRG', np.float64(13.61039328080352)) ('alpha_LRG', np.float64(1.0029590037248983)) ('f_sigv_LRG', np.float64(0.9935348867996514)) ('log_Mcent_LRG', np.float64(12.784740623804176)) ('sigma_M_LRG', np.float64(0.5014598921419053))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 36] ('M_0_LRG', np.float64(12.471304974916178)) ('M_1_LRG', np.float64(13.683668678320423)) ('alpha_LRG', np.float64(1.0121007082994098)) ('f_sigv_LRG', np.float64(1.1155893176557283)) ('log_Mcent_LRG', np.float64(12.734845104387366)) ('sigma_M_LRG', np.float64(0.4758439788826734))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 36] ('M_0_LRG', np.float64(12.385994916999326)) ('M_1_LRG', np.float64(13.460643636611145)) ('alpha_LRG', np.float64(1.0764214464110695)) ('f_sigv_LRG', np.float64(0.814932802486672)) ('log_Mcent_LRG', np.float64(12.727087970744808)) ('sigma_M_LRG', np.float64(0.522247799825034))
[Interation 36] chi2=1746.8685633111156
[Interation 36] chi2=1421.6259642534344
[Interation 36] chi2=1848.4473323070176
[Interation 36] chi2=2908.685489488424
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.634099050989434)) ('M_1_LRG', np.float64(13.63373796692272)) ('alpha_LRG', np.float64(1.0134944857769363)) ('f_sigv_LRG', np.float64(0.9604614239079936)) ('log_Mcent_LRG', np.float64(12.743053286416247)) ('sigma_M_LRG', np.float64(0.4339362422426106))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.453362980193742)) ('M_1_LRG', np.float64(13.676788415046678)) ('alpha_LRG', np.float64(1.0311241992001405)) ('f_sigv_LRG', np.float64(0.9510883929919409)) ('log_Mcent_LRG', np.float64(12.770015341911943)) ('sigma_M_LRG', np.float64(0.4804691109893144))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.69986611148449)) ('M_1_LRG', np.float64(13.623652901077234)) ('alpha_LRG', np.float64(1.0532262740744727)) ('f_sigv_LRG', np.float64(0.9778994226908986)) ('log_Mcent_LRG', np.float64(12.730389898186951)) ('sigma_M_LRG', np.float64(0.43324042901346366))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.652963165921024)) ('M_1_LRG', np.float64(13.676960504511458)) ('alpha_LRG', np.float64(0.9957326318920328)) ('f_sigv_LRG', np.float64(0.9199332913752531)) ('log_Mcent_LRG', np.float64(12.828983513166529)) ('sigma_M_LRG', np.float64(0.5327076974457366))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.379449226346173)) ('M_1_LRG', np.float64(13.636740878795173)) ('alpha_LRG', np.float64(1.1405939455936118)) ('f_sigv_LRG', np.float64(0.898628844845476)) ('log_Mcent_LRG', np.float64(12.760597640749532)) ('sigma_M_LRG', np.float64(0.4888826268582102))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.763305249261496)) ('M_1_LRG', np.float64(13.503541811689487)) ('alpha_LRG', np.float64(1.011513694910896)) ('f_sigv_LRG', np.float64(0.9077084805724065)) ('log_Mcent_LRG', np.float64(12.600458009442999)) ('sigma_M_LRG', np.float64(0.334554575023159))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.403933077184416)) ('M_1_LRG', np.float64(13.631970451707733)) ('alpha_LRG', np.float64(1.1196889714254552)) ('f_sigv_LRG', np.float64(1.0153831383334109)) ('log_Mcent_LRG', np.float64(12.660258200563886)) ('sigma_M_LRG', np.float64(0.33584301764501523))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.590339507971024)) ('M_1_LRG', np.float64(13.692131804886953)) ('alpha_LRG', np.float64(0.9958569987451907)) ('f_sigv_LRG', np.float64(1.014992031502084)) ('log_Mcent_LRG', np.float64(12.693988044447408)) ('sigma_M_LRG', np.float64(0.3778176285775257))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.351553319390815)) ('M_1_LRG', np.float64(13.777668769163773)) ('alpha_LRG', np.float64(1.001935369957625)) ('f_sigv_LRG', np.float64(1.0723028397321608)) ('log_Mcent_LRG', np.float64(12.793634287591154)) ('sigma_M_LRG', np.float64(0.4814946855188355))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.422735713532834)) ('M_1_LRG', np.float64(13.699503909694217)) ('alpha_LRG', np.float64(1.0388545590400031)) ('f_sigv_LRG', np.float64(1.0800552908051682)) ('log_Mcent_LRG', np.float64(12.734176759098462)) ('sigma_M_LRG', np.float64(0.3923691953222279))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.465527739019683)) ('M_1_LRG', np.float64(13.72338985491488)) ('alpha_LRG', np.float64(1.0231142125118842)) ('f_sigv_LRG', np.float64(0.9377978870549546)) ('log_Mcent_LRG', np.float64(12.818721194358206)) ('sigma_M_LRG', np.float64(0.5194067488571402))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.520179703645423)) ('M_1_LRG', np.float64(13.743073374593436)) ('alpha_LRG', np.float64(0.9977897544660106)) ('f_sigv_LRG', np.float64(0.9727473228166734)) ('log_Mcent_LRG', np.float64(12.79607420206938)) ('sigma_M_LRG', np.float64(0.48588424945668407))
[Interation 35] chi2=1069.275772265408
[Interation 35] chi2=1072.32046457852
[Interation 35] chi2=1062.5765236260074
[Interation 35] chi2=1260.5188231358172
[Interation 35] chi2=1543.9194743127327
[Interation 35] chi2=1180.8441597543679
[Interation 35] chi2=1173.2621484974552
[Interation 35] chi2=1241.3601406049129
[Interation 35] chi2=1184.1293683842302
[Interation 35] chi2=1164.7530899520812
[Interation 35] chi2=1107.6500040939402
[Interation 35] chi2=1074.2274597055257
[Interation 37] ('M_0_LRG', np.float64(12.34670927776006)) ('M_1_LRG', np.float64(13.714771043997672)) ('alpha_LRG', np.float64(1.1494518881926803)) ('f_sigv_LRG', np.float64(0.9761568174545778)) ('log_Mcent_LRG', np.float64(12.804403761660335)) ('sigma_M_LRG', np.float64(0.4880118065175547))
[Interation 37] ('M_0_LRG', np.float64(12.402702899970748)) ('M_1_LRG', np.float64(13.761771688975779)) ('alpha_LRG', np.float64(1.0952105860159418)) ('f_sigv_LRG', np.float64(0.986020844390963)) ('log_Mcent_LRG', np.float64(12.854662319603644)) ('sigma_M_LRG', np.float64(0.5263040250679251))
[Interation 37] ('M_0_LRG', np.float64(12.467439114374935)) ('M_1_LRG', np.float64(13.740526222878499)) ('alpha_LRG', np.float64(1.0933335526594818)) ('f_sigv_LRG', np.float64(0.9776745448019217)) ('log_Mcent_LRG', np.float64(12.85011651690593)) ('sigma_M_LRG', np.float64(0.5269274849808447))
[Interation 37] ('M_0_LRG', np.float64(12.380444509510047)) ('M_1_LRG', np.float64(13.73959834659659)) ('alpha_LRG', np.float64(1.103430071976871)) ('f_sigv_LRG', np.float64(0.9998226982501704)) ('log_Mcent_LRG', np.float64(12.836253078558865)) ('sigma_M_LRG', np.float64(0.5120683616873379))
[Interation 37] chi2=981.3300549861748
[Interation 37] chi2=1104.5597182974498
[Interation 37] chi2=1016.1306955512725
[Interation 37] chi2=992.844971264496
[Interation 36] ('M_0_LRG', np.float64(12.491707937352338)) ('M_1_LRG', np.float64(13.719803535020704)) ('alpha_LRG', np.float64(1.0459920504254367)) ('f_sigv_LRG', np.float64(0.9907532958191422)) ('log_Mcent_LRG', np.float64(12.817467375572544)) ('sigma_M_LRG', np.float64(0.4977340943959014))
[Interation 36] ('M_0_LRG', np.float64(12.483552436814623)) ('M_1_LRG', np.float64(13.708583715098294)) ('alpha_LRG', np.float64(1.0386073091685466)) ('f_sigv_LRG', np.float64(1.008583460723928)) ('log_Mcent_LRG', np.float64(12.794440410752777)) ('sigma_M_LRG', np.float64(0.47873090340190266))
[Interation 36] ('M_0_LRG', np.float64(12.448117246528533)) ('M_1_LRG', np.float64(13.7146223865688)) ('alpha_LRG', np.float64(1.0508189522636369)) ('f_sigv_LRG', np.float64(1.0082620213303608)) ('log_Mcent_LRG', np.float64(12.803654045196415)) ('sigma_M_LRG', np.float64(0.48511279528226064))
[Interation 36] ('M_0_LRG', np.float64(12.508851299925313)) ('M_1_LRG', np.float64(13.73369057143255)) ('alpha_LRG', np.float64(1.0312248416272904)) ('f_sigv_LRG', np.float64(1.0013328888822157)) ('log_Mcent_LRG', np.float64(12.836044428915443)) ('sigma_M_LRG', np.float64(0.5107910092229958))
[Interation 36] ('M_0_LRG', np.float64(12.437974477735317)) ('M_1_LRG', np.float64(13.722621914164746)) ('alpha_LRG', np.float64(1.0922951182097493)) ('f_sigv_LRG', np.float64(0.9931662854845813)) ('log_Mcent_LRG', np.float64(12.82473991441798)) ('sigma_M_LRG', np.float64(0.49975669014220525))
[Interation 36] ('M_0_LRG', np.float64(12.479941706560137)) ('M_1_LRG', np.float64(13.735062230188566)) ('alpha_LRG', np.float64(1.0850134210969415)) ('f_sigv_LRG', np.float64(0.9807761504358667)) ('log_Mcent_LRG', np.float64(12.84049453823112)) ('sigma_M_LRG', np.float64(0.5137121897310599))
[Interation 36] ('M_0_LRG', np.float64(12.59650459751198)) ('M_1_LRG', np.float64(13.719829285567657)) ('alpha_LRG', np.float64(0.9894243847530998)) ('f_sigv_LRG', np.float64(1.0110973335396674)) ('log_Mcent_LRG', np.float64(12.826877115595384)) ('sigma_M_LRG', np.float64(0.5027384692771467))
[Interation 36] ('M_0_LRG', np.float64(12.559931173928257)) ('M_1_LRG', np.float64(13.706590422184831)) ('alpha_LRG', np.float64(1.044427898847399)) ('f_sigv_LRG', np.float64(0.9805808074237042)) ('log_Mcent_LRG', np.float64(12.81931806464695)) ('sigma_M_LRG', np.float64(0.5004102135418367))
[Interation 36] ('M_0_LRG', np.float64(12.440041939777807)) ('M_1_LRG', np.float64(13.728415370463024)) ('alpha_LRG', np.float64(1.0996475157805106)) ('f_sigv_LRG', np.float64(0.9828201111661427)) ('log_Mcent_LRG', np.float64(12.833304504282037)) ('sigma_M_LRG', np.float64(0.5090181261688774))
[Interation 36] ('M_0_LRG', np.float64(12.354718138820145)) ('M_1_LRG', np.float64(13.775026582905257)) ('alpha_LRG', np.float64(1.1252881901903455)) ('f_sigv_LRG', np.float64(0.9747340709834926)) ('log_Mcent_LRG', np.float64(12.86079066891968)) ('sigma_M_LRG', np.float64(0.5221050282955135))
[Interation 36] ('M_0_LRG', np.float64(12.3562032639441)) ('M_1_LRG', np.float64(13.72980774913021)) ('alpha_LRG', np.float64(1.1402835730830043)) ('f_sigv_LRG', np.float64(1.0029303324377048)) ('log_Mcent_LRG', np.float64(12.825716331996599)) ('sigma_M_LRG', np.float64(0.49936780183569235))
[Interation 36] ('M_0_LRG', np.float64(12.406499863321688)) ('M_1_LRG', np.float64(13.662089453166931)) ('alpha_LRG', np.float64(1.1217876842489427)) ('f_sigv_LRG', np.float64(0.977443227836972)) ('log_Mcent_LRG', np.float64(12.746839416330301)) ('sigma_M_LRG', np.float64(0.44128963718486647))
[Interation 36] chi2=960.7464892106634
[Interation 36] chi2=1003.4583452459256
[Interation 36] chi2=969.0558006267943
[Interation 36] chi2=1101.3600672935547
[Interation 36] chi2=1008.3042768907618
[Interation 36] chi2=1078.9886715365628
[Interation 36] chi2=1117.6717107436427
[Interation 36] chi2=1047.4713558727747
[Interation 36] chi2=959.2067384727197
[Interation 36] chi2=1139.3889543196335
[Interation 36] chi2=1034.0086617265076
[Interation 36] chi2=1020.6820983342861
[Interation 38] ('M_0_LRG', np.float64(12.406160738463416)) ('M_1_LRG', np.float64(13.785861369496777)) ('alpha_LRG', np.float64(1.0936344571326448)) ('f_sigv_LRG', np.float64(0.9910782354628189)) ('log_Mcent_LRG', np.float64(12.891751421162153)) ('sigma_M_LRG', np.float64(0.5548488019499265))
[Interation 38] ('M_0_LRG', np.float64(12.331817804971122)) ('M_1_LRG', np.float64(13.731885339919614)) ('alpha_LRG', np.float64(1.1310122331397727)) ('f_sigv_LRG', np.float64(1.0078350672865592)) ('log_Mcent_LRG', np.float64(12.805624686228304)) ('sigma_M_LRG', np.float64(0.48090731749127114))
[Interation 38] ('M_0_LRG', np.float64(12.456960912361799)) ('M_1_LRG', np.float64(13.692615049568428)) ('alpha_LRG', np.float64(1.088537034002569)) ('f_sigv_LRG', np.float64(0.9889597310084997)) ('log_Mcent_LRG', np.float64(12.800640295226184)) ('sigma_M_LRG', np.float64(0.4889714557323568))
[Interation 38] ('M_0_LRG', np.float64(12.395703607165856)) ('M_1_LRG', np.float64(13.773330779076938)) ('alpha_LRG', np.float64(1.080773163012496)) ('f_sigv_LRG', np.float64(1.0151931298706167)) ('log_Mcent_LRG', np.float64(12.854991109210049)) ('sigma_M_LRG', np.float64(0.5174782006100458))
[Interation 38] chi2=980.6345139331239
[Interation 38] chi2=1087.567020989602
[Interation 38] chi2=1048.2380304977548
[Interation 38] chi2=1035.6295863084474
[Interation 37] ('M_0_LRG', np.float64(12.494283310023105)) ('M_1_LRG', np.float64(13.772887649643751)) ('alpha_LRG', np.float64(1.0522891362804645)) ('f_sigv_LRG', np.float64(0.994066203407165)) ('log_Mcent_LRG', np.float64(12.889297129745175)) ('sigma_M_LRG', np.float64(0.551660641646164))
[Interation 37] ('M_0_LRG', np.float64(12.443075786043035)) ('M_1_LRG', np.float64(13.772820566936847)) ('alpha_LRG', np.float64(1.0803620933391063)) ('f_sigv_LRG', np.float64(0.994492699854468)) ('log_Mcent_LRG', np.float64(12.873780290823364)) ('sigma_M_LRG', np.float64(0.537652591274539))
[Interation 37] ('M_0_LRG', np.float64(12.414111093566405)) ('M_1_LRG', np.float64(13.810342728869319)) ('alpha_LRG', np.float64(1.0778086232653972)) ('f_sigv_LRG', np.float64(0.9843262979624546)) ('log_Mcent_LRG', np.float64(12.927405154753089)) ('sigma_M_LRG', np.float64(0.5807352625168607))
[Interation 37] ('M_0_LRG', np.float64(12.354618756132048)) ('M_1_LRG', np.float64(13.775726874983764)) ('alpha_LRG', np.float64(1.0875470799345612)) ('f_sigv_LRG', np.float64(1.0098298772259389)) ('log_Mcent_LRG', np.float64(12.843562563447444)) ('sigma_M_LRG', np.float64(0.5111034193583982))
[Interation 37] ('M_0_LRG', np.float64(12.392432997569223)) ('M_1_LRG', np.float64(13.756399937791862)) ('alpha_LRG', np.float64(1.0911931118740776)) ('f_sigv_LRG', np.float64(0.9928503236956141)) ('log_Mcent_LRG', np.float64(12.87315963799728)) ('sigma_M_LRG', np.float64(0.54544100371702))
[Interation 37] ('M_0_LRG', np.float64(12.449741853381626)) ('M_1_LRG', np.float64(13.723312010056091)) ('alpha_LRG', np.float64(1.0979045650372972)) ('f_sigv_LRG', np.float64(0.9811446059205358)) ('log_Mcent_LRG', np.float64(12.829764796947085)) ('sigma_M_LRG', np.float64(0.507398215433596))
[Interation 37] ('M_0_LRG', np.float64(12.42461098226266)) ('M_1_LRG', np.float64(13.802983476801352)) ('alpha_LRG', np.float64(1.0794537369727784)) ('f_sigv_LRG', np.float64(0.9906107819547149)) ('log_Mcent_LRG', np.float64(12.909929194542615)) ('sigma_M_LRG', np.float64(0.5650206209614437))
[Interation 37] ('M_0_LRG', np.float64(12.495852878641317)) ('M_1_LRG', np.float64(13.760761113738955)) ('alpha_LRG', np.float64(1.0590130983629231)) ('f_sigv_LRG', np.float64(0.9924545582672928)) ('log_Mcent_LRG', np.float64(12.874276025013156)) ('sigma_M_LRG', np.float64(0.5401246058476323))
[Interation 37] ('M_0_LRG', np.float64(12.431135755266538)) ('M_1_LRG', np.float64(13.778083228275703)) ('alpha_LRG', np.float64(1.0888267757178127)) ('f_sigv_LRG', np.float64(0.977030658800389)) ('log_Mcent_LRG', np.float64(12.909685568784006)) ('sigma_M_LRG', np.float64(0.5727996842666425))
[Interation 37] ('M_0_LRG', np.float64(12.317851789646102)) ('M_1_LRG', np.float64(13.787610806263773)) ('alpha_LRG', np.float64(1.1041815757402633)) ('f_sigv_LRG', np.float64(1.0148318763200188)) ('log_Mcent_LRG', np.float64(12.850240528827074)) ('sigma_M_LRG', np.float64(0.5115639027542305))
[Interation 37] ('M_0_LRG', np.float64(12.489186677901786)) ('M_1_LRG', np.float64(13.736795862959797)) ('alpha_LRG', np.float64(1.0653800086681897)) ('f_sigv_LRG', np.float64(0.9821432228267514)) ('log_Mcent_LRG', np.float64(12.857147119968774)) ('sigma_M_LRG', np.float64(0.5338963830339059))
[Interation 37] ('M_0_LRG', np.float64(12.371276055552869)) ('M_1_LRG', np.float64(13.802652859001102)) ('alpha_LRG', np.float64(1.0756277000461303)) ('f_sigv_LRG', np.float64(1.017190315106552)) ('log_Mcent_LRG', np.float64(12.883567202276527)) ('sigma_M_LRG', np.float64(0.5398849608465639))
[Interation 37] chi2=953.6981927457687
[Interation 37] chi2=1067.9158255440454
[Interation 37] chi2=1007.0505113716245
[Interation 37] chi2=1029.0253850471397
[Interation 37] chi2=1030.0909157050396
[Interation 37] chi2=1012.5916281328691
[Interation 37] chi2=1036.655424246071
[Interation 37] chi2=954.9617887630742
[Interation 37] chi2=931.752802411543
[Interation 37] chi2=1105.9039314154245
[Interation 37] chi2=1118.3575131236541
[Interation 37] chi2=1021.9539998967722
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_19.npy
Set number of threads to 32
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.453795782787134)) ('M_1_LRG', np.float64(13.766790131916624)) ('alpha_LRG', np.float64(1.0833224630774807)) ('f_sigv_LRG', np.float64(0.9973825223667836)) ('log_Mcent_LRG', np.float64(12.872988460130385)) ('sigma_M_LRG', np.float64(0.534644879707201))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.32262134552001953
Start satellite assignement
Satellite assignement done 0.07464599609375
LRG mock catalogue done 0.14864087104797363
545621 central galaxies, 90374 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6558527946472168
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.8-1.1_standard_19.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:24
Load rppi measurements at z0.8-1.1 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:25
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.950 ...
Done took 00:00:21
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Load correlation matrix for LRG at z0.95 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.95 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Load correlation matrix for LRG at z0.95 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 39] ('M_0_LRG', np.float64(12.440878384905496)) ('M_1_LRG', np.float64(13.764223143654204)) ('alpha_LRG', np.float64(1.0446738601375942)) ('f_sigv_LRG', np.float64(1.0448633118838615)) ('log_Mcent_LRG', np.float64(12.843008438837938)) ('sigma_M_LRG', np.float64(0.5042167148972406))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 39] ('M_0_LRG', np.float64(12.43872827025561)) ('M_1_LRG', np.float64(13.662215521469191)) ('alpha_LRG', np.float64(1.0671466762934136)) ('f_sigv_LRG', np.float64(0.9966130976841656)) ('log_Mcent_LRG', np.float64(12.749942649480012)) ('sigma_M_LRG', np.float64(0.44246438392423926))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 39] ('M_0_LRG', np.float64(12.554591629608717)) ('M_1_LRG', np.float64(13.809526064237362)) ('alpha_LRG', np.float64(0.9905044913539613)) ('f_sigv_LRG', np.float64(1.0290630180969738)) ('log_Mcent_LRG', np.float64(12.913576879228618)) ('sigma_M_LRG', np.float64(0.5636385655294606))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 39] ('M_0_LRG', np.float64(12.554718560644922)) ('M_1_LRG', np.float64(13.760520654870696)) ('alpha_LRG', np.float64(1.0285561777136605)) ('f_sigv_LRG', np.float64(0.9909548200363423)) ('log_Mcent_LRG', np.float64(12.87410825949579)) ('sigma_M_LRG', np.float64(0.5402014285500417))
[Interation 39] chi2=1098.2084949891653
[Interation 39] chi2=1044.4623244184052
[Interation 39] chi2=1117.5201991932422
[Interation 39] chi2=1068.813617027835
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.619105498537014)) ('M_1_LRG', np.float64(13.696730266079662)) ('alpha_LRG', np.float64(0.9778815260568487)) ('f_sigv_LRG', np.float64(0.9965791226573116)) ('log_Mcent_LRG', np.float64(12.807257906260059)) ('sigma_M_LRG', np.float64(0.4982469438796361))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.499738637319458)) ('M_1_LRG', np.float64(13.749507051780883)) ('alpha_LRG', np.float64(1.053432091747371)) ('f_sigv_LRG', np.float64(0.9917791977600925)) ('log_Mcent_LRG', np.float64(12.852296261216697)) ('sigma_M_LRG', np.float64(0.523777320025435))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.431614868143184)) ('M_1_LRG', np.float64(13.69205131184891)) ('alpha_LRG', np.float64(1.0852397702595724)) ('f_sigv_LRG', np.float64(0.99914294548132)) ('log_Mcent_LRG', np.float64(12.784310176206313)) ('sigma_M_LRG', np.float64(0.47076050109066825))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.384318495665292)) ('M_1_LRG', np.float64(13.783955245953369)) ('alpha_LRG', np.float64(1.132436584590426)) ('f_sigv_LRG', np.float64(0.9900487066275618)) ('log_Mcent_LRG', np.float64(12.897427130600216)) ('sigma_M_LRG', np.float64(0.5570557231838923))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.494528276429852)) ('M_1_LRG', np.float64(13.766725648031434)) ('alpha_LRG', np.float64(1.0606670467680057)) ('f_sigv_LRG', np.float64(1.0087545259296455)) ('log_Mcent_LRG', np.float64(12.88209017438414)) ('sigma_M_LRG', np.float64(0.5410136745921179))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.527563225572187)) ('M_1_LRG', np.float64(13.798263260963362)) ('alpha_LRG', np.float64(1.044753249599862)) ('f_sigv_LRG', np.float64(0.9959255459401287)) ('log_Mcent_LRG', np.float64(12.910152651456027)) ('sigma_M_LRG', np.float64(0.5616941254424539))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.508095365219532)) ('M_1_LRG', np.float64(13.725071932811273)) ('alpha_LRG', np.float64(1.0430561556906452)) ('f_sigv_LRG', np.float64(1.0187407296919244)) ('log_Mcent_LRG', np.float64(12.819888813411286)) ('sigma_M_LRG', np.float64(0.4970788961182154))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.43134960957334)) ('M_1_LRG', np.float64(13.66004381785475)) ('alpha_LRG', np.float64(1.0958088299136544)) ('f_sigv_LRG', np.float64(0.9757555693168504)) ('log_Mcent_LRG', np.float64(12.763152268455551)) ('sigma_M_LRG', np.float64(0.4654341673353601))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.532565604238965)) ('M_1_LRG', np.float64(13.7286487702496)) ('alpha_LRG', np.float64(1.0406472909015014)) ('f_sigv_LRG', np.float64(0.9898433363075079)) ('log_Mcent_LRG', np.float64(12.845798227267782)) ('sigma_M_LRG', np.float64(0.5245941642097681))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.475339271970165)) ('M_1_LRG', np.float64(13.732026824479885)) ('alpha_LRG', np.float64(1.0916858813087642)) ('f_sigv_LRG', np.float64(0.9734920462612219)) ('log_Mcent_LRG', np.float64(12.848262909831567)) ('sigma_M_LRG', np.float64(0.5168990077633152))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.376529858416372)) ('M_1_LRG', np.float64(13.807920400118938)) ('alpha_LRG', np.float64(1.1296013248703667)) ('f_sigv_LRG', np.float64(1.000516053388094)) ('log_Mcent_LRG', np.float64(12.937262430915109)) ('sigma_M_LRG', np.float64(0.5955650913081268))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.535081678511993)) ('M_1_LRG', np.float64(13.728286650789828)) ('alpha_LRG', np.float64(1.057825260313807)) ('f_sigv_LRG', np.float64(1.012298045188555)) ('log_Mcent_LRG', np.float64(12.831155521808542)) ('sigma_M_LRG', np.float64(0.499529624714204))
[Interation 38] chi2=1158.3388399836344
[Interation 38] chi2=1048.875697032792
[Interation 38] chi2=1061.702391628287
[Interation 38] chi2=1015.1046626765311
[Interation 38] chi2=948.2743868833693
[Interation 38] chi2=1146.9699559463013
[Interation 38] chi2=951.8472617265967
[Interation 38] chi2=1103.5861277189547
[Interation 38] chi2=1163.7352882952387
[Interation 38] chi2=1049.9742565987083
[Interation 38] chi2=1079.362570987509
[Interation 38] chi2=1074.1009379721802
[Interation 40] ('M_0_LRG', np.float64(12.49314098901327)) ('M_1_LRG', np.float64(13.770581796584848)) ('alpha_LRG', np.float64(1.0413635987546128)) ('f_sigv_LRG', np.float64(1.01877394258834)) ('log_Mcent_LRG', np.float64(12.87318896065729)) ('sigma_M_LRG', np.float64(0.5337800660502718))
[Interation 40] ('M_0_LRG', np.float64(12.530347881486737)) ('M_1_LRG', np.float64(13.749719339787086)) ('alpha_LRG', np.float64(1.0214520435603023)) ('f_sigv_LRG', np.float64(1.0121196656954259)) ('log_Mcent_LRG', np.float64(12.867679296988515)) ('sigma_M_LRG', np.float64(0.5410053211347183))
[Interation 40] ('M_0_LRG', np.float64(12.55222272353867)) ('M_1_LRG', np.float64(13.759139582348523)) ('alpha_LRG', np.float64(1.021950939806784)) ('f_sigv_LRG', np.float64(0.9985186328359955)) ('log_Mcent_LRG', np.float64(12.87478918413842)) ('sigma_M_LRG', np.float64(0.5414578837592026))
[Interation 40] ('M_0_LRG', np.float64(12.520369076331283)) ('M_1_LRG', np.float64(13.735262624869305)) ('alpha_LRG', np.float64(1.0368074425409615)) ('f_sigv_LRG', np.float64(0.9905026590949854)) ('log_Mcent_LRG', np.float64(12.841164005519008)) ('sigma_M_LRG', np.float64(0.5157622807015544))
[Interation 40] chi2=1062.1620242558884
[Interation 40] chi2=1100.108354905273
[Interation 40] chi2=1043.5242930524532
[Interation 40] chi2=955.9450074763139
[Interation 39] ('M_0_LRG', np.float64(12.537809848118702)) ('M_1_LRG', np.float64(13.734027847216511)) ('alpha_LRG', np.float64(1.0277609011647313)) ('f_sigv_LRG', np.float64(1.0018714027943028)) ('log_Mcent_LRG', np.float64(12.846604986910414)) ('sigma_M_LRG', np.float64(0.5211355535287208))
[Interation 39] ('M_0_LRG', np.float64(12.526333419494565)) ('M_1_LRG', np.float64(13.749800264891883)) ('alpha_LRG', np.float64(1.0326227869415612)) ('f_sigv_LRG', np.float64(1.0038195377632637)) ('log_Mcent_LRG', np.float64(12.84987571427777)) ('sigma_M_LRG', np.float64(0.5166885608842661))
[Interation 39] ('M_0_LRG', np.float64(12.50884793277668)) ('M_1_LRG', np.float64(13.77146049292323)) ('alpha_LRG', np.float64(1.0388681260005161)) ('f_sigv_LRG', np.float64(1.0067400846942183)) ('log_Mcent_LRG', np.float64(12.884654033113916)) ('sigma_M_LRG', np.float64(0.5470312990240042))
[Interation 39] ('M_0_LRG', np.float64(12.491715063532325)) ('M_1_LRG', np.float64(13.711325623524237)) ('alpha_LRG', np.float64(1.0559024491850784)) ('f_sigv_LRG', np.float64(1.0095684846659976)) ('log_Mcent_LRG', np.float64(12.815136315734236)) ('sigma_M_LRG', np.float64(0.4962811561619832))
[Interation 39] ('M_0_LRG', np.float64(12.475266160688003)) ('M_1_LRG', np.float64(13.730324366640192)) ('alpha_LRG', np.float64(1.0692656684571467)) ('f_sigv_LRG', np.float64(1.005527647586874)) ('log_Mcent_LRG', np.float64(12.83677464058614)) ('sigma_M_LRG', np.float64(0.5117895047850146))
[Interation 39] ('M_0_LRG', np.float64(12.492467589933597)) ('M_1_LRG', np.float64(13.744555906340935)) ('alpha_LRG', np.float64(1.0526058204306528)) ('f_sigv_LRG', np.float64(0.9965426889691755)) ('log_Mcent_LRG', np.float64(12.848832688910896)) ('sigma_M_LRG', np.float64(0.5219648394449521))
[Interation 39] ('M_0_LRG', np.float64(12.502222770175187)) ('M_1_LRG', np.float64(13.6886189927589)) ('alpha_LRG', np.float64(1.059920890080537)) ('f_sigv_LRG', np.float64(0.999775728410098)) ('log_Mcent_LRG', np.float64(12.801740237421981)) ('sigma_M_LRG', np.float64(0.4921243477815133))
[Interation 39] ('M_0_LRG', np.float64(12.492566912313212)) ('M_1_LRG', np.float64(13.750457827931976)) ('alpha_LRG', np.float64(1.0417348243062727)) ('f_sigv_LRG', np.float64(1.0112240231723924)) ('log_Mcent_LRG', np.float64(12.860262190972135)) ('sigma_M_LRG', np.float64(0.5323663275104764))
[Interation 39] ('M_0_LRG', np.float64(12.51275781091762)) ('M_1_LRG', np.float64(13.779753629530518)) ('alpha_LRG', np.float64(1.027353299170556)) ('f_sigv_LRG', np.float64(1.0123728941935994)) ('log_Mcent_LRG', np.float64(12.887841091468148)) ('sigma_M_LRG', np.float64(0.5453723089331989))
[Interation 39] ('M_0_LRG', np.float64(12.510184290950674)) ('M_1_LRG', np.float64(13.744674306722525)) ('alpha_LRG', np.float64(1.0459264001304953)) ('f_sigv_LRG', np.float64(0.99609465073059)) ('log_Mcent_LRG', np.float64(12.857395100768072)) ('sigma_M_LRG', np.float64(0.5282264176954637))
[Interation 39] ('M_0_LRG', np.float64(12.521204076071303)) ('M_1_LRG', np.float64(13.744011053703234)) ('alpha_LRG', np.float64(1.0397285676941899)) ('f_sigv_LRG', np.float64(0.9921407656103027)) ('log_Mcent_LRG', np.float64(12.852799852572653)) ('sigma_M_LRG', np.float64(0.5252765974651099))
[Interation 39] ('M_0_LRG', np.float64(12.483334547149711)) ('M_1_LRG', np.float64(13.758545424436996)) ('alpha_LRG', np.float64(1.0630188109465613)) ('f_sigv_LRG', np.float64(0.9976508598514506)) ('log_Mcent_LRG', np.float64(12.86279287822007)) ('sigma_M_LRG', np.float64(0.5289829289662967))
[Interation 39] chi2=1011.6592890193677
[Interation 39] chi2=1078.8014792399972
[Interation 39] chi2=936.434832319419
[Interation 39] chi2=1005.4859728705796
[Interation 39] chi2=1006.6017848664346
[Interation 39] chi2=963.0818895733711
[Interation 39] chi2=920.4498688131237
[Interation 39] chi2=1020.2205399616776
[Interation 39] chi2=1070.413389838719
[Interation 39] chi2=911.1856677391582
[Interation 39] chi2=1016.4180471445296
[Interation 39] chi2=1032.9215575780504
Load data vector for LRG
Load rppi measurements at z0.8-1.1 for LRG...
Load smu measurements at z0.8-1.1 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.507939520210355)) ('M_1_LRG', np.float64(13.769317585258372)) ('alpha_LRG', np.float64(1.0415183863537778)) ('f_sigv_LRG', np.float64(0.9910509698158513)) ('log_Mcent_LRG', np.float64(12.882228232033668)) ('sigma_M_LRG', np.float64(0.5484343035241732))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3135542869567871
Start satellite assignement
Satellite assignement done 0.07331490516662598
LRG mock catalogue done 0.1430220603942871
546658 central galaxies, 89392 satellites, fraction of satellite 0.14 
Done overall time  LRG 0.6274094581604004
