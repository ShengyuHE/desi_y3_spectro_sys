[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_03.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_03.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:29
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:30
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:30
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:31
Compute columns...
Done took  00:00:01
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:31
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py:499: NumbaPerformanceWarning: 
The keyword argument 'parallel=True' was specified but no transformation for parallel execution was possible.

To find out why, try turning on parallel diagnostics, see https://numba.readthedocs.io/en/stable/user/parallel.html#diagnostics for help.

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 415:
@njit(fastmath=True)
def get_etavir_nfw(c): 
^

  etaVir = get_etavir_nfw(c[i])*nfw_rescale
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.737901514333618)) ('M_1_LRG', np.float64(13.846205257654848)) ('alpha_LRG', np.float64(1.0236463374803262)) ('f_sigv_LRG', np.float64(0.8843170951714103)) ('log_Mcent_LRG', np.float64(12.784289970195506)) ('sigma_M_LRG', np.float64(0.3794262836124961))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.822913654243822)) ('M_1_LRG', np.float64(13.838137696747452)) ('alpha_LRG', np.float64(1.023403832311611)) ('f_sigv_LRG', np.float64(0.8672269269432427)) ('log_Mcent_LRG', np.float64(12.818212874687097)) ('sigma_M_LRG', np.float64(0.42581987699198176))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.711309794232925)) ('M_1_LRG', np.float64(13.839593907332898)) ('alpha_LRG', np.float64(1.0457059765097707)) ('f_sigv_LRG', np.float64(0.891447644716068)) ('log_Mcent_LRG', np.float64(12.764192830251764)) ('sigma_M_LRG', np.float64(0.35424476143462713))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.785431007788347)) ('M_1_LRG', np.float64(13.850137316560069)) ('alpha_LRG', np.float64(0.994701088000135)) ('f_sigv_LRG', np.float64(0.8985125685477136)) ('log_Mcent_LRG', np.float64(12.785279809427147)) ('sigma_M_LRG', np.float64(0.3843271152731237))
[Interation 1] chi2=505.9425831567781
[Interation 1] chi2=429.94978260284336
[Interation 1] chi2=412.106832025677
[Interation 1] chi2=380.76127772862293
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.764614904714797)) ('M_1_LRG', np.float64(13.857194368982032)) ('alpha_LRG', np.float64(1.0160150718896017)) ('f_sigv_LRG', np.float64(0.8960535649048219)) ('log_Mcent_LRG', np.float64(12.792930064137817)) ('sigma_M_LRG', np.float64(0.38439613978562054))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.71220815939647)) ('M_1_LRG', np.float64(13.851859416749225)) ('alpha_LRG', np.float64(1.0649553922719546)) ('f_sigv_LRG', np.float64(0.8903857302101544)) ('log_Mcent_LRG', np.float64(12.745426883493465)) ('sigma_M_LRG', np.float64(0.3126483095600886))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.730084955616338)) ('M_1_LRG', np.float64(13.836652653234067)) ('alpha_LRG', np.float64(1.0416647632364142)) ('f_sigv_LRG', np.float64(0.8888065954520428)) ('log_Mcent_LRG', np.float64(12.765823395268606)) ('sigma_M_LRG', np.float64(0.35394534229645286))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.795909850588654)) ('M_1_LRG', np.float64(13.850575587210903)) ('alpha_LRG', np.float64(1.0253776738252067)) ('f_sigv_LRG', np.float64(0.8657399297338512)) ('log_Mcent_LRG', np.float64(12.80551939075171)) ('sigma_M_LRG', np.float64(0.4083755593913412))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.852107199223306)) ('M_1_LRG', np.float64(13.80069127265082)) ('alpha_LRG', np.float64(1.0064949560302676)) ('f_sigv_LRG', np.float64(0.8486927875843531)) ('log_Mcent_LRG', np.float64(12.773292948402368)) ('sigma_M_LRG', np.float64(0.39068124767337975))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.765679198770151)) ('M_1_LRG', np.float64(13.831482365165924)) ('alpha_LRG', np.float64(1.0320197401287086)) ('f_sigv_LRG', np.float64(0.8916303948816314)) ('log_Mcent_LRG', np.float64(12.76757263092392)) ('sigma_M_LRG', np.float64(0.3592464048335329))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.807179019103843)) ('M_1_LRG', np.float64(13.800461066615489)) ('alpha_LRG', np.float64(1.0147591485022336)) ('f_sigv_LRG', np.float64(0.8683235850697011)) ('log_Mcent_LRG', np.float64(12.758295975036155)) ('sigma_M_LRG', np.float64(0.3475608976957023))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.78988165050435)) ('M_1_LRG', np.float64(13.84355773245442)) ('alpha_LRG', np.float64(1.0230060332672364)) ('f_sigv_LRG', np.float64(0.8643089574777202)) ('log_Mcent_LRG', np.float64(12.779625228473316)) ('sigma_M_LRG', np.float64(0.37503356433366875))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.658071762559587)) ('M_1_LRG', np.float64(13.861993968458547)) ('alpha_LRG', np.float64(1.0576547031651222)) ('f_sigv_LRG', np.float64(0.8881105226852216)) ('log_Mcent_LRG', np.float64(12.75828326685693)) ('sigma_M_LRG', np.float64(0.3411997518590475))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.803737698636882)) ('M_1_LRG', np.float64(13.845491656604102)) ('alpha_LRG', np.float64(0.9962055841573223)) ('f_sigv_LRG', np.float64(0.8703959704303084)) ('log_Mcent_LRG', np.float64(12.775758014420047)) ('sigma_M_LRG', np.float64(0.3687030546892739))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.72027290066208)) ('M_1_LRG', np.float64(13.841788432878426)) ('alpha_LRG', np.float64(1.0361073219041455)) ('f_sigv_LRG', np.float64(0.8902418565058849)) ('log_Mcent_LRG', np.float64(12.758290968100907)) ('sigma_M_LRG', np.float64(0.3344443487176589))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 1] ('M_0_LRG', np.float64(12.80109534067218)) ('M_1_LRG', np.float64(13.851637332172512)) ('alpha_LRG', np.float64(1.0165243954785792)) ('f_sigv_LRG', np.float64(0.8579456418458367)) ('log_Mcent_LRG', np.float64(12.792298633694129)) ('sigma_M_LRG', np.float64(0.3904745761224981))
[Interation 1] chi2=447.6350900172448
[Interation 1] chi2=443.6189761069356
[Interation 1] chi2=412.557385582088
[Interation 1] chi2=403.52974201459665
[Interation 1] chi2=422.6065065913155
[Interation 1] chi2=438.1034815502639
[Interation 1] chi2=447.9249946276504
[Interation 1] chi2=442.38634304262854
[Interation 1] chi2=448.6997047258366
[Interation 1] chi2=458.2973670892514
[Interation 1] chi2=395.4135759415131
[Interation 1] chi2=400.720078595986
[Interation 2] ('M_0_LRG', np.float64(12.841725590616122)) ('M_1_LRG', np.float64(13.819509698331363)) ('alpha_LRG', np.float64(0.9782180756931825)) ('f_sigv_LRG', np.float64(0.8713965981730332)) ('log_Mcent_LRG', np.float64(12.77525723358231)) ('sigma_M_LRG', np.float64(0.3728228380652801))
[Interation 2] ('M_0_LRG', np.float64(12.84136160130224)) ('M_1_LRG', np.float64(13.848861047258062)) ('alpha_LRG', np.float64(0.9926254760074624)) ('f_sigv_LRG', np.float64(0.8586272940672245)) ('log_Mcent_LRG', np.float64(12.81144932915263)) ('sigma_M_LRG', np.float64(0.4088947249961052))
[Interation 2] ('M_0_LRG', np.float64(12.80223801923298)) ('M_1_LRG', np.float64(13.821771718577189)) ('alpha_LRG', np.float64(1.0000480811547923)) ('f_sigv_LRG', np.float64(0.8871687634918741)) ('log_Mcent_LRG', np.float64(12.750299877057932)) ('sigma_M_LRG', np.float64(0.3322298115239456))
[Interation 2] ('M_0_LRG', np.float64(12.777903327239473)) ('M_1_LRG', np.float64(13.843555250476461)) ('alpha_LRG', np.float64(1.0378879904607516)) ('f_sigv_LRG', np.float64(0.8803232814483093)) ('log_Mcent_LRG', np.float64(12.786299084877202)) ('sigma_M_LRG', np.float64(0.38073085578231897))
[Interation 2] chi2=430.70950699120607
[Interation 2] chi2=445.20688926472116
[Interation 2] chi2=434.7565816091787
[Interation 2] chi2=419.3516220790857
[Interation 2] ('M_0_LRG', np.float64(12.794834517097815)) ('M_1_LRG', np.float64(13.853874531198201)) ('alpha_LRG', np.float64(1.0201802573164762)) ('f_sigv_LRG', np.float64(0.8722413653370786)) ('log_Mcent_LRG', np.float64(12.801215112562666)) ('sigma_M_LRG', np.float64(0.39669088938193164))
[Interation 2] ('M_0_LRG', np.float64(12.80304147661369)) ('M_1_LRG', np.float64(13.853343944528996)) ('alpha_LRG', np.float64(1.0073528447376983)) ('f_sigv_LRG', np.float64(0.8798207818146566)) ('log_Mcent_LRG', np.float64(12.797969404100257)) ('sigma_M_LRG', np.float64(0.3911814151483778))
[Interation 2] ('M_0_LRG', np.float64(12.805835032843321)) ('M_1_LRG', np.float64(13.852188357515054)) ('alpha_LRG', np.float64(0.9974717854273418)) ('f_sigv_LRG', np.float64(0.8808657376270967)) ('log_Mcent_LRG', np.float64(12.792993788015613)) ('sigma_M_LRG', np.float64(0.38572797651757396))
[Interation 2] ('M_0_LRG', np.float64(12.821356991478792)) ('M_1_LRG', np.float64(13.827655444659765)) ('alpha_LRG', np.float64(0.99284137767806)) ('f_sigv_LRG', np.float64(0.8686653765230234)) ('log_Mcent_LRG', np.float64(12.770273998570818)) ('sigma_M_LRG', np.float64(0.36200692501096443))
[Interation 2] ('M_0_LRG', np.float64(12.83989911498518)) ('M_1_LRG', np.float64(13.866338696234962)) ('alpha_LRG', np.float64(0.9890191831674153)) ('f_sigv_LRG', np.float64(0.8761936717629943)) ('log_Mcent_LRG', np.float64(12.84080062858031)) ('sigma_M_LRG', np.float64(0.4535561876515421))
[Interation 2] ('M_0_LRG', np.float64(12.81112397783281)) ('M_1_LRG', np.float64(13.804146365294395)) ('alpha_LRG', np.float64(0.9803376151582902)) ('f_sigv_LRG', np.float64(0.8797330679115635)) ('log_Mcent_LRG', np.float64(12.73166979741869)) ('sigma_M_LRG', np.float64(0.31687688399543323))
[Interation 2] ('M_0_LRG', np.float64(12.83324534194463)) ('M_1_LRG', np.float64(13.856190171880563)) ('alpha_LRG', np.float64(1.0004859980573406)) ('f_sigv_LRG', np.float64(0.8825678847629077)) ('log_Mcent_LRG', np.float64(12.820100622122645)) ('sigma_M_LRG', np.float64(0.42394221507818997))
[Interation 2] ('M_0_LRG', np.float64(12.816556106004084)) ('M_1_LRG', np.float64(13.83403617586294)) ('alpha_LRG', np.float64(0.9957496370347618)) ('f_sigv_LRG', np.float64(0.8819036231573079)) ('log_Mcent_LRG', np.float64(12.768002457570852)) ('sigma_M_LRG', np.float64(0.3521317213816306))
[Interation 2] ('M_0_LRG', np.float64(12.79646384676055)) ('M_1_LRG', np.float64(13.836854691399859)) ('alpha_LRG', np.float64(1.0231791848775427)) ('f_sigv_LRG', np.float64(0.8707738571363822)) ('log_Mcent_LRG', np.float64(12.781751938585113)) ('sigma_M_LRG', np.float64(0.37297929827162557))
[Interation 2] ('M_0_LRG', np.float64(12.825845893729161)) ('M_1_LRG', np.float64(13.837949979222355)) ('alpha_LRG', np.float64(0.9969927622583267)) ('f_sigv_LRG', np.float64(0.8701255082886361)) ('log_Mcent_LRG', np.float64(12.791453810220949)) ('sigma_M_LRG', np.float64(0.39261359669205204))
[Interation 2] ('M_0_LRG', np.float64(12.810049325713749)) ('M_1_LRG', np.float64(13.827140123000067)) ('alpha_LRG', np.float64(0.9935679289591798)) ('f_sigv_LRG', np.float64(0.8723763610878277)) ('log_Mcent_LRG', np.float64(12.77568506585781)) ('sigma_M_LRG', np.float64(0.37854843476817657))
[Interation 2] ('M_0_LRG', np.float64(12.808731030327575)) ('M_1_LRG', np.float64(13.833400019286652)) ('alpha_LRG', np.float64(1.011000484663905)) ('f_sigv_LRG', np.float64(0.8634846536583638)) ('log_Mcent_LRG', np.float64(12.774998674089096)) ('sigma_M_LRG', np.float64(0.3749246338203508))
[Interation 2] chi2=389.2857021328439
[Interation 2] chi2=411.83241877902026
[Interation 2] chi2=425.1591862446117
[Interation 2] chi2=446.01353878758135
[Interation 2] chi2=413.5634562221698
[Interation 2] chi2=429.6425675924791
[Interation 2] chi2=403.65101515740963
[Interation 2] chi2=393.3883083623016
[Interation 2] chi2=417.95574088304636
[Interation 2] chi2=400.2131354942449
[Interation 2] chi2=397.4934044916533
[Interation 2] chi2=430.5768172113238
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_04.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_04.npy
Set number of threads to 32
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.815250695720016)) ('M_1_LRG', np.float64(13.846950051330685)) ('alpha_LRG', np.float64(1.0138108192857405)) ('f_sigv_LRG', np.float64(0.8633840654233988)) ('log_Mcent_LRG', np.float64(12.808852390362482)) ('sigma_M_LRG', np.float64(0.41442968425167986))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 1.241215705871582
Start satellite assignement
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/numba/parfors/parfor.py:2395: NumbaPerformanceWarning: 
prange or pndindex loop will not be executed in parallel due to there being more than one entry to or exit from the loop (e.g., an assertion).

File "../../../../../../../homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/utils.py", line 487:
def compute_fast_NFW(x_h, y_h, z_h, vx_h, vy_h, vz_h, c, M, Rvir, rd_pos, rd_vel, exp_frac=0, exp_scale=1, nfw_rescale=1, vrms_h=None, f_sigv=None, v_infall=None, vel_sat='NFW', Nthread=32, seed=None):
    <source elided>
    hstart = np.rint(np.linspace(0, x_h.size, Nthread + 1))
    for tid in numba.prange(Nthread):
    ^

  warnings.warn(
Satellite assignement done 1.8523802757263184
LRG mock catalogue done 1.924325942993164
613261 central galaxies, 86008 satellites, fraction of satellite 0.12 
Done overall time  LRG 3.3469302654266357
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_04.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:17
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:27
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:28
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:17
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
/global/homes/s/shengyu/.conda/envs/hod_env/lib/python3.11/site-packages/HODDIES/hod.py:526: UserWarning: Ac=1.0 or As=1.0 is > 1, the density is not fixed to 0.0007
  warnings.warn(f'Ac={hod_list_param_cen[0]} or As={hod_list_param_cen[0]} is > 1, the density is not fixed to {self.args[tracer]["density"]}')
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.272036438698862)) ('M_1_LRG', np.float64(14.001837822726857)) ('alpha_LRG', np.float64(1.1065336510894583)) ('f_sigv_LRG', np.float64(0.8963873285955922)) ('log_Mcent_LRG', np.float64(12.839120406985844)) ('sigma_M_LRG', np.float64(0.4231765216254285))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.359132686289922)) ('M_1_LRG', np.float64(13.770859124491055)) ('alpha_LRG', np.float64(1.1271692668914228)) ('f_sigv_LRG', np.float64(0.8264156076494544)) ('log_Mcent_LRG', np.float64(12.611309484218085)) ('sigma_M_LRG', np.float64(0.24460096347381266))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.566538030853694)) ('M_1_LRG', np.float64(13.871887749471044)) ('alpha_LRG', np.float64(1.046926217367092)) ('f_sigv_LRG', np.float64(0.9673899490015092)) ('log_Mcent_LRG', np.float64(12.719289115478247)) ('sigma_M_LRG', np.float64(0.29721686679636905))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.485152945316852)) ('M_1_LRG', np.float64(13.870522369077046)) ('alpha_LRG', np.float64(1.1269996562385072)) ('f_sigv_LRG', np.float64(0.9472047069224665)) ('log_Mcent_LRG', np.float64(12.842535374382827)) ('sigma_M_LRG', np.float64(0.5233443673716665))
[Interation 3] chi2=578.9726347994426
[Interation 3] chi2=917.1109773113326
[Interation 3] chi2=563.5601165069054
[Interation 3] chi2=948.7681763880443
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.753053978261564)) ('M_1_LRG', np.float64(13.936446272999907)) ('alpha_LRG', np.float64(1.040562639557452)) ('f_sigv_LRG', np.float64(0.8948044026078075)) ('log_Mcent_LRG', np.float64(12.867344803625379)) ('sigma_M_LRG', np.float64(0.4398097287875445))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.662143703285548)) ('M_1_LRG', np.float64(13.818020409366264)) ('alpha_LRG', np.float64(1.000690088479613)) ('f_sigv_LRG', np.float64(0.9175529753066697)) ('log_Mcent_LRG', np.float64(12.759682770432427)) ('sigma_M_LRG', np.float64(0.359761789681328))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.551914454922075)) ('M_1_LRG', np.float64(13.919327600516182)) ('alpha_LRG', np.float64(1.1918002279326818)) ('f_sigv_LRG', np.float64(0.8878162060141533)) ('log_Mcent_LRG', np.float64(12.889721756351065)) ('sigma_M_LRG', np.float64(0.4703576288853945))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.593174913005212)) ('M_1_LRG', np.float64(13.914276140710072)) ('alpha_LRG', np.float64(1.035208811875923)) ('f_sigv_LRG', np.float64(0.9431310201236823)) ('log_Mcent_LRG', np.float64(12.818724900329759)) ('sigma_M_LRG', np.float64(0.42245018222363495))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.981152374951655)) ('M_1_LRG', np.float64(13.78668338668244)) ('alpha_LRG', np.float64(0.9642177825834933)) ('f_sigv_LRG', np.float64(0.8496258995816144)) ('log_Mcent_LRG', np.float64(12.768213706223312)) ('sigma_M_LRG', np.float64(0.37384030814975266))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.901454945503994)) ('M_1_LRG', np.float64(13.792855966528776)) ('alpha_LRG', np.float64(1.030601364167536)) ('f_sigv_LRG', np.float64(0.8631455642457123)) ('log_Mcent_LRG', np.float64(12.74168451134382)) ('sigma_M_LRG', np.float64(0.3155091690290067))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.502098767178001)) ('M_1_LRG', np.float64(13.932172237247727)) ('alpha_LRG', np.float64(1.1471663164906096)) ('f_sigv_LRG', np.float64(0.8950743676622677)) ('log_Mcent_LRG', np.float64(12.842159175762541)) ('sigma_M_LRG', np.float64(0.42936594590015625))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.67471113971175)) ('M_1_LRG', np.float64(13.920310348153878)) ('alpha_LRG', np.float64(1.033253160671636)) ('f_sigv_LRG', np.float64(0.8975011638586023)) ('log_Mcent_LRG', np.float64(12.871669235688085)) ('sigma_M_LRG', np.float64(0.48620845434568716))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.648961128705789)) ('M_1_LRG', np.float64(13.84692917360619)) ('alpha_LRG', np.float64(1.0907446280150768)) ('f_sigv_LRG', np.float64(0.8365152027967409)) ('log_Mcent_LRG', np.float64(12.816742646916296)) ('sigma_M_LRG', np.float64(0.45119641933430316))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.732953031816411)) ('M_1_LRG', np.float64(13.880115333601088)) ('alpha_LRG', np.float64(1.0133429921605723)) ('f_sigv_LRG', np.float64(0.864724949316652)) ('log_Mcent_LRG', np.float64(12.8168346887742)) ('sigma_M_LRG', np.float64(0.4132954365210155))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.792838338731903)) ('M_1_LRG', np.float64(13.871586999392395)) ('alpha_LRG', np.float64(0.9141516114535845)) ('f_sigv_LRG', np.float64(0.9325519864913353)) ('log_Mcent_LRG', np.float64(12.803231622473707)) ('sigma_M_LRG', np.float64(0.3914469065352618))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 3] ('M_0_LRG', np.float64(12.609065553181356)) ('M_1_LRG', np.float64(13.893885207564349)) ('alpha_LRG', np.float64(1.0865454717802254)) ('f_sigv_LRG', np.float64(0.8871716012110042)) ('log_Mcent_LRG', np.float64(12.820577758185006)) ('sigma_M_LRG', np.float64(0.4247773843643329))
[Interation 3] chi2=442.025138847672
[Interation 3] chi2=621.5035684220303
[Interation 3] chi2=570.5444405042759
[Interation 3] chi2=491.72208916976064
[Interation 3] chi2=551.8535258552391
[Interation 3] chi2=555.9444474753523
[Interation 3] chi2=404.5686994755235
[Interation 3] chi2=439.73766650636884
[Interation 3] chi2=461.9206274001548
[Interation 3] chi2=453.27802325295664
[Interation 3] chi2=458.69556690016725
[Interation 3] chi2=461.3109701610429
[Interation 4] ('M_0_LRG', np.float64(12.741012356463953)) ('M_1_LRG', np.float64(13.904482172304103)) ('alpha_LRG', np.float64(1.0652209402356496)) ('f_sigv_LRG', np.float64(0.8827617901388917)) ('log_Mcent_LRG', np.float64(12.877114475035388)) ('sigma_M_LRG', np.float64(0.4801918263263919))
[Interation 4] ('M_0_LRG', np.float64(12.746315624932114)) ('M_1_LRG', np.float64(13.867879339973193)) ('alpha_LRG', np.float64(1.0389824960413419)) ('f_sigv_LRG', np.float64(0.8818808384846302)) ('log_Mcent_LRG', np.float64(12.81090166050318)) ('sigma_M_LRG', np.float64(0.41541168437809783))
[Interation 4] ('M_0_LRG', np.float64(12.773545692407504)) ('M_1_LRG', np.float64(13.859310154222541)) ('alpha_LRG', np.float64(1.025514509692137)) ('f_sigv_LRG', np.float64(0.8919244306485852)) ('log_Mcent_LRG', np.float64(12.79967483583519)) ('sigma_M_LRG', np.float64(0.3936111841965121))
[Interation 4] ('M_0_LRG', np.float64(12.781351902146)) ('M_1_LRG', np.float64(13.86199548577389)) ('alpha_LRG', np.float64(1.033220573131917)) ('f_sigv_LRG', np.float64(0.8755466732925294)) ('log_Mcent_LRG', np.float64(12.822451549061041)) ('sigma_M_LRG', np.float64(0.42791377322226903))
[Interation 4] chi2=459.45595144612565
[Interation 4] chi2=460.1391853066004
[Interation 4] chi2=475.07938555628664
[Interation 4] chi2=406.8584033071828
[Interation 4] ('M_0_LRG', np.float64(12.76584711925186)) ('M_1_LRG', np.float64(13.879978717336366)) ('alpha_LRG', np.float64(1.0251081743678936)) ('f_sigv_LRG', np.float64(0.8846244335890143)) ('log_Mcent_LRG', np.float64(12.811482997453128)) ('sigma_M_LRG', np.float64(0.40312629673439404))
[Interation 4] ('M_0_LRG', np.float64(12.763522522772961)) ('M_1_LRG', np.float64(13.879500383858419)) ('alpha_LRG', np.float64(1.0363597938059237)) ('f_sigv_LRG', np.float64(0.8812137728625498)) ('log_Mcent_LRG', np.float64(12.8322707317069)) ('sigma_M_LRG', np.float64(0.4288852755502527))
[Interation 4] ('M_0_LRG', np.float64(12.780234962032418)) ('M_1_LRG', np.float64(13.836814716578521)) ('alpha_LRG', np.float64(1.0435830850389323)) ('f_sigv_LRG', np.float64(0.8777957459837952)) ('log_Mcent_LRG', np.float64(12.77989517844064)) ('sigma_M_LRG', np.float64(0.3822342111403057))
[Interation 4] ('M_0_LRG', np.float64(12.747402353522233)) ('M_1_LRG', np.float64(13.90385648443935)) ('alpha_LRG', np.float64(1.050070293448133)) ('f_sigv_LRG', np.float64(0.8855843313586012)) ('log_Mcent_LRG', np.float64(12.868436367150927)) ('sigma_M_LRG', np.float64(0.4688900676530267))
[Interation 4] ('M_0_LRG', np.float64(12.771082266970478)) ('M_1_LRG', np.float64(13.855477780762493)) ('alpha_LRG', np.float64(1.0239615487843732)) ('f_sigv_LRG', np.float64(0.8875974731715426)) ('log_Mcent_LRG', np.float64(12.805226051549583)) ('sigma_M_LRG', np.float64(0.4050488032333134))
[Interation 4] ('M_0_LRG', np.float64(12.77093665558328)) ('M_1_LRG', np.float64(13.910732111631898)) ('alpha_LRG', np.float64(1.0395397039226075)) ('f_sigv_LRG', np.float64(0.8791023145985448)) ('log_Mcent_LRG', np.float64(12.863538302379977)) ('sigma_M_LRG', np.float64(0.4556920859027861))
[Interation 4] ('M_0_LRG', np.float64(12.753897402148647)) ('M_1_LRG', np.float64(13.854735412998046)) ('alpha_LRG', np.float64(1.0217536762760235)) ('f_sigv_LRG', np.float64(0.900214943798011)) ('log_Mcent_LRG', np.float64(12.784975128106817)) ('sigma_M_LRG', np.float64(0.3751773450318292))
[Interation 4] ('M_0_LRG', np.float64(12.770781007416488)) ('M_1_LRG', np.float64(13.913551239020535)) ('alpha_LRG', np.float64(1.0276738008017903)) ('f_sigv_LRG', np.float64(0.8711890522113936)) ('log_Mcent_LRG', np.float64(12.869049879022409)) ('sigma_M_LRG', np.float64(0.4650129964201899))
[Interation 4] ('M_0_LRG', np.float64(12.79416773993262)) ('M_1_LRG', np.float64(13.866248495313814)) ('alpha_LRG', np.float64(1.0077302025835462)) ('f_sigv_LRG', np.float64(0.8891699651522705)) ('log_Mcent_LRG', np.float64(12.815328177664304)) ('sigma_M_LRG', np.float64(0.4148083081103756))
[Interation 4] ('M_0_LRG', np.float64(12.764938373450802)) ('M_1_LRG', np.float64(13.910884084402216)) ('alpha_LRG', np.float64(1.0185551144511114)) ('f_sigv_LRG', np.float64(0.8911107595448425)) ('log_Mcent_LRG', np.float64(12.871133348412586)) ('sigma_M_LRG', np.float64(0.46649283535653424))
[Interation 4] ('M_0_LRG', np.float64(12.769229969039703)) ('M_1_LRG', np.float64(13.856359823869752)) ('alpha_LRG', np.float64(1.0200919877428685)) ('f_sigv_LRG', np.float64(0.8824979942392474)) ('log_Mcent_LRG', np.float64(12.780248528217207)) ('sigma_M_LRG', np.float64(0.37112585132311265))
[Interation 4] ('M_0_LRG', np.float64(12.771395689482322)) ('M_1_LRG', np.float64(13.889861266746765)) ('alpha_LRG', np.float64(1.0235909903500278)) ('f_sigv_LRG', np.float64(0.8910281936505761)) ('log_Mcent_LRG', np.float64(12.842905046204464)) ('sigma_M_LRG', np.float64(0.44319249562092833))
[Interation 4] chi2=433.0136527585893
[Interation 4] chi2=432.6541310602435
[Interation 4] chi2=435.96785162568005
[Interation 4] chi2=443.4261161380039
[Interation 4] chi2=353.86405660082664
[Interation 4] chi2=430.6559836836002
[Interation 4] chi2=465.93127043980087
[Interation 4] chi2=458.4899582317376
[Interation 4] chi2=444.08004039695646
[Interation 4] chi2=414.19777542549747
[Interation 4] chi2=422.85056991977643
[Interation 4] chi2=378.5619567249069
[Interation 5] ('M_0_LRG', np.float64(12.782118644381756)) ('M_1_LRG', np.float64(13.846971053385364)) ('alpha_LRG', np.float64(1.0315919871906711)) ('f_sigv_LRG', np.float64(0.8814574461289957)) ('log_Mcent_LRG', np.float64(12.800224131780256)) ('sigma_M_LRG', np.float64(0.39993036454940845))
[Interation 5] ('M_0_LRG', np.float64(12.772546238362516)) ('M_1_LRG', np.float64(13.850537634127663)) ('alpha_LRG', np.float64(1.0397589883509797)) ('f_sigv_LRG', np.float64(0.8833546185158524)) ('log_Mcent_LRG', np.float64(12.801501089201292)) ('sigma_M_LRG', np.float64(0.39799069125151987))
[Interation 5] ('M_0_LRG', np.float64(12.784686517662557)) ('M_1_LRG', np.float64(13.855880405414565)) ('alpha_LRG', np.float64(1.0191763944536285)) ('f_sigv_LRG', np.float64(0.8789776667046371)) ('log_Mcent_LRG', np.float64(12.809571806507767)) ('sigma_M_LRG', np.float64(0.40800715816363636))
[Interation 5] ('M_0_LRG', np.float64(12.77821625876307)) ('M_1_LRG', np.float64(13.857391693565617)) ('alpha_LRG', np.float64(1.0225051036900699)) ('f_sigv_LRG', np.float64(0.8772468903690341)) ('log_Mcent_LRG', np.float64(12.809023454098732)) ('sigma_M_LRG', np.float64(0.40985622640326824))
[Interation 5] chi2=403.6955764698872
[Interation 5] chi2=406.02717065797947
[Interation 5] chi2=425.20544327096303
[Interation 5] chi2=423.8436845083909
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_05.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_05.npy
Set number of threads to 32
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.777331085389632)) ('M_1_LRG', np.float64(13.871605750091414)) ('alpha_LRG', np.float64(1.0192845913172974)) ('f_sigv_LRG', np.float64(0.8925019011113914)) ('log_Mcent_LRG', np.float64(12.826799700211636)) ('sigma_M_LRG', np.float64(0.42529351403118987))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3315083980560303
Start satellite assignement
Satellite assignement done 0.07234406471252441
LRG mock catalogue done 0.14937782287597656
614094 central galaxies, 86885 satellites, fraction of satellite 0.12 
Done overall time  LRG 0.6669683456420898
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_05.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:26
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:26
Load smu measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:27
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.547208196288816)) ('M_1_LRG', np.float64(13.531473270502328)) ('alpha_LRG', np.float64(0.9693254190696258)) ('f_sigv_LRG', np.float64(0.9881993734428105)) ('log_Mcent_LRG', np.float64(12.765793882263168)) ('sigma_M_LRG', np.float64(0.48528005231194443))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.509649639654251)) ('M_1_LRG', np.float64(13.478137773484141)) ('alpha_LRG', np.float64(1.0060480869700816)) ('f_sigv_LRG', np.float64(0.965392477261979)) ('log_Mcent_LRG', np.float64(12.578121311569996)) ('sigma_M_LRG', np.float64(0.4305666444085311))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.446395757284963)) ('M_1_LRG', np.float64(13.542104307927367)) ('alpha_LRG', np.float64(1.0589075333173326)) ('f_sigv_LRG', np.float64(0.9353877314819151)) ('log_Mcent_LRG', np.float64(12.718423635841992)) ('sigma_M_LRG', np.float64(0.43714624331569396))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.40952362642402)) ('M_1_LRG', np.float64(13.534603627179767)) ('alpha_LRG', np.float64(0.972704445131687)) ('f_sigv_LRG', np.float64(1.0652933334883072)) ('log_Mcent_LRG', np.float64(12.716379862913152)) ('sigma_M_LRG', np.float64(0.5317463646789192))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.452957263136543)) ('M_1_LRG', np.float64(13.340728027342745)) ('alpha_LRG', np.float64(0.8821853821417359)) ('f_sigv_LRG', np.float64(1.0168445366573249)) ('log_Mcent_LRG', np.float64(12.741337732987887)) ('sigma_M_LRG', np.float64(0.4678930437619153))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.503759293096394)) ('M_1_LRG', np.float64(13.635661465657588)) ('alpha_LRG', np.float64(0.9071778380844884)) ('f_sigv_LRG', np.float64(0.9843634877749832)) ('log_Mcent_LRG', np.float64(12.740983965160801)) ('sigma_M_LRG', np.float64(0.5650153708497131))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.509950942635047)) ('M_1_LRG', np.float64(13.534262519359832)) ('alpha_LRG', np.float64(1.0380999532415114)) ('f_sigv_LRG', np.float64(0.9867468193519813)) ('log_Mcent_LRG', np.float64(12.816257894474107)) ('sigma_M_LRG', np.float64(0.5752364012669127))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.47575526855053)) ('M_1_LRG', np.float64(13.536837944830223)) ('alpha_LRG', np.float64(1.0318182622198298)) ('f_sigv_LRG', np.float64(1.0126934821179685)) ('log_Mcent_LRG', np.float64(12.724345765507685)) ('sigma_M_LRG', np.float64(0.45577620770793353))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.524182456053332)) ('M_1_LRG', np.float64(13.485707376965674)) ('alpha_LRG', np.float64(1.075333206666725)) ('f_sigv_LRG', np.float64(1.021965882491659)) ('log_Mcent_LRG', np.float64(12.73108010983113)) ('sigma_M_LRG', np.float64(0.5921740039379121))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.517098202542888)) ('M_1_LRG', np.float64(13.549798003749956)) ('alpha_LRG', np.float64(1.0216987446080303)) ('f_sigv_LRG', np.float64(0.9872690675536131)) ('log_Mcent_LRG', np.float64(12.713121040373538)) ('sigma_M_LRG', np.float64(0.48389923015937636))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.537940453670625)) ('M_1_LRG', np.float64(13.537818137134114)) ('alpha_LRG', np.float64(0.9418818527875552)) ('f_sigv_LRG', np.float64(1.0346266020023547)) ('log_Mcent_LRG', np.float64(12.777285511977693)) ('sigma_M_LRG', np.float64(0.45006886563203025))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 5] ('M_0_LRG', np.float64(12.625744984116078)) ('M_1_LRG', np.float64(13.516918457357125)) ('alpha_LRG', np.float64(1.0052428234158965)) ('f_sigv_LRG', np.float64(0.9631091859343711)) ('log_Mcent_LRG', np.float64(12.761859126799488)) ('sigma_M_LRG', np.float64(0.45988785250848563))
[Interation 5] chi2=4442.973453364923
[Interation 5] chi2=2904.9537421304826
[Interation 5] chi2=4027.609632583048
[Interation 5] chi2=3560.1204911732184
[Interation 5] chi2=11158.486922720645
[Interation 5] chi2=4760.524663220508
[Interation 5] chi2=2929.3993282024253
[Interation 5] chi2=4051.286213638791
[Interation 5] chi2=4680.207754286637
[Interation 5] chi2=2835.610096606552
[Interation 5] chi2=6111.825992822657
[Interation 5] chi2=5279.045647717762
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 6] ('M_0_LRG', np.float64(12.880937223571737)) ('M_1_LRG', np.float64(13.847098262516818)) ('alpha_LRG', np.float64(0.973188582513166)) ('f_sigv_LRG', np.float64(0.9000750871003274)) ('log_Mcent_LRG', np.float64(12.808381653462275)) ('sigma_M_LRG', np.float64(0.39371181795779864))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 6] ('M_0_LRG', np.float64(12.907046949464895)) ('M_1_LRG', np.float64(13.914237080486027)) ('alpha_LRG', np.float64(0.9503565949588934)) ('f_sigv_LRG', np.float64(0.8720126577094276)) ('log_Mcent_LRG', np.float64(12.912578363982648)) ('sigma_M_LRG', np.float64(0.5101420878344619))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 6] ('M_0_LRG', np.float64(12.820875786452081)) ('M_1_LRG', np.float64(13.923153559634548)) ('alpha_LRG', np.float64(0.9492210262015631)) ('f_sigv_LRG', np.float64(0.9111984293161144)) ('log_Mcent_LRG', np.float64(12.891658557451855)) ('sigma_M_LRG', np.float64(0.480157927071664))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 6] ('M_0_LRG', np.float64(12.885419576427589)) ('M_1_LRG', np.float64(13.903032188577498)) ('alpha_LRG', np.float64(0.9361169386968585)) ('f_sigv_LRG', np.float64(0.8722038213890764)) ('log_Mcent_LRG', np.float64(12.865324735074665)) ('sigma_M_LRG', np.float64(0.4609332745639864))
[Interation 6] chi2=422.8607847799489
[Interation 6] chi2=440.48782815805725
[Interation 6] chi2=468.35314869086284
[Interation 6] chi2=426.4950795913134
[Interation 6] ('M_0_LRG', np.float64(12.844041979695355)) ('M_1_LRG', np.float64(13.838868251298361)) ('alpha_LRG', np.float64(0.994582465546164)) ('f_sigv_LRG', np.float64(0.8791093655005654)) ('log_Mcent_LRG', np.float64(12.801469869901894)) ('sigma_M_LRG', np.float64(0.4002508545269887))
[Interation 6] ('M_0_LRG', np.float64(12.805898647995972)) ('M_1_LRG', np.float64(13.800068447581895)) ('alpha_LRG', np.float64(1.0130941509741844)) ('f_sigv_LRG', np.float64(0.8744034508567249)) ('log_Mcent_LRG', np.float64(12.754937967067209)) ('sigma_M_LRG', np.float64(0.3575957006674204))
[Interation 6] ('M_0_LRG', np.float64(12.827165557841523)) ('M_1_LRG', np.float64(13.818139694832475)) ('alpha_LRG', np.float64(1.0296631948929913)) ('f_sigv_LRG', np.float64(0.8579654976846434)) ('log_Mcent_LRG', np.float64(12.79570783590658)) ('sigma_M_LRG', np.float64(0.40523335362849955))
[Interation 6] ('M_0_LRG', np.float64(12.828526176804054)) ('M_1_LRG', np.float64(13.872133087498229)) ('alpha_LRG', np.float64(0.9689212675762158)) ('f_sigv_LRG', np.float64(0.8883275620581415)) ('log_Mcent_LRG', np.float64(12.82366676252799)) ('sigma_M_LRG', np.float64(0.4202679967951805))
[Interation 6] ('M_0_LRG', np.float64(12.944869889699019)) ('M_1_LRG', np.float64(13.812679461851335)) ('alpha_LRG', np.float64(0.9231449819867321)) ('f_sigv_LRG', np.float64(0.8495666890699779)) ('log_Mcent_LRG', np.float64(12.797111889032454)) ('sigma_M_LRG', np.float64(0.4032275006265883))
[Interation 6] ('M_0_LRG', np.float64(12.873287868275584)) ('M_1_LRG', np.float64(13.865399096702152)) ('alpha_LRG', np.float64(0.9472693829869473)) ('f_sigv_LRG', np.float64(0.8867619974820313)) ('log_Mcent_LRG', np.float64(12.82268240995417)) ('sigma_M_LRG', np.float64(0.4149088647257554))
[Interation 6] ('M_0_LRG', np.float64(12.882490926768625)) ('M_1_LRG', np.float64(13.843041296339196)) ('alpha_LRG', np.float64(0.9587972957935824)) ('f_sigv_LRG', np.float64(0.8837168035483105)) ('log_Mcent_LRG', np.float64(12.822417443565609)) ('sigma_M_LRG', np.float64(0.42630380838926))
[Interation 6] ('M_0_LRG', np.float64(12.757651887331773)) ('M_1_LRG', np.float64(13.878949978407263)) ('alpha_LRG', np.float64(1.049063138167255)) ('f_sigv_LRG', np.float64(0.8856111917937696)) ('log_Mcent_LRG', np.float64(12.854581998016341)) ('sigma_M_LRG', np.float64(0.4665119922710382))
[Interation 6] ('M_0_LRG', np.float64(12.855113490509092)) ('M_1_LRG', np.float64(13.871386983021026)) ('alpha_LRG', np.float64(0.9618591605512075)) ('f_sigv_LRG', np.float64(0.8939550756602521)) ('log_Mcent_LRG', np.float64(12.82873241761953)) ('sigma_M_LRG', np.float64(0.4178844206449524))
[Interation 6] ('M_0_LRG', np.float64(12.830230632882246)) ('M_1_LRG', np.float64(13.901124241448398)) ('alpha_LRG', np.float64(0.9546426630604639)) ('f_sigv_LRG', np.float64(0.8946365862923048)) ('log_Mcent_LRG', np.float64(12.858360127277285)) ('sigma_M_LRG', np.float64(0.4528690584764932))
[Interation 6] ('M_0_LRG', np.float64(12.779480933877476)) ('M_1_LRG', np.float64(13.834358132541203)) ('alpha_LRG', np.float64(0.9862642110089886)) ('f_sigv_LRG', np.float64(0.873310695260677)) ('log_Mcent_LRG', np.float64(12.759143971441313)) ('sigma_M_LRG', np.float64(0.35428271094537234))
[Interation 6] ('M_0_LRG', np.float64(12.760734603585105)) ('M_1_LRG', np.float64(13.888696888118345)) ('alpha_LRG', np.float64(1.0722021753748165)) ('f_sigv_LRG', np.float64(0.8684709205698918)) ('log_Mcent_LRG', np.float64(12.86011005573765)) ('sigma_M_LRG', np.float64(0.4610802447676949))
[Interation 6] chi2=445.2817544589233
[Interation 6] chi2=443.68207587636124
[Interation 6] chi2=431.0338116181071
[Interation 6] chi2=428.03801450207266
[Interation 6] chi2=399.0641242599058
[Interation 6] chi2=425.17099501526457
[Interation 6] chi2=396.08155503222747
[Interation 6] chi2=427.5798088681681
[Interation 6] chi2=467.65664036584
[Interation 6] chi2=401.42380694157544
[Interation 6] chi2=422.3359960819099
[Interation 6] chi2=444.70033657574265
[Interation 7] ('M_0_LRG', np.float64(12.896399538998521)) ('M_1_LRG', np.float64(13.845348664830732)) ('alpha_LRG', np.float64(0.9793304296847297)) ('f_sigv_LRG', np.float64(0.8493220178686915)) ('log_Mcent_LRG', np.float64(12.845576827990046)) ('sigma_M_LRG', np.float64(0.4617649586721475))
[Interation 7] ('M_0_LRG', np.float64(12.852613422159418)) ('M_1_LRG', np.float64(13.823415537442997)) ('alpha_LRG', np.float64(0.9805287381471199)) ('f_sigv_LRG', np.float64(0.884696465802936)) ('log_Mcent_LRG', np.float64(12.791894505197602)) ('sigma_M_LRG', np.float64(0.39345892148677053))
[Interation 7] ('M_0_LRG', np.float64(12.854536043291963)) ('M_1_LRG', np.float64(13.827838142175912)) ('alpha_LRG', np.float64(0.9756576087441784)) ('f_sigv_LRG', np.float64(0.8865924569404322)) ('log_Mcent_LRG', np.float64(12.793189847816432)) ('sigma_M_LRG', np.float64(0.3916076226793811))
[Interation 7] ('M_0_LRG', np.float64(12.883348049805846)) ('M_1_LRG', np.float64(13.86347990372507)) ('alpha_LRG', np.float64(0.9619545882579636)) ('f_sigv_LRG', np.float64(0.8700376112930546)) ('log_Mcent_LRG', np.float64(12.849135630244344)) ('sigma_M_LRG', np.float64(0.4564862427019034))
[Interation 7] chi2=445.01207094104586
[Interation 7] chi2=426.95932188135396
[Interation 7] chi2=422.8139455188177
[Interation 7] chi2=408.69152903884316
[Interation 7] ('M_0_LRG', np.float64(12.885769956848785)) ('M_1_LRG', np.float64(13.85707027939307)) ('alpha_LRG', np.float64(0.9782910342822493)) ('f_sigv_LRG', np.float64(0.8603603873525555)) ('log_Mcent_LRG', np.float64(12.843895209591674)) ('sigma_M_LRG', np.float64(0.4492937955920884))
[Interation 7] ('M_0_LRG', np.float64(12.91951088490698)) ('M_1_LRG', np.float64(13.848366684216225)) ('alpha_LRG', np.float64(0.9498179305451535)) ('f_sigv_LRG', np.float64(0.8553383772196714)) ('log_Mcent_LRG', np.float64(12.839908809613224)) ('sigma_M_LRG', np.float64(0.4481551331283148))
[Interation 7] ('M_0_LRG', np.float64(12.873901270306368)) ('M_1_LRG', np.float64(13.856075015101192)) ('alpha_LRG', np.float64(0.9835663944448035)) ('f_sigv_LRG', np.float64(0.8599533946754192)) ('log_Mcent_LRG', np.float64(12.845327546758224)) ('sigma_M_LRG', np.float64(0.45524497021761545))
[Interation 7] ('M_0_LRG', np.float64(12.878065733521586)) ('M_1_LRG', np.float64(13.874416675148888)) ('alpha_LRG', np.float64(0.9734037808932431)) ('f_sigv_LRG', np.float64(0.8642937795060421)) ('log_Mcent_LRG', np.float64(12.861796062340817)) ('sigma_M_LRG', np.float64(0.47015635691486113))
[Interation 7] ('M_0_LRG', np.float64(12.893795615970262)) ('M_1_LRG', np.float64(13.854225544790964)) ('alpha_LRG', np.float64(0.9611983896515396)) ('f_sigv_LRG', np.float64(0.8643091943076655)) ('log_Mcent_LRG', np.float64(12.836333997611463)) ('sigma_M_LRG', np.float64(0.44373270073984833))
[Interation 7] ('M_0_LRG', np.float64(12.867245081725814)) ('M_1_LRG', np.float64(13.84438567163255)) ('alpha_LRG', np.float64(0.9712932971726925)) ('f_sigv_LRG', np.float64(0.8698341275098962)) ('log_Mcent_LRG', np.float64(12.806681837316248)) ('sigma_M_LRG', np.float64(0.4042866046384519))
[Interation 7] ('M_0_LRG', np.float64(12.870074139781716)) ('M_1_LRG', np.float64(13.852794964518651)) ('alpha_LRG', np.float64(0.9620216208257705)) ('f_sigv_LRG', np.float64(0.8809195419129608)) ('log_Mcent_LRG', np.float64(12.81599526491759)) ('sigma_M_LRG', np.float64(0.40809763114848985))
[Interation 7] ('M_0_LRG', np.float64(12.870450080290638)) ('M_1_LRG', np.float64(13.833210344005847)) ('alpha_LRG', np.float64(0.9725428203727813)) ('f_sigv_LRG', np.float64(0.8819692869416526)) ('log_Mcent_LRG', np.float64(12.80941700607503)) ('sigma_M_LRG', np.float64(0.41262971269480275))
[Interation 7] ('M_0_LRG', np.float64(12.879108980506766)) ('M_1_LRG', np.float64(13.826943269646767)) ('alpha_LRG', np.float64(0.9604734970132368)) ('f_sigv_LRG', np.float64(0.8720216420400481)) ('log_Mcent_LRG', np.float64(12.802962217833018)) ('sigma_M_LRG', np.float64(0.4116991047406893))
[Interation 7] ('M_0_LRG', np.float64(12.906629648578997)) ('M_1_LRG', np.float64(13.844826965379898)) ('alpha_LRG', np.float64(0.9566545080671819)) ('f_sigv_LRG', np.float64(0.8674347308123663)) ('log_Mcent_LRG', np.float64(12.841430188557887)) ('sigma_M_LRG', np.float64(0.4526034594786309))
[Interation 7] ('M_0_LRG', np.float64(12.873481938631828)) ('M_1_LRG', np.float64(13.823075741266312)) ('alpha_LRG', np.float64(0.9667777664000877)) ('f_sigv_LRG', np.float64(0.874818734036195)) ('log_Mcent_LRG', np.float64(12.787429112160929)) ('sigma_M_LRG', np.float64(0.3859279324657278))
[Interation 7] ('M_0_LRG', np.float64(12.885975682553811)) ('M_1_LRG', np.float64(13.837381814596599)) ('alpha_LRG', np.float64(0.9755155521846421)) ('f_sigv_LRG', np.float64(0.8502045510694712)) ('log_Mcent_LRG', np.float64(12.81994248546812)) ('sigma_M_LRG', np.float64(0.43083326429632374))
[Interation 7] chi2=334.5135290375775
[Interation 7] chi2=441.4821433763637
[Interation 7] chi2=452.7437589956601
[Interation 7] chi2=422.93003616059804
[Interation 7] chi2=438.0323899658007
[Interation 7] chi2=408.2630004033889
[Interation 7] chi2=425.72691639355907
[Interation 7] chi2=399.6563309111521
[Interation 7] chi2=420.67278612774993
[Interation 7] chi2=416.62885833362924
[Interation 7] chi2=415.7993795382941
[Interation 7] chi2=337.2697793809967
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_06.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_06.npy
Set number of threads to 32
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.885646180625345)) ('M_1_LRG', np.float64(13.868024162556448)) ('alpha_LRG', np.float64(0.9666846996398794)) ('f_sigv_LRG', np.float64(0.8695697605713983)) ('log_Mcent_LRG', np.float64(12.848734695555342)) ('sigma_M_LRG', np.float64(0.4513980459601506))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3557009696960449
Start satellite assignement
Satellite assignement done 0.0697939395904541
LRG mock catalogue done 0.14328646659851074
617310 central galaxies, 82498 satellites, fraction of satellite 0.12 
Done overall time  LRG 0.6813278198242188
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_06.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:18
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:18
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load smu measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.470559179326195)) ('M_1_LRG', np.float64(13.819124573840433)) ('alpha_LRG', np.float64(1.2060364843449576)) ('f_sigv_LRG', np.float64(0.7919205768967073)) ('log_Mcent_LRG', np.float64(12.800725433240572)) ('sigma_M_LRG', np.float64(0.4353310901394697))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.637831111829742)) ('M_1_LRG', np.float64(13.703859893865213)) ('alpha_LRG', np.float64(1.036053431657422)) ('f_sigv_LRG', np.float64(0.9083498669263808)) ('log_Mcent_LRG', np.float64(12.640244729479125)) ('sigma_M_LRG', np.float64(0.2859631735408239))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.768585766691762)) ('M_1_LRG', np.float64(14.084413942842032)) ('alpha_LRG', np.float64(1.0106649435303767)) ('f_sigv_LRG', np.float64(1.0563919314897259)) ('log_Mcent_LRG', np.float64(12.98344474099095)) ('sigma_M_LRG', np.float64(0.4853699148255468))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.79375031839674)) ('M_1_LRG', np.float64(14.077078113714498)) ('alpha_LRG', np.float64(0.9667592291128162)) ('f_sigv_LRG', np.float64(0.9037287290497213)) ('log_Mcent_LRG', np.float64(12.847693552812782)) ('sigma_M_LRG', np.float64(0.385501193257641))
[Interation 8] chi2=752.3624751248707
[Interation 8] chi2=762.0222760356194
[Interation 8] chi2=1024.5007757073442
[Interation 8] chi2=1033.4897275036967
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.740593731206461)) ('M_1_LRG', np.float64(13.852881768085677)) ('alpha_LRG', np.float64(1.0264777548248147)) ('f_sigv_LRG', np.float64(0.90830447169237)) ('log_Mcent_LRG', np.float64(12.764764854853574)) ('sigma_M_LRG', np.float64(0.3486894816291326))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.760416261964378)) ('M_1_LRG', np.float64(13.86232673154641)) ('alpha_LRG', np.float64(1.0432404923725311)) ('f_sigv_LRG', np.float64(0.8709203896276942)) ('log_Mcent_LRG', np.float64(12.819614367053546)) ('sigma_M_LRG', np.float64(0.42558171213070006))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.593536527642824)) ('M_1_LRG', np.float64(13.93081635879296)) ('alpha_LRG', np.float64(1.075776549339107)) ('f_sigv_LRG', np.float64(0.9170342259801159)) ('log_Mcent_LRG', np.float64(12.843028038088965)) ('sigma_M_LRG', np.float64(0.4266677211929002))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.675995657407107)) ('M_1_LRG', np.float64(13.870892001870946)) ('alpha_LRG', np.float64(1.0763676443830446)) ('f_sigv_LRG', np.float64(0.8988251018261487)) ('log_Mcent_LRG', np.float64(12.80581184300501)) ('sigma_M_LRG', np.float64(0.39192338883060873))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.822366048172753)) ('M_1_LRG', np.float64(13.882646857959486)) ('alpha_LRG', np.float64(1.069108441666859)) ('f_sigv_LRG', np.float64(0.890394144648895)) ('log_Mcent_LRG', np.float64(12.929884506104411)) ('sigma_M_LRG', np.float64(0.558963667662338))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.739037669136694)) ('M_1_LRG', np.float64(13.897180019494426)) ('alpha_LRG', np.float64(1.0348530539927765)) ('f_sigv_LRG', np.float64(0.8667435649430885)) ('log_Mcent_LRG', np.float64(12.86296882794836)) ('sigma_M_LRG', np.float64(0.4638648145529554))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.558036684429913)) ('M_1_LRG', np.float64(13.905241637815966)) ('alpha_LRG', np.float64(1.1280297863018762)) ('f_sigv_LRG', np.float64(0.8580811121272753)) ('log_Mcent_LRG', np.float64(12.862525314205957)) ('sigma_M_LRG', np.float64(0.4806193473207991))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.654071816843352)) ('M_1_LRG', np.float64(13.908029849024468)) ('alpha_LRG', np.float64(1.045206222919013)) ('f_sigv_LRG', np.float64(0.9208148795310066)) ('log_Mcent_LRG', np.float64(12.825898973843584)) ('sigma_M_LRG', np.float64(0.41227143316359915))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.818135433648704)) ('M_1_LRG', np.float64(13.856922727855736)) ('alpha_LRG', np.float64(0.9787741319884146)) ('f_sigv_LRG', np.float64(0.9297261164910062)) ('log_Mcent_LRG', np.float64(12.794915802795392)) ('sigma_M_LRG', np.float64(0.3713242894736382))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.807753770046375)) ('M_1_LRG', np.float64(13.849459824017929)) ('alpha_LRG', np.float64(0.9998242460580699)) ('f_sigv_LRG', np.float64(0.8950422371411455)) ('log_Mcent_LRG', np.float64(12.817263197796056)) ('sigma_M_LRG', np.float64(0.40542611649771043))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.781772893670771)) ('M_1_LRG', np.float64(13.905172936360474)) ('alpha_LRG', np.float64(1.0270860263520951)) ('f_sigv_LRG', np.float64(0.9264872343581184)) ('log_Mcent_LRG', np.float64(12.87329187557231)) ('sigma_M_LRG', np.float64(0.46651559979912044))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 8] ('M_0_LRG', np.float64(12.74387390347122)) ('M_1_LRG', np.float64(13.819776230980485)) ('alpha_LRG', np.float64(1.016965999725206)) ('f_sigv_LRG', np.float64(0.898205845304727)) ('log_Mcent_LRG', np.float64(12.748985184210763)) ('sigma_M_LRG', np.float64(0.3398056819161154))
[Interation 8] chi2=449.79501046993505
[Interation 8] chi2=451.6238642571826
[Interation 8] chi2=431.61036634618347
[Interation 8] chi2=422.68784950454943
[Interation 8] chi2=470.3978469462677
[Interation 8] chi2=387.1359892093722
[Interation 8] chi2=372.9296015732302
[Interation 8] chi2=390.1999747964083
[Interation 8] chi2=579.7864702439756
[Interation 8] chi2=419.48724465321084
[Interation 8] chi2=413.1232777697364
[Interation 8] chi2=430.1454536617487
[Interation 9] ('M_0_LRG', np.float64(12.84101380834779)) ('M_1_LRG', np.float64(13.790503329646885)) ('alpha_LRG', np.float64(0.9805764098465435)) ('f_sigv_LRG', np.float64(0.8874687037162565)) ('log_Mcent_LRG', np.float64(12.74532844422378)) ('sigma_M_LRG', np.float64(0.3366254348442533))
[Interation 9] ('M_0_LRG', np.float64(12.82524505703473)) ('M_1_LRG', np.float64(13.803351633252655)) ('alpha_LRG', np.float64(1.0001318797708076)) ('f_sigv_LRG', np.float64(0.8698881545358792)) ('log_Mcent_LRG', np.float64(12.764561996427588)) ('sigma_M_LRG', np.float64(0.3637646175405924))
[Interation 9] ('M_0_LRG', np.float64(12.90193852707663)) ('M_1_LRG', np.float64(13.773609824039328)) ('alpha_LRG', np.float64(0.9328913244261381)) ('f_sigv_LRG', np.float64(0.8594867231872743)) ('log_Mcent_LRG', np.float64(12.724738877884585)) ('sigma_M_LRG', np.float64(0.31854974149025816))
[Interation 9] ('M_0_LRG', np.float64(12.864541503643594)) ('M_1_LRG', np.float64(13.816648406831563)) ('alpha_LRG', np.float64(0.9591341711809129)) ('f_sigv_LRG', np.float64(0.876593122540785)) ('log_Mcent_LRG', np.float64(12.773786577220749)) ('sigma_M_LRG', np.float64(0.365324532993331))
[Interation 9] chi2=388.09348579571224
[Interation 9] chi2=423.6596620448808
[Interation 9] chi2=418.4064411206009
[Interation 9] chi2=452.481264358298
[Interation 9] ('M_0_LRG', np.float64(12.8408638705953)) ('M_1_LRG', np.float64(13.811567875655566)) ('alpha_LRG', np.float64(0.9683544610012597)) ('f_sigv_LRG', np.float64(0.8934709961162053)) ('log_Mcent_LRG', np.float64(12.757464630201357)) ('sigma_M_LRG', np.float64(0.3458876769381568))
[Interation 9] ('M_0_LRG', np.float64(12.829989207048003)) ('M_1_LRG', np.float64(13.82032357793171)) ('alpha_LRG', np.float64(0.9782877071463281)) ('f_sigv_LRG', np.float64(0.8704540280347544)) ('log_Mcent_LRG', np.float64(12.77640000804371)) ('sigma_M_LRG', np.float64(0.3810429922830427))
[Interation 9] ('M_0_LRG', np.float64(12.864658636029342)) ('M_1_LRG', np.float64(13.814826478225926)) ('alpha_LRG', np.float64(0.9406966035429757)) ('f_sigv_LRG', np.float64(0.8902404096185385)) ('log_Mcent_LRG', np.float64(12.76746748515625)) ('sigma_M_LRG', np.float64(0.35946243387916765))
[Interation 9] ('M_0_LRG', np.float64(12.839054766787392)) ('M_1_LRG', np.float64(13.806249886081135)) ('alpha_LRG', np.float64(0.961396976251984)) ('f_sigv_LRG', np.float64(0.9033569339062973)) ('log_Mcent_LRG', np.float64(12.751505035815752)) ('sigma_M_LRG', np.float64(0.3420653225256479))
[Interation 9] ('M_0_LRG', np.float64(12.86115374127582)) ('M_1_LRG', np.float64(13.817846898437246)) ('alpha_LRG', np.float64(0.9509123441875214)) ('f_sigv_LRG', np.float64(0.8812258357448568)) ('log_Mcent_LRG', np.float64(12.770732420897982)) ('sigma_M_LRG', np.float64(0.3638057330263774))
[Interation 9] ('M_0_LRG', np.float64(12.855232477254697)) ('M_1_LRG', np.float64(13.794966737536148)) ('alpha_LRG', np.float64(0.9507319533194367)) ('f_sigv_LRG', np.float64(0.8906047152758566)) ('log_Mcent_LRG', np.float64(12.744795188975068)) ('sigma_M_LRG', np.float64(0.33337046085866795))
[Interation 9] ('M_0_LRG', np.float64(12.85982818336172)) ('M_1_LRG', np.float64(13.822203679386272)) ('alpha_LRG', np.float64(0.9485541560012685)) ('f_sigv_LRG', np.float64(0.9015213093834039)) ('log_Mcent_LRG', np.float64(12.77489002220533)) ('sigma_M_LRG', np.float64(0.36625574855726606))
[Interation 9] ('M_0_LRG', np.float64(12.835048573596492)) ('M_1_LRG', np.float64(13.816882232155374)) ('alpha_LRG', np.float64(0.9803033026611263)) ('f_sigv_LRG', np.float64(0.8923533632239598)) ('log_Mcent_LRG', np.float64(12.7716816318255)) ('sigma_M_LRG', np.float64(0.363380668984259))
[Interation 9] ('M_0_LRG', np.float64(12.837768948927462)) ('M_1_LRG', np.float64(13.81165811950949)) ('alpha_LRG', np.float64(0.9615086441006675)) ('f_sigv_LRG', np.float64(0.8886604396082883)) ('log_Mcent_LRG', np.float64(12.756013402910266)) ('sigma_M_LRG', np.float64(0.34721866063038553))
[Interation 9] ('M_0_LRG', np.float64(12.82769776221291)) ('M_1_LRG', np.float64(13.838265598642431)) ('alpha_LRG', np.float64(0.9782099200721219)) ('f_sigv_LRG', np.float64(0.877114826658527)) ('log_Mcent_LRG', np.float64(12.792540676268219)) ('sigma_M_LRG', np.float64(0.3923811109653127))
[Interation 9] ('M_0_LRG', np.float64(12.806727818305523)) ('M_1_LRG', np.float64(13.856988226978523)) ('alpha_LRG', np.float64(1.0055145062753656)) ('f_sigv_LRG', np.float64(0.8715801270774625)) ('log_Mcent_LRG', np.float64(12.809054182063157)) ('sigma_M_LRG', np.float64(0.41265000782645156))
[Interation 9] ('M_0_LRG', np.float64(12.79937088375592)) ('M_1_LRG', np.float64(13.88068535339908)) ('alpha_LRG', np.float64(1.0114684420735145)) ('f_sigv_LRG', np.float64(0.8800074444051078)) ('log_Mcent_LRG', np.float64(12.832513418874711)) ('sigma_M_LRG', np.float64(0.43227280791727496))
[Interation 9] chi2=446.4375402856728
[Interation 9] chi2=376.0478517766699
[Interation 9] chi2=397.3825768279891
[Interation 9] chi2=435.68658973838495
[Interation 9] chi2=383.31541434608687
[Interation 9] chi2=377.6714225208938
[Interation 9] chi2=387.0389310077017
[Interation 9] chi2=449.5077768217793
[Interation 9] chi2=430.6771145924807
[Interation 9] chi2=381.82880753584806
[Interation 9] chi2=436.3068151239601
[Interation 9] chi2=378.94305416518745
[Interation 10] ('M_0_LRG', np.float64(12.860888919488957)) ('M_1_LRG', np.float64(13.794806746387785)) ('alpha_LRG', np.float64(0.9429280275493629)) ('f_sigv_LRG', np.float64(0.9009738950688332)) ('log_Mcent_LRG', np.float64(12.748906916793906)) ('sigma_M_LRG', np.float64(0.3390619548051701))
[Interation 10] ('M_0_LRG', np.float64(12.860046742022357)) ('M_1_LRG', np.float64(13.817847484361257)) ('alpha_LRG', np.float64(0.9628835726443431)) ('f_sigv_LRG', np.float64(0.8777120104520748)) ('log_Mcent_LRG', np.float64(12.780478274646688)) ('sigma_M_LRG', np.float64(0.37522048670424385))
[Interation 10] ('M_0_LRG', np.float64(12.854974620638783)) ('M_1_LRG', np.float64(13.772120466614366)) ('alpha_LRG', np.float64(0.9495673995899387)) ('f_sigv_LRG', np.float64(0.8869829182585433)) ('log_Mcent_LRG', np.float64(12.72857815177442)) ('sigma_M_LRG', np.float64(0.3244924230435517))
[Interation 10] ('M_0_LRG', np.float64(12.868431939789724)) ('M_1_LRG', np.float64(13.803820765001669)) ('alpha_LRG', np.float64(0.9514401203276214)) ('f_sigv_LRG', np.float64(0.8809245479252382)) ('log_Mcent_LRG', np.float64(12.755351978741695)) ('sigma_M_LRG', np.float64(0.34458780429241637))
[Interation 10] chi2=409.49231777870267
[Interation 10] chi2=385.99783577174276
[Interation 10] chi2=385.123067659776
[Interation 10] chi2=394.6116155799955
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_07.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_07.npy
Set number of threads to 32
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.855483565576366)) ('M_1_LRG', np.float64(13.787438801374787)) ('alpha_LRG', np.float64(0.9598302685117196)) ('f_sigv_LRG', np.float64(0.8794560755669449)) ('log_Mcent_LRG', np.float64(12.741824931018211)) ('sigma_M_LRG', np.float64(0.33488776251600916))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3585023880004883
Start satellite assignement
Satellite assignement done 0.0733635425567627
LRG mock catalogue done 0.1518564224243164
610072 central galaxies, 88664 satellites, fraction of satellite 0.13 
Done overall time  LRG 0.7040107250213623
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_07.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:19
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:19
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:19
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:19
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Load correlation matrix for LRG at z0.5 ...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load smu measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:18
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Load correlation matrix for LRG at z0.5 ...
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:18
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.448453361338627)) ('M_1_LRG', np.float64(13.5571296924694)) ('alpha_LRG', np.float64(1.0676424690740687)) ('f_sigv_LRG', np.float64(0.9023967823843466)) ('log_Mcent_LRG', np.float64(12.659898540123457)) ('sigma_M_LRG', np.float64(0.43906357997784773))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.484708739590348)) ('M_1_LRG', np.float64(13.55402822629046)) ('alpha_LRG', np.float64(1.0082584766835234)) ('f_sigv_LRG', np.float64(1.0834601355986266)) ('log_Mcent_LRG', np.float64(12.70654033336537)) ('sigma_M_LRG', np.float64(0.5625817946646249))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.57747539579947)) ('M_1_LRG', np.float64(13.327590165879881)) ('alpha_LRG', np.float64(1.020871274811014)) ('f_sigv_LRG', np.float64(0.897200722654449)) ('log_Mcent_LRG', np.float64(12.790780740557617)) ('sigma_M_LRG', np.float64(0.4118579821420089))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.565994523797542)) ('M_1_LRG', np.float64(13.500533611790981)) ('alpha_LRG', np.float64(1.0509821774938461)) ('f_sigv_LRG', np.float64(1.0706300177908763)) ('log_Mcent_LRG', np.float64(12.845592976289561)) ('sigma_M_LRG', np.float64(0.5280208460351599))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.559969942356728)) ('M_1_LRG', np.float64(13.561061275133213)) ('alpha_LRG', np.float64(0.9205580115039815)) ('f_sigv_LRG', np.float64(0.872094538351079)) ('log_Mcent_LRG', np.float64(12.60180950027569)) ('sigma_M_LRG', np.float64(0.4812167798506542))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.454042150835791)) ('M_1_LRG', np.float64(13.758037469918692)) ('alpha_LRG', np.float64(1.0169124930411633)) ('f_sigv_LRG', np.float64(0.8424172337014639)) ('log_Mcent_LRG', np.float64(12.812309276035776)) ('sigma_M_LRG', np.float64(0.32705537706032617))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.484556993621986)) ('M_1_LRG', np.float64(13.781268145690149)) ('alpha_LRG', np.float64(0.9662657114881067)) ('f_sigv_LRG', np.float64(0.8738336648348634)) ('log_Mcent_LRG', np.float64(12.71729602700894)) ('sigma_M_LRG', np.float64(0.43289474122539295))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.550409837976849)) ('M_1_LRG', np.float64(13.586007733348907)) ('alpha_LRG', np.float64(0.9090358653684971)) ('f_sigv_LRG', np.float64(1.0342919181115908)) ('log_Mcent_LRG', np.float64(12.639696606976853)) ('sigma_M_LRG', np.float64(0.4506687523665297))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.615512888414077)) ('M_1_LRG', np.float64(13.21597298965578)) ('alpha_LRG', np.float64(1.019947055745176)) ('f_sigv_LRG', np.float64(0.8465433403339645)) ('log_Mcent_LRG', np.float64(12.913687357756412)) ('sigma_M_LRG', np.float64(0.5780314977847564))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.502178712779351)) ('M_1_LRG', np.float64(13.459789565877688)) ('alpha_LRG', np.float64(0.9372992678014015)) ('f_sigv_LRG', np.float64(1.2448536927782166)) ('log_Mcent_LRG', np.float64(12.89135659414713)) ('sigma_M_LRG', np.float64(0.5619703324822155))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.481857381035868)) ('M_1_LRG', np.float64(13.84790218143649)) ('alpha_LRG', np.float64(0.9744839509712506)) ('f_sigv_LRG', np.float64(0.8486004062050662)) ('log_Mcent_LRG', np.float64(12.865352191541051)) ('sigma_M_LRG', np.float64(0.44831263872139654))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 10] ('M_0_LRG', np.float64(12.606244853545942)) ('M_1_LRG', np.float64(13.460273180056502)) ('alpha_LRG', np.float64(0.8675697624063429)) ('f_sigv_LRG', np.float64(0.685426010603652)) ('log_Mcent_LRG', np.float64(12.782990876466899)) ('sigma_M_LRG', np.float64(0.5922252341400775))
[Interation 10] chi2=38227.751422307214
[Interation 10] chi2=2114.049073732255
[Interation 10] chi2=12087.635108501992
[Interation 10] chi2=3803.944099841384
[Interation 10] chi2=7210.819022123688
[Interation 10] chi2=3130.954158750574
[Interation 10] chi2=1241.8187073922877
[Interation 10] chi2=75805.70956012618
[Interation 10] chi2=2652.876840349055
[Interation 10] chi2=15245.29098546192
[Interation 10] chi2=2948.804809022775
[Interation 10] chi2=6381.375577771277
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 11] ('M_0_LRG', np.float64(12.740103624589878)) ('M_1_LRG', np.float64(13.855762995167998)) ('alpha_LRG', np.float64(1.0310869105502263)) ('f_sigv_LRG', np.float64(0.8730983272573437)) ('log_Mcent_LRG', np.float64(12.787782345334524)) ('sigma_M_LRG', np.float64(0.3892801832000278))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 11] ('M_0_LRG', np.float64(12.702604309276175)) ('M_1_LRG', np.float64(13.889570571878437)) ('alpha_LRG', np.float64(1.0393270956335074)) ('f_sigv_LRG', np.float64(0.874766894804616)) ('log_Mcent_LRG', np.float64(12.820975353904581)) ('sigma_M_LRG', np.float64(0.42100561184309004))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 11] ('M_0_LRG', np.float64(12.806761194183604)) ('M_1_LRG', np.float64(13.821631405608205)) ('alpha_LRG', np.float64(0.9951290151019673)) ('f_sigv_LRG', np.float64(0.8854922907992939)) ('log_Mcent_LRG', np.float64(12.785460811410163)) ('sigma_M_LRG', np.float64(0.3857092992301505))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 11] ('M_0_LRG', np.float64(12.766808899155393)) ('M_1_LRG', np.float64(13.88948544347618)) ('alpha_LRG', np.float64(1.0355510429688046)) ('f_sigv_LRG', np.float64(0.880277136189976)) ('log_Mcent_LRG', np.float64(12.831345065793803)) ('sigma_M_LRG', np.float64(0.42428841563577174))
[Interation 11] chi2=438.33955027915243
[Interation 11] chi2=425.29017505233213
[Interation 11] chi2=424.12443661563293
[Interation 11] chi2=427.9704510623338
[Interation 11] ('M_0_LRG', np.float64(12.806978768049616)) ('M_1_LRG', np.float64(13.812053304012169)) ('alpha_LRG', np.float64(1.0109327237407764)) ('f_sigv_LRG', np.float64(0.8767987098958843)) ('log_Mcent_LRG', np.float64(12.747376142136485)) ('sigma_M_LRG', np.float64(0.3369870378005081))
[Interation 11] ('M_0_LRG', np.float64(12.84447414995697)) ('M_1_LRG', np.float64(13.807032088772036)) ('alpha_LRG', np.float64(0.98831013962415)) ('f_sigv_LRG', np.float64(0.8824658654904571)) ('log_Mcent_LRG', np.float64(12.746302716390286)) ('sigma_M_LRG', np.float64(0.32948428933742574))
[Interation 11] ('M_0_LRG', np.float64(12.833909900737435)) ('M_1_LRG', np.float64(13.84961564549962)) ('alpha_LRG', np.float64(0.9989675573977813)) ('f_sigv_LRG', np.float64(0.8684239059211976)) ('log_Mcent_LRG', np.float64(12.801124736781812)) ('sigma_M_LRG', np.float64(0.39941874909578745))
[Interation 11] ('M_0_LRG', np.float64(12.742496021742294)) ('M_1_LRG', np.float64(13.894340140031996)) ('alpha_LRG', np.float64(1.0436446025002621)) ('f_sigv_LRG', np.float64(0.8812350759994283)) ('log_Mcent_LRG', np.float64(12.834718339246647)) ('sigma_M_LRG', np.float64(0.4340011006751955))
[Interation 11] ('M_0_LRG', np.float64(12.615655073208849)) ('M_1_LRG', np.float64(13.920906553180837)) ('alpha_LRG', np.float64(1.1248980504595931)) ('f_sigv_LRG', np.float64(0.8705587117638648)) ('log_Mcent_LRG', np.float64(12.84405261418841)) ('sigma_M_LRG', np.float64(0.4413052880362631))
[Interation 11] ('M_0_LRG', np.float64(12.775551963421805)) ('M_1_LRG', np.float64(13.867950108589127)) ('alpha_LRG', np.float64(1.0318602576874276)) ('f_sigv_LRG', np.float64(0.8833872141363684)) ('log_Mcent_LRG', np.float64(12.798102868564397)) ('sigma_M_LRG', np.float64(0.37624758641773637))
[Interation 11] ('M_0_LRG', np.float64(12.815961123804716)) ('M_1_LRG', np.float64(13.844592372142296)) ('alpha_LRG', np.float64(1.004701251477733)) ('f_sigv_LRG', np.float64(0.8772250638714219)) ('log_Mcent_LRG', np.float64(12.81741937835988)) ('sigma_M_LRG', np.float64(0.43228449003093516))
[Interation 11] ('M_0_LRG', np.float64(12.700464165803004)) ('M_1_LRG', np.float64(13.933511352666734)) ('alpha_LRG', np.float64(1.0604706005383397)) ('f_sigv_LRG', np.float64(0.8856759721423904)) ('log_Mcent_LRG', np.float64(12.868515897042954)) ('sigma_M_LRG', np.float64(0.4634192537742849))
[Interation 11] ('M_0_LRG', np.float64(12.704751313351885)) ('M_1_LRG', np.float64(13.864981073305751)) ('alpha_LRG', np.float64(1.0544886881770332)) ('f_sigv_LRG', np.float64(0.8775224295509257)) ('log_Mcent_LRG', np.float64(12.78691544642182)) ('sigma_M_LRG', np.float64(0.37935634445657485))
[Interation 11] ('M_0_LRG', np.float64(12.776981636474227)) ('M_1_LRG', np.float64(13.868581070277365)) ('alpha_LRG', np.float64(1.0221968874047371)) ('f_sigv_LRG', np.float64(0.8830955062246297)) ('log_Mcent_LRG', np.float64(12.822447270925691)) ('sigma_M_LRG', np.float64(0.43144570291178863))
[Interation 11] ('M_0_LRG', np.float64(12.762527044251213)) ('M_1_LRG', np.float64(13.866128259619261)) ('alpha_LRG', np.float64(1.05158296833919)) ('f_sigv_LRG', np.float64(0.8830707462206734)) ('log_Mcent_LRG', np.float64(12.784569074909166)) ('sigma_M_LRG', np.float64(0.3626879436409469))
[Interation 11] ('M_0_LRG', np.float64(12.762799253599724)) ('M_1_LRG', np.float64(13.839529198164314)) ('alpha_LRG', np.float64(1.048968256592676)) ('f_sigv_LRG', np.float64(0.8802906512533506)) ('log_Mcent_LRG', np.float64(12.774876384313734)) ('sigma_M_LRG', np.float64(0.3700331849260411))
[Interation 11] chi2=405.95773150845474
[Interation 11] chi2=457.32825604831856
[Interation 11] chi2=468.97949626751193
[Interation 11] chi2=402.84202774862064
[Interation 11] chi2=404.26093600993295
[Interation 11] chi2=447.7259663572737
[Interation 11] chi2=414.7368977607387
[Interation 11] chi2=444.262656408798
[Interation 11] chi2=398.19155759984676
[Interation 11] chi2=444.0092479642804
[Interation 11] chi2=393.2407498727952
[Interation 11] chi2=410.42725694158696
[Interation 12] ('M_0_LRG', np.float64(12.859371829290524)) ('M_1_LRG', np.float64(13.82007867542283)) ('alpha_LRG', np.float64(0.9797885741529161)) ('f_sigv_LRG', np.float64(0.8846018142280301)) ('log_Mcent_LRG', np.float64(12.769687686298765)) ('sigma_M_LRG', np.float64(0.36002446351190387))
[Interation 12] ('M_0_LRG', np.float64(12.767833645415598)) ('M_1_LRG', np.float64(13.844478622679532)) ('alpha_LRG', np.float64(1.023419628062985)) ('f_sigv_LRG', np.float64(0.8827949224755054)) ('log_Mcent_LRG', np.float64(12.775759981271683)) ('sigma_M_LRG', np.float64(0.36550576780356225))
[Interation 12] ('M_0_LRG', np.float64(12.747281228987195)) ('M_1_LRG', np.float64(13.873812340882681)) ('alpha_LRG', np.float64(1.0461058701088242)) ('f_sigv_LRG', np.float64(0.8733665525642382)) ('log_Mcent_LRG', np.float64(12.812421920180686)) ('sigma_M_LRG', np.float64(0.4142511843378374))
[Interation 12] ('M_0_LRG', np.float64(12.789796513841546)) ('M_1_LRG', np.float64(13.84002990708743)) ('alpha_LRG', np.float64(1.017439253273732)) ('f_sigv_LRG', np.float64(0.8787062669462742)) ('log_Mcent_LRG', np.float64(12.784309780088561)) ('sigma_M_LRG', np.float64(0.38092220030963847))
[Interation 12] chi2=413.4999544552366
[Interation 12] chi2=459.2218110695158
[Interation 12] chi2=454.21224583090213
[Interation 12] chi2=461.7594407452016
[Interation 12] ('M_0_LRG', np.float64(12.816267658679793)) ('M_1_LRG', np.float64(13.826745717614791)) ('alpha_LRG', np.float64(1.005705488284669)) ('f_sigv_LRG', np.float64(0.8777616972675192)) ('log_Mcent_LRG', np.float64(12.779160927788611)) ('sigma_M_LRG', np.float64(0.3784252962405774))
[Interation 12] ('M_0_LRG', np.float64(12.760625633974975)) ('M_1_LRG', np.float64(13.86051031635533)) ('alpha_LRG', np.float64(1.0327846459082468)) ('f_sigv_LRG', np.float64(0.884291406414502)) ('log_Mcent_LRG', np.float64(12.80260363476889)) ('sigma_M_LRG', np.float64(0.3935672449480295))
[Interation 12] ('M_0_LRG', np.float64(12.850261403002275)) ('M_1_LRG', np.float64(13.820807686537258)) ('alpha_LRG', np.float64(0.9893690884429555)) ('f_sigv_LRG', np.float64(0.881517886111459)) ('log_Mcent_LRG', np.float64(12.77588361195234)) ('sigma_M_LRG', np.float64(0.37082851098246306))
[Interation 12] ('M_0_LRG', np.float64(12.799778739573629)) ('M_1_LRG', np.float64(13.816027340556017)) ('alpha_LRG', np.float64(1.0140379028121504)) ('f_sigv_LRG', np.float64(0.872692525027147)) ('log_Mcent_LRG', np.float64(12.766066885638338)) ('sigma_M_LRG', np.float64(0.36308293292432847))
[Interation 12] ('M_0_LRG', np.float64(12.792430505881853)) ('M_1_LRG', np.float64(13.844311544493277)) ('alpha_LRG', np.float64(1.0102317221472168)) ('f_sigv_LRG', np.float64(0.8788297813612633)) ('log_Mcent_LRG', np.float64(12.79467715334103)) ('sigma_M_LRG', np.float64(0.391128613393497))
[Interation 12] ('M_0_LRG', np.float64(12.711006770061656)) ('M_1_LRG', np.float64(13.854998537136785)) ('alpha_LRG', np.float64(1.0670038791958876)) ('f_sigv_LRG', np.float64(0.8774273262314727)) ('log_Mcent_LRG', np.float64(12.785344733721821)) ('sigma_M_LRG', np.float64(0.38689118431330516))
[Interation 12] ('M_0_LRG', np.float64(12.759844873133579)) ('M_1_LRG', np.float64(13.853887254680128)) ('alpha_LRG', np.float64(1.041294874145355)) ('f_sigv_LRG', np.float64(0.8762105309728853)) ('log_Mcent_LRG', np.float64(12.804956574196702)) ('sigma_M_LRG', np.float64(0.40534879742684626))
[Interation 12] ('M_0_LRG', np.float64(12.730312018865082)) ('M_1_LRG', np.float64(13.842713840048127)) ('alpha_LRG', np.float64(1.0481093186661596)) ('f_sigv_LRG', np.float64(0.885355084818502)) ('log_Mcent_LRG', np.float64(12.76705485185668)) ('sigma_M_LRG', np.float64(0.3577962791725374))
[Interation 12] ('M_0_LRG', np.float64(12.755761651619391)) ('M_1_LRG', np.float64(13.834891217460958)) ('alpha_LRG', np.float64(1.03989595771522)) ('f_sigv_LRG', np.float64(0.8761304065049341)) ('log_Mcent_LRG', np.float64(12.770498832165112)) ('sigma_M_LRG', np.float64(0.36413440045233925))
[Interation 12] ('M_0_LRG', np.float64(12.902466156156956)) ('M_1_LRG', np.float64(13.822407467848366)) ('alpha_LRG', np.float64(0.9608595853411248)) ('f_sigv_LRG', np.float64(0.8714775950978895)) ('log_Mcent_LRG', np.float64(12.79359659715035)) ('sigma_M_LRG', np.float64(0.3913950750776299))
[Interation 12] ('M_0_LRG', np.float64(12.818904944904407)) ('M_1_LRG', np.float64(13.809236828377813)) ('alpha_LRG', np.float64(1.0038653612765542)) ('f_sigv_LRG', np.float64(0.8779964481177724)) ('log_Mcent_LRG', np.float64(12.758752091438692)) ('sigma_M_LRG', np.float64(0.3565091768421992))
[Interation 12] ('M_0_LRG', np.float64(12.766223923814882)) ('M_1_LRG', np.float64(13.848013365134976)) ('alpha_LRG', np.float64(1.0375376910815048)) ('f_sigv_LRG', np.float64(0.8769225954045714)) ('log_Mcent_LRG', np.float64(12.792949424014767)) ('sigma_M_LRG', np.float64(0.39087294453868393))
[Interation 12] chi2=427.4839571864554
[Interation 12] chi2=385.70263256089584
[Interation 12] chi2=402.691607741762
[Interation 12] chi2=448.05026475568957
[Interation 12] chi2=485.3433056560723
[Interation 12] chi2=412.62181019394376
[Interation 12] chi2=406.4686670582714
[Interation 12] chi2=450.4256127610886
[Interation 12] chi2=423.0681098968474
[Interation 12] chi2=419.34421921827163
[Interation 12] chi2=432.25141794137016
[Interation 12] chi2=450.77196236867235
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_08.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_08.npy
Set number of threads to 32
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.788000504825584)) ('M_1_LRG', np.float64(13.81448178690135)) ('alpha_LRG', np.float64(1.0217634953095465)) ('f_sigv_LRG', np.float64(0.8782918275344167)) ('log_Mcent_LRG', np.float64(12.758995245876141)) ('sigma_M_LRG', np.float64(0.35194840442133063))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.35723090171813965
Start satellite assignement
Satellite assignement done 0.07243680953979492
LRG mock catalogue done 0.15217328071594238
610237 central galaxies, 88864 satellites, fraction of satellite 0.13 
Done overall time  LRG 0.6976056098937988
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_08.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:19
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:19
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:19
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load smu measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load correlation matrix for LRG at z0.5 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Load correlation matrix for LRG at z0.5 ...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:19
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:19
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.446340227223558)) ('M_1_LRG', np.float64(13.50469700192989)) ('alpha_LRG', np.float64(1.2382587885537195)) ('f_sigv_LRG', np.float64(1.2317877202087062)) ('log_Mcent_LRG', np.float64(12.718283274102644)) ('sigma_M_LRG', np.float64(0.28408448242792206))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.362920861502083)) ('M_1_LRG', np.float64(14.083702725883127)) ('alpha_LRG', np.float64(0.9656826506078893)) ('f_sigv_LRG', np.float64(0.8794785091120539)) ('log_Mcent_LRG', np.float64(12.810875300019838)) ('sigma_M_LRG', np.float64(0.42992607803667116))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.679703544821889)) ('M_1_LRG', np.float64(14.498930276367776)) ('alpha_LRG', np.float64(0.9244000724278947)) ('f_sigv_LRG', np.float64(1.1378049869798896)) ('log_Mcent_LRG', np.float64(13.048283753897477)) ('sigma_M_LRG', np.float64(0.4472819894321207))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.299797385336394)) ('M_1_LRG', np.float64(13.219278505650836)) ('alpha_LRG', np.float64(0.9503709141590889)) ('f_sigv_LRG', np.float64(1.0814028662442245)) ('log_Mcent_LRG', np.float64(12.543115952007417)) ('sigma_M_LRG', np.float64(0.42736831507920525))
[Interation 13] chi2=3263.7150023061895
[Interation 13] chi2=30625.33495870697
[Interation 13] chi2=1284.2656297190692
[Interation 13] chi2=7075.820491694202
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.80702919595388)) ('M_1_LRG', np.float64(13.928377546709559)) ('alpha_LRG', np.float64(0.9301852553934715)) ('f_sigv_LRG', np.float64(0.9154889219933346)) ('log_Mcent_LRG', np.float64(12.898676064350541)) ('sigma_M_LRG', np.float64(0.4911639049448987))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.729741065193382)) ('M_1_LRG', np.float64(13.974031480251888)) ('alpha_LRG', np.float64(0.9921441892117753)) ('f_sigv_LRG', np.float64(0.9052986919481957)) ('log_Mcent_LRG', np.float64(12.907922052475557)) ('sigma_M_LRG', np.float64(0.4780811368649035))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.811304037429618)) ('M_1_LRG', np.float64(13.924352294917485)) ('alpha_LRG', np.float64(1.043734766402504)) ('f_sigv_LRG', np.float64(0.9181013406786211)) ('log_Mcent_LRG', np.float64(12.89435486999626)) ('sigma_M_LRG', np.float64(0.4795066063222794))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.818317857819993)) ('M_1_LRG', np.float64(13.978232232496625)) ('alpha_LRG', np.float64(1.0038416939831016)) ('f_sigv_LRG', np.float64(0.8652055100468751)) ('log_Mcent_LRG', np.float64(12.976028794434363)) ('sigma_M_LRG', np.float64(0.5749780888925382))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.535163579067092)) ('M_1_LRG', np.float64(13.910093022675811)) ('alpha_LRG', np.float64(1.1846943636493896)) ('f_sigv_LRG', np.float64(0.9179248389460438)) ('log_Mcent_LRG', np.float64(12.862290890456215)) ('sigma_M_LRG', np.float64(0.44703671136918516))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.906036379829468)) ('M_1_LRG', np.float64(13.966857706851073)) ('alpha_LRG', np.float64(0.9295165547688886)) ('f_sigv_LRG', np.float64(0.8892501344086429)) ('log_Mcent_LRG', np.float64(12.971813711009293)) ('sigma_M_LRG', np.float64(0.559604341075637))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.892113695670103)) ('M_1_LRG', np.float64(13.927093136328958)) ('alpha_LRG', np.float64(0.9671820778402792)) ('f_sigv_LRG', np.float64(0.9235988467286108)) ('log_Mcent_LRG', np.float64(12.913705836864848)) ('sigma_M_LRG', np.float64(0.49284280978161843))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.444641320956164)) ('M_1_LRG', np.float64(13.988328723950506)) ('alpha_LRG', np.float64(1.2060200636193608)) ('f_sigv_LRG', np.float64(0.87175952211086)) ('log_Mcent_LRG', np.float64(12.92152242653932)) ('sigma_M_LRG', np.float64(0.522099697097025))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.81781756899217)) ('M_1_LRG', np.float64(13.894492104439585)) ('alpha_LRG', np.float64(1.013773346116968)) ('f_sigv_LRG', np.float64(0.8625494238250853)) ('log_Mcent_LRG', np.float64(12.851506998914124)) ('sigma_M_LRG', np.float64(0.4588765367904587))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.695434171888493)) ('M_1_LRG', np.float64(13.880394497355791)) ('alpha_LRG', np.float64(1.1400370788263423)) ('f_sigv_LRG', np.float64(0.8460811980853771)) ('log_Mcent_LRG', np.float64(12.851747776905103)) ('sigma_M_LRG', np.float64(0.4556186940475919))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.758902153626117)) ('M_1_LRG', np.float64(13.893248109991704)) ('alpha_LRG', np.float64(1.0514967112246025)) ('f_sigv_LRG', np.float64(0.9062407213323238)) ('log_Mcent_LRG', np.float64(12.817389559599256)) ('sigma_M_LRG', np.float64(0.39910864759929665))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 13] ('M_0_LRG', np.float64(12.747469465916533)) ('M_1_LRG', np.float64(13.873232625861032)) ('alpha_LRG', np.float64(1.0311280427437537)) ('f_sigv_LRG', np.float64(0.9269170289238547)) ('log_Mcent_LRG', np.float64(12.813522429161702)) ('sigma_M_LRG', np.float64(0.3931029744139932))
[Interation 13] chi2=485.80617185411734
[Interation 13] chi2=485.2779954300164
[Interation 13] chi2=470.789712030695
[Interation 13] chi2=458.38168810466476
[Interation 13] chi2=458.29199650575544
[Interation 13] chi2=430.86447764760993
[Interation 13] chi2=498.4992042577639
[Interation 13] chi2=451.1544312961708
[Interation 13] chi2=576.8059060674975
[Interation 13] chi2=460.67619221473905
[Interation 13] chi2=478.7320873002065
[Interation 13] chi2=446.12399384065935
[Interation 14] ('M_0_LRG', np.float64(12.819421287587797)) ('M_1_LRG', np.float64(13.90895862074079)) ('alpha_LRG', np.float64(1.0176316923417343)) ('f_sigv_LRG', np.float64(0.8663555793049857)) ('log_Mcent_LRG', np.float64(12.89936232725831)) ('sigma_M_LRG', np.float64(0.509811282303943))
[Interation 14] ('M_0_LRG', np.float64(12.714340253272788)) ('M_1_LRG', np.float64(13.921982574347158)) ('alpha_LRG', np.float64(1.0495063494584538)) ('f_sigv_LRG', np.float64(0.907411378231009)) ('log_Mcent_LRG', np.float64(12.868486192400665)) ('sigma_M_LRG', np.float64(0.4537716519848184))
[Interation 14] ('M_0_LRG', np.float64(12.756428398223454)) ('M_1_LRG', np.float64(13.862556805495668)) ('alpha_LRG', np.float64(1.0483852773468647)) ('f_sigv_LRG', np.float64(0.8848257974687307)) ('log_Mcent_LRG', np.float64(12.81712299312934)) ('sigma_M_LRG', np.float64(0.41663819257893764))
[Interation 14] ('M_0_LRG', np.float64(12.670399655890913)) ('M_1_LRG', np.float64(13.934168435617337)) ('alpha_LRG', np.float64(1.089487604297982)) ('f_sigv_LRG', np.float64(0.8880523050106696)) ('log_Mcent_LRG', np.float64(12.886712010270521)) ('sigma_M_LRG', np.float64(0.4867641588344159))
[Interation 14] chi2=426.53717340124376
[Interation 14] chi2=476.0842178955932
[Interation 14] chi2=441.40836898315314
[Interation 14] chi2=512.1407142297286
[Interation 14] ('M_0_LRG', np.float64(12.824276880164522)) ('M_1_LRG', np.float64(13.881114018123979)) ('alpha_LRG', np.float64(0.998072053647457)) ('f_sigv_LRG', np.float64(0.8884648248539264)) ('log_Mcent_LRG', np.float64(12.85312166618813)) ('sigma_M_LRG', np.float64(0.45687163586066004))
[Interation 14] ('M_0_LRG', np.float64(12.827992307190115)) ('M_1_LRG', np.float64(13.853358512107942)) ('alpha_LRG', np.float64(1.0029075729098467)) ('f_sigv_LRG', np.float64(0.8881177817396132)) ('log_Mcent_LRG', np.float64(12.820243020995516)) ('sigma_M_LRG', np.float64(0.4195401739114826))
[Interation 14] ('M_0_LRG', np.float64(12.790041024641225)) ('M_1_LRG', np.float64(13.901388584411965)) ('alpha_LRG', np.float64(1.0177157091372517)) ('f_sigv_LRG', np.float64(0.8881004195703177)) ('log_Mcent_LRG', np.float64(12.854306011598712)) ('sigma_M_LRG', np.float64(0.44716812370423736))
[Interation 14] ('M_0_LRG', np.float64(12.753622758432675)) ('M_1_LRG', np.float64(13.874824624410133)) ('alpha_LRG', np.float64(1.0200671923310418)) ('f_sigv_LRG', np.float64(0.9005528692844575)) ('log_Mcent_LRG', np.float64(12.828102147108176)) ('sigma_M_LRG', np.float64(0.42776011288444316))
[Interation 14] ('M_0_LRG', np.float64(12.792816680091866)) ('M_1_LRG', np.float64(13.907230853367459)) ('alpha_LRG', np.float64(1.025951409255314)) ('f_sigv_LRG', np.float64(0.8850477675605497)) ('log_Mcent_LRG', np.float64(12.866937082706947)) ('sigma_M_LRG', np.float64(0.4635834368995994))
[Interation 14] ('M_0_LRG', np.float64(12.81539660893077)) ('M_1_LRG', np.float64(13.854190218940884)) ('alpha_LRG', np.float64(0.9958328144452789)) ('f_sigv_LRG', np.float64(0.8803263166469619)) ('log_Mcent_LRG', np.float64(12.820423830428666)) ('sigma_M_LRG', np.float64(0.4241144206383946))
[Interation 14] ('M_0_LRG', np.float64(12.742074835292668)) ('M_1_LRG', np.float64(13.867285035094632)) ('alpha_LRG', np.float64(1.0568251088917806)) ('f_sigv_LRG', np.float64(0.8804023650628389)) ('log_Mcent_LRG', np.float64(12.826120693519293)) ('sigma_M_LRG', np.float64(0.4324976751091385))
[Interation 14] ('M_0_LRG', np.float64(12.771002185607816)) ('M_1_LRG', np.float64(13.887449877690848)) ('alpha_LRG', np.float64(1.0310459175482047)) ('f_sigv_LRG', np.float64(0.8759552597125104)) ('log_Mcent_LRG', np.float64(12.840798791197143)) ('sigma_M_LRG', np.float64(0.443982584377486))
[Interation 14] ('M_0_LRG', np.float64(12.769355979234097)) ('M_1_LRG', np.float64(13.901201360511548)) ('alpha_LRG', np.float64(1.0279008244185186)) ('f_sigv_LRG', np.float64(0.8836751210131163)) ('log_Mcent_LRG', np.float64(12.862776339389933)) ('sigma_M_LRG', np.float64(0.46327505203494057))
[Interation 14] ('M_0_LRG', np.float64(12.810412152201838)) ('M_1_LRG', np.float64(13.919856019682816)) ('alpha_LRG', np.float64(0.9954119836901721)) ('f_sigv_LRG', np.float64(0.887869320660047)) ('log_Mcent_LRG', np.float64(12.882065486804054)) ('sigma_M_LRG', np.float64(0.47673649938266205))
[Interation 14] ('M_0_LRG', np.float64(12.811929961291835)) ('M_1_LRG', np.float64(13.884504554850066)) ('alpha_LRG', np.float64(0.9995535364480758)) ('f_sigv_LRG', np.float64(0.8859081453885784)) ('log_Mcent_LRG', np.float64(12.848982789773515)) ('sigma_M_LRG', np.float64(0.4499016203491403))
[Interation 14] ('M_0_LRG', np.float64(12.77433888946654)) ('M_1_LRG', np.float64(13.881888282801462)) ('alpha_LRG', np.float64(1.0150786979559412)) ('f_sigv_LRG', np.float64(0.8924770683018903)) ('log_Mcent_LRG', np.float64(12.836682959745861)) ('sigma_M_LRG', np.float64(0.4403343426557092))
[Interation 14] chi2=427.01583692584927
[Interation 14] chi2=451.2460370677682
[Interation 14] chi2=423.95055190786593
[Interation 14] chi2=379.5563422423196
[Interation 14] chi2=382.79255415804624
[Interation 14] chi2=400.9300792534825
[Interation 14] chi2=448.09190588973394
[Interation 14] chi2=511.1327913698531
[Interation 14] chi2=415.60550533758703
[Interation 14] chi2=442.8811949729898
[Interation 14] chi2=428.34879012818885
[Interation 14] chi2=440.34383387857207
[Interation 15] ('M_0_LRG', np.float64(12.788757712430204)) ('M_1_LRG', np.float64(13.855032498676104)) ('alpha_LRG', np.float64(1.0197963342918874)) ('f_sigv_LRG', np.float64(0.8801128460277143)) ('log_Mcent_LRG', np.float64(12.81447228530533)) ('sigma_M_LRG', np.float64(0.4191333721697075))
[Interation 15] ('M_0_LRG', np.float64(12.784592261902697)) ('M_1_LRG', np.float64(13.880893832869276)) ('alpha_LRG', np.float64(1.0333183453751948)) ('f_sigv_LRG', np.float64(0.8821738782019239)) ('log_Mcent_LRG', np.float64(12.830084063785694)) ('sigma_M_LRG', np.float64(0.42619196937880216))
[Interation 15] ('M_0_LRG', np.float64(12.808511694831399)) ('M_1_LRG', np.float64(13.865556412269651)) ('alpha_LRG', np.float64(0.9988740304579422)) ('f_sigv_LRG', np.float64(0.8914106813777873)) ('log_Mcent_LRG', np.float64(12.801593326201525)) ('sigma_M_LRG', np.float64(0.3914701599216139))
[Interation 15] ('M_0_LRG', np.float64(12.751387940822314)) ('M_1_LRG', np.float64(13.85638427248204)) ('alpha_LRG', np.float64(1.0330756190903427)) ('f_sigv_LRG', np.float64(0.8834707901911695)) ('log_Mcent_LRG', np.float64(12.802281003289457)) ('sigma_M_LRG', np.float64(0.4045528890528591))
[Interation 15] chi2=413.682778208728
[Interation 15] chi2=431.31714176629777
[Interation 15] chi2=436.392197518614
[Interation 15] chi2=392.01570898049994
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_09.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_09.npy
Set number of threads to 32
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.780786250614076)) ('M_1_LRG', np.float64(13.893398097187172)) ('alpha_LRG', np.float64(1.02671462028072)) ('f_sigv_LRG', np.float64(0.8802431844102088)) ('log_Mcent_LRG', np.float64(12.850692835691028)) ('sigma_M_LRG', np.float64(0.4506758422802205))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.33222317695617676
Start satellite assignement
Satellite assignement done 0.06979560852050781
LRG mock catalogue done 0.14624595642089844
615321 central galaxies, 83893 satellites, fraction of satellite 0.12 
Done overall time  LRG 0.662858247756958
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_09.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:19
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:19
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:22
Load smu measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load smu measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:22
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load smu measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:19
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:19
Load correlation matrix for LRG at z0.5 ...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:27
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.540772754969723)) ('M_1_LRG', np.float64(13.482857868965077)) ('alpha_LRG', np.float64(0.895626369190344)) ('f_sigv_LRG', np.float64(1.0143568344026244)) ('log_Mcent_LRG', np.float64(12.671655470988105)) ('sigma_M_LRG', np.float64(0.47637197148492505))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.61394992341184)) ('M_1_LRG', np.float64(13.408231804452988)) ('alpha_LRG', np.float64(0.907483447995013)) ('f_sigv_LRG', np.float64(1.0323419193340666)) ('log_Mcent_LRG', np.float64(12.638384892612448)) ('sigma_M_LRG', np.float64(0.5805864157008532))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.507236908834406)) ('M_1_LRG', np.float64(13.606693995615972)) ('alpha_LRG', np.float64(1.0022112272214945)) ('f_sigv_LRG', np.float64(1.0181382289084446)) ('log_Mcent_LRG', np.float64(12.717267232893619)) ('sigma_M_LRG', np.float64(0.494902698848791))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.472646017077487)) ('M_1_LRG', np.float64(13.487788463297484)) ('alpha_LRG', np.float64(1.1129846459024921)) ('f_sigv_LRG', np.float64(0.9915193858213727)) ('log_Mcent_LRG', np.float64(12.91115762483986)) ('sigma_M_LRG', np.float64(0.5696641948530663))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.526794673023156)) ('M_1_LRG', np.float64(13.409256488537167)) ('alpha_LRG', np.float64(0.8816317087979618)) ('f_sigv_LRG', np.float64(0.9011807374699843)) ('log_Mcent_LRG', np.float64(12.61747535583231)) ('sigma_M_LRG', np.float64(0.44408859559520414))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.605055872691391)) ('M_1_LRG', np.float64(13.519009324347751)) ('alpha_LRG', np.float64(0.9758037232234882)) ('f_sigv_LRG', np.float64(1.0069989880259966)) ('log_Mcent_LRG', np.float64(12.731868327026858)) ('sigma_M_LRG', np.float64(0.6069391436606909))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.609762131548656)) ('M_1_LRG', np.float64(13.578388891448864)) ('alpha_LRG', np.float64(0.8932968642764098)) ('f_sigv_LRG', np.float64(0.8240168923257711)) ('log_Mcent_LRG', np.float64(12.70812493914409)) ('sigma_M_LRG', np.float64(0.5838720160922894))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.39292006389788)) ('M_1_LRG', np.float64(13.150524524198335)) ('alpha_LRG', np.float64(0.9472411689547409)) ('f_sigv_LRG', np.float64(1.0525805021441332)) ('log_Mcent_LRG', np.float64(12.808998630125506)) ('sigma_M_LRG', np.float64(0.5313427178335218))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.611078328909437)) ('M_1_LRG', np.float64(13.447388207005446)) ('alpha_LRG', np.float64(1.0217980192315468)) ('f_sigv_LRG', np.float64(1.185410147536948)) ('log_Mcent_LRG', np.float64(12.938697498188837)) ('sigma_M_LRG', np.float64(0.5237644974093705))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.31781735071171)) ('M_1_LRG', np.float64(13.734937961589498)) ('alpha_LRG', np.float64(1.044923292129659)) ('f_sigv_LRG', np.float64(0.9898984955518312)) ('log_Mcent_LRG', np.float64(12.780793723344807)) ('sigma_M_LRG', np.float64(0.5660876345467375))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.504661932211249)) ('M_1_LRG', np.float64(13.50279713673572)) ('alpha_LRG', np.float64(0.9836178224117565)) ('f_sigv_LRG', np.float64(0.9613122808069006)) ('log_Mcent_LRG', np.float64(12.581051301873988)) ('sigma_M_LRG', np.float64(0.5818242659513982))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 15] ('M_0_LRG', np.float64(12.52410150765878)) ('M_1_LRG', np.float64(13.717136610836087)) ('alpha_LRG', np.float64(0.9081604651722637)) ('f_sigv_LRG', np.float64(0.8530968472661615)) ('log_Mcent_LRG', np.float64(12.536843054246408)) ('sigma_M_LRG', np.float64(0.48863964463154025))
[Interation 15] chi2=3127.392582700978
[Interation 15] chi2=23499.593215368965
[Interation 15] chi2=2319.2899277357265
[Interation 15] chi2=4869.204290685251
[Interation 15] chi2=3412.653761125389
[Interation 15] chi2=3849.929671027878
[Interation 15] chi2=2953.6876408734556
[Interation 15] chi2=38939.70411585834
[Interation 15] chi2=2371.22623557408
[Interation 15] chi2=34305.6255280292
[Interation 15] chi2=6366.346323425274
[Interation 15] chi2=6437.8882445632025
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 16] ('M_0_LRG', np.float64(12.819669282208107)) ('M_1_LRG', np.float64(13.77500069027098)) ('alpha_LRG', np.float64(0.9156826300867722)) ('f_sigv_LRG', np.float64(0.9234754733136469)) ('log_Mcent_LRG', np.float64(12.71701842560202)) ('sigma_M_LRG', np.float64(0.30912246125996634))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 16] ('M_0_LRG', np.float64(12.851829634853974)) ('M_1_LRG', np.float64(13.839130298153693)) ('alpha_LRG', np.float64(0.982999170375441)) ('f_sigv_LRG', np.float64(0.8483508339225191)) ('log_Mcent_LRG', np.float64(12.831230975798922)) ('sigma_M_LRG', np.float64(0.45317615067735817))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 16] ('M_0_LRG', np.float64(12.691114802226513)) ('M_1_LRG', np.float64(13.813172651589015)) ('alpha_LRG', np.float64(1.0899875506184784)) ('f_sigv_LRG', np.float64(0.8837749155868025)) ('log_Mcent_LRG', np.float64(12.749358500055878)) ('sigma_M_LRG', np.float64(0.356259208155017))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 16] ('M_0_LRG', np.float64(12.567838869048108)) ('M_1_LRG', np.float64(13.898813486698204)) ('alpha_LRG', np.float64(1.0797846226075651)) ('f_sigv_LRG', np.float64(0.9290929960566503)) ('log_Mcent_LRG', np.float64(12.79320760013862)) ('sigma_M_LRG', np.float64(0.35761572116357565))
[Interation 16] chi2=466.2540520129039
[Interation 16] chi2=427.1757236823643
[Interation 16] chi2=445.13060569291866
[Interation 16] chi2=494.7748705106152
[Interation 16] ('M_0_LRG', np.float64(12.756654513606449)) ('M_1_LRG', np.float64(13.86908423017961)) ('alpha_LRG', np.float64(1.0365195918254542)) ('f_sigv_LRG', np.float64(0.8736192498744532)) ('log_Mcent_LRG', np.float64(12.815459542365458)) ('sigma_M_LRG', np.float64(0.4100346873874094))
[Interation 16] ('M_0_LRG', np.float64(12.905826756163773)) ('M_1_LRG', np.float64(13.782410746334657)) ('alpha_LRG', np.float64(0.9651951876722215)) ('f_sigv_LRG', np.float64(0.8505273214412544)) ('log_Mcent_LRG', np.float64(12.783999733541494)) ('sigma_M_LRG', np.float64(0.3941470751426672))
[Interation 16] ('M_0_LRG', np.float64(12.876513410121861)) ('M_1_LRG', np.float64(13.840295534436448)) ('alpha_LRG', np.float64(0.9785773860989099)) ('f_sigv_LRG', np.float64(0.869260421553025)) ('log_Mcent_LRG', np.float64(12.836670350514522)) ('sigma_M_LRG', np.float64(0.44183966989200424))
[Interation 16] ('M_0_LRG', np.float64(12.920594817691871)) ('M_1_LRG', np.float64(13.75962781566265)) ('alpha_LRG', np.float64(0.948284112097831)) ('f_sigv_LRG', np.float64(0.8618120986278679)) ('log_Mcent_LRG', np.float64(12.749187381329339)) ('sigma_M_LRG', np.float64(0.3576200489383109))
[Interation 16] ('M_0_LRG', np.float64(12.892707824406942)) ('M_1_LRG', np.float64(13.786331061022935)) ('alpha_LRG', np.float64(0.9435622822158535)) ('f_sigv_LRG', np.float64(0.8743820977766341)) ('log_Mcent_LRG', np.float64(12.763255462394104)) ('sigma_M_LRG', np.float64(0.3746917319834015))
[Interation 16] ('M_0_LRG', np.float64(12.88301629695971)) ('M_1_LRG', np.float64(13.776378394057845)) ('alpha_LRG', np.float64(0.9398343075155555)) ('f_sigv_LRG', np.float64(0.8655053344978271)) ('log_Mcent_LRG', np.float64(12.740736111262029)) ('sigma_M_LRG', np.float64(0.3490976285539098))
[Interation 16] ('M_0_LRG', np.float64(12.767542166521183)) ('M_1_LRG', np.float64(13.829029833828974)) ('alpha_LRG', np.float64(1.0352022554672198)) ('f_sigv_LRG', np.float64(0.8783123973116306)) ('log_Mcent_LRG', np.float64(12.76800006075382)) ('sigma_M_LRG', np.float64(0.3630171885576544))
[Interation 16] ('M_0_LRG', np.float64(12.859624285648616)) ('M_1_LRG', np.float64(13.809278511264923)) ('alpha_LRG', np.float64(0.9864539678402968)) ('f_sigv_LRG', np.float64(0.8707379100031399)) ('log_Mcent_LRG', np.float64(12.785430006803619)) ('sigma_M_LRG', np.float64(0.38289308481769185))
[Interation 16] ('M_0_LRG', np.float64(12.91635181020738)) ('M_1_LRG', np.float64(13.789206526027149)) ('alpha_LRG', np.float64(0.9246094714998502)) ('f_sigv_LRG', np.float64(0.8861463217103047)) ('log_Mcent_LRG', np.float64(12.751265656410723)) ('sigma_M_LRG', np.float64(0.34535295608899563))
[Interation 16] ('M_0_LRG', np.float64(12.788610425401536)) ('M_1_LRG', np.float64(13.875019573985549)) ('alpha_LRG', np.float64(1.0119799684998863)) ('f_sigv_LRG', np.float64(0.8800585232258187)) ('log_Mcent_LRG', np.float64(12.829125703431918)) ('sigma_M_LRG', np.float64(0.42420168921306317))
[Interation 16] ('M_0_LRG', np.float64(12.808532271348358)) ('M_1_LRG', np.float64(13.839776712732165)) ('alpha_LRG', np.float64(0.9981386234621532)) ('f_sigv_LRG', np.float64(0.8746200661160893)) ('log_Mcent_LRG', np.float64(12.801810919615473)) ('sigma_M_LRG', np.float64(0.4106773384402511))
[Interation 16] ('M_0_LRG', np.float64(12.774794059391285)) ('M_1_LRG', np.float64(13.833913885376532)) ('alpha_LRG', np.float64(1.0211917148682799)) ('f_sigv_LRG', np.float64(0.8769528183673889)) ('log_Mcent_LRG', np.float64(12.773104435277626)) ('sigma_M_LRG', np.float64(0.3681948152703157))
[Interation 16] chi2=487.95594586608865
[Interation 16] chi2=374.43318554180587
[Interation 16] chi2=459.10873481709183
[Interation 16] chi2=415.86121809287516
[Interation 16] chi2=438.06318446629285
[Interation 16] chi2=455.9719761696724
[Interation 16] chi2=378.73532728674775
[Interation 16] chi2=438.38073306183867
[Interation 16] chi2=459.1914046788439
[Interation 16] chi2=450.8743644630486
[Interation 16] chi2=475.9586508110717
[Interation 16] chi2=458.02441713684703
[Interation 17] ('M_0_LRG', np.float64(12.833329378881597)) ('M_1_LRG', np.float64(13.847839075292823)) ('alpha_LRG', np.float64(0.9879062436381033)) ('f_sigv_LRG', np.float64(0.8808406781037067)) ('log_Mcent_LRG', np.float64(12.818158998471228)) ('sigma_M_LRG', np.float64(0.4233199446350068))
[Interation 17] ('M_0_LRG', np.float64(12.846557730810572)) ('M_1_LRG', np.float64(13.820807788846764)) ('alpha_LRG', np.float64(0.9600991500799274)) ('f_sigv_LRG', np.float64(0.874436722595661)) ('log_Mcent_LRG', np.float64(12.773723407718164)) ('sigma_M_LRG', np.float64(0.36898242830425215))
[Interation 17] ('M_0_LRG', np.float64(12.842103656314546)) ('M_1_LRG', np.float64(13.797301716069613)) ('alpha_LRG', np.float64(0.9835569830599558)) ('f_sigv_LRG', np.float64(0.8789214611216434)) ('log_Mcent_LRG', np.float64(12.752467169350957)) ('sigma_M_LRG', np.float64(0.3496024096055197))
[Interation 17] ('M_0_LRG', np.float64(12.849627638239651)) ('M_1_LRG', np.float64(13.832358328595951)) ('alpha_LRG', np.float64(0.9824273423572701)) ('f_sigv_LRG', np.float64(0.8824302413131451)) ('log_Mcent_LRG', np.float64(12.806745975955248)) ('sigma_M_LRG', np.float64(0.4104777064577671))
[Interation 17] chi2=410.1766218779314
[Interation 17] chi2=407.40628264024167
[Interation 17] chi2=404.7303475689354
[Interation 17] chi2=367.4755476859878
[Interation 17] ('M_0_LRG', np.float64(12.851274636975749)) ('M_1_LRG', np.float64(13.811124579596271)) ('alpha_LRG', np.float64(0.9677395125283552)) ('f_sigv_LRG', np.float64(0.8740999843606049)) ('log_Mcent_LRG', np.float64(12.768474072770337)) ('sigma_M_LRG', np.float64(0.3658167595398548))
[Interation 17] ('M_0_LRG', np.float64(12.855138200118896)) ('M_1_LRG', np.float64(13.821721720128519)) ('alpha_LRG', np.float64(0.9670210176658276)) ('f_sigv_LRG', np.float64(0.8784316611158562)) ('log_Mcent_LRG', np.float64(12.788545541018948)) ('sigma_M_LRG', np.float64(0.38960867934630894))
[Interation 17] ('M_0_LRG', np.float64(12.8516453889909)) ('M_1_LRG', np.float64(13.813165859051455)) ('alpha_LRG', np.float64(0.9622062010132381)) ('f_sigv_LRG', np.float64(0.8762990973684205)) ('log_Mcent_LRG', np.float64(12.772908372692806)) ('sigma_M_LRG', np.float64(0.37296474711596067))
[Interation 17] ('M_0_LRG', np.float64(12.849583474626872)) ('M_1_LRG', np.float64(13.840248231606141)) ('alpha_LRG', np.float64(0.9689862991021193)) ('f_sigv_LRG', np.float64(0.8846776879344287)) ('log_Mcent_LRG', np.float64(12.806690643635985)) ('sigma_M_LRG', np.float64(0.4107875673328969))
[Interation 17] ('M_0_LRG', np.float64(12.850459995273761)) ('M_1_LRG', np.float64(13.825956535553962)) ('alpha_LRG', np.float64(0.9667644232593635)) ('f_sigv_LRG', np.float64(0.8787764933793066)) ('log_Mcent_LRG', np.float64(12.786474503597603)) ('sigma_M_LRG', np.float64(0.38396688542406665))
[Interation 17] ('M_0_LRG', np.float64(12.854240332436534)) ('M_1_LRG', np.float64(13.80450478952758)) ('alpha_LRG', np.float64(0.9876955497401324)) ('f_sigv_LRG', np.float64(0.8716397458451193)) ('log_Mcent_LRG', np.float64(12.765530599361636)) ('sigma_M_LRG', np.float64(0.36051586314735606))
[Interation 17] ('M_0_LRG', np.float64(12.850726890459315)) ('M_1_LRG', np.float64(13.83777310925776)) ('alpha_LRG', np.float64(0.9597144226189303)) ('f_sigv_LRG', np.float64(0.8798224653530529)) ('log_Mcent_LRG', np.float64(12.802747065113444)) ('sigma_M_LRG', np.float64(0.40206664505529177))
[Interation 17] ('M_0_LRG', np.float64(12.85104246206107)) ('M_1_LRG', np.float64(13.815347471772139)) ('alpha_LRG', np.float64(0.9824500720349204)) ('f_sigv_LRG', np.float64(0.872983946094595)) ('log_Mcent_LRG', np.float64(12.778666556285684)) ('sigma_M_LRG', np.float64(0.3736300607022528))
[Interation 17] ('M_0_LRG', np.float64(12.849588464407828)) ('M_1_LRG', np.float64(13.83900232820975)) ('alpha_LRG', np.float64(0.9722434001872219)) ('f_sigv_LRG', np.float64(0.8865799794140304)) ('log_Mcent_LRG', np.float64(12.805839790427337)) ('sigma_M_LRG', np.float64(0.40766394617091845))
[Interation 17] ('M_0_LRG', np.float64(12.851975453194596)) ('M_1_LRG', np.float64(13.812923842698783)) ('alpha_LRG', np.float64(0.9673426467385453)) ('f_sigv_LRG', np.float64(0.8826754008133838)) ('log_Mcent_LRG', np.float64(12.774158275932347)) ('sigma_M_LRG', np.float64(0.3736050704973696))
[Interation 17] ('M_0_LRG', np.float64(12.853087595287562)) ('M_1_LRG', np.float64(13.826930483973625)) ('alpha_LRG', np.float64(0.9545343686907917)) ('f_sigv_LRG', np.float64(0.8818278866009733)) ('log_Mcent_LRG', np.float64(12.786451990507281)) ('sigma_M_LRG', np.float64(0.3867618161610332))
[Interation 17] ('M_0_LRG', np.float64(12.85339596133161)) ('M_1_LRG', np.float64(13.834670192126593)) ('alpha_LRG', np.float64(0.95406014060611)) ('f_sigv_LRG', np.float64(0.8777245404547801)) ('log_Mcent_LRG', np.float64(12.800515053349715)) ('sigma_M_LRG', np.float64(0.4048550181593454))
[Interation 17] chi2=405.9726913633051
[Interation 17] chi2=408.90423431779965
[Interation 17] chi2=389.9308483334678
[Interation 17] chi2=379.1335284080778
[Interation 17] chi2=367.78881772955964
[Interation 17] chi2=388.9649931028518
[Interation 17] chi2=391.9011688055851
[Interation 17] chi2=400.32956822968595
[Interation 17] chi2=334.96072658103054
[Interation 17] chi2=355.97432971173515
[Interation 17] chi2=374.04054643157497
[Interation 17] chi2=386.525461783734
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_10.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_10.npy
Set number of threads to 32
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.853735606773412)) ('M_1_LRG', np.float64(13.792052071599919)) ('alpha_LRG', np.float64(0.9602210438091167)) ('f_sigv_LRG', np.float64(0.8759387325756857)) ('log_Mcent_LRG', np.float64(12.748100590112083)) ('sigma_M_LRG', np.float64(0.3460851917325277))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3618485927581787
Start satellite assignement
Satellite assignement done 0.07237768173217773
LRG mock catalogue done 0.14751052856445312
610836 central galaxies, 88926 satellites, fraction of satellite 0.13 
Done overall time  LRG 0.6874966621398926
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_10.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:26
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:27
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.439669078120527)) ('M_1_LRG', np.float64(13.279270894439621)) ('alpha_LRG', np.float64(0.9737851249538962)) ('f_sigv_LRG', np.float64(0.9553916730603511)) ('log_Mcent_LRG', np.float64(12.759209978420426)) ('sigma_M_LRG', np.float64(0.5071737505276912))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.598232646658893)) ('M_1_LRG', np.float64(13.576153047092161)) ('alpha_LRG', np.float64(0.9459281407256483)) ('f_sigv_LRG', np.float64(0.8802648502079478)) ('log_Mcent_LRG', np.float64(12.558418687159286)) ('sigma_M_LRG', np.float64(0.4683462831397708))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.503432624140796)) ('M_1_LRG', np.float64(13.503084078835235)) ('alpha_LRG', np.float64(0.9143622770212659)) ('f_sigv_LRG', np.float64(0.9677633685887761)) ('log_Mcent_LRG', np.float64(12.576129504609032)) ('sigma_M_LRG', np.float64(0.522710402998206))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.525983655846883)) ('M_1_LRG', np.float64(13.780827289479836)) ('alpha_LRG', np.float64(1.0130513784322177)) ('f_sigv_LRG', np.float64(1.0064056733272349)) ('log_Mcent_LRG', np.float64(12.71950732700056)) ('sigma_M_LRG', np.float64(0.4981306597096289))
[Interation 18] chi2=18145.057328102346
[Interation 18] chi2=4104.816204793162
[Interation 18] chi2=4820.7915005506575
[Interation 18] chi2=2520.9623012883576
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.717736661283704)) ('M_1_LRG', np.float64(13.902134660985764)) ('alpha_LRG', np.float64(1.0458825902262987)) ('f_sigv_LRG', np.float64(0.885668537816732)) ('log_Mcent_LRG', np.float64(12.824905722372279)) ('sigma_M_LRG', np.float64(0.411226016335369))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.762909171587044)) ('M_1_LRG', np.float64(13.902143228932204)) ('alpha_LRG', np.float64(1.016589398778895)) ('f_sigv_LRG', np.float64(0.8856056781267903)) ('log_Mcent_LRG', np.float64(12.825096701280431)) ('sigma_M_LRG', np.float64(0.4112711232159079))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.715591670962882)) ('M_1_LRG', np.float64(13.840094961165363)) ('alpha_LRG', np.float64(1.058740732345608)) ('f_sigv_LRG', np.float64(0.8931405086368281)) ('log_Mcent_LRG', np.float64(12.771797094125324)) ('sigma_M_LRG', np.float64(0.34099663085343773))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.870983635634678)) ('M_1_LRG', np.float64(13.81515414322453)) ('alpha_LRG', np.float64(0.9785099012890113)) ('f_sigv_LRG', np.float64(0.88609875505788)) ('log_Mcent_LRG', np.float64(12.787481738387099)) ('sigma_M_LRG', np.float64(0.3937442631849304))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.883647854282051)) ('M_1_LRG', np.float64(13.859190467163435)) ('alpha_LRG', np.float64(0.977331594755816)) ('f_sigv_LRG', np.float64(0.8961186622209714)) ('log_Mcent_LRG', np.float64(12.853519574860126)) ('sigma_M_LRG', np.float64(0.4603836287504067))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.693841880812961)) ('M_1_LRG', np.float64(13.75993634014035)) ('alpha_LRG', np.float64(1.0260561555114758)) ('f_sigv_LRG', np.float64(0.8927264441977627)) ('log_Mcent_LRG', np.float64(12.663267906552932)) ('sigma_M_LRG', np.float64(0.24031507757901427))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.900852521600411)) ('M_1_LRG', np.float64(13.749286982673421)) ('alpha_LRG', np.float64(0.9794315663914153)) ('f_sigv_LRG', np.float64(0.8646665169514786)) ('log_Mcent_LRG', np.float64(12.729968752279788)) ('sigma_M_LRG', np.float64(0.33888422127355655))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.712577783611069)) ('M_1_LRG', np.float64(13.868305472436539)) ('alpha_LRG', np.float64(1.029560275187474)) ('f_sigv_LRG', np.float64(0.8918077731458496)) ('log_Mcent_LRG', np.float64(12.805770352700586)) ('sigma_M_LRG', np.float64(0.4214342057831566))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.881119103656996)) ('M_1_LRG', np.float64(13.777827933669833)) ('alpha_LRG', np.float64(0.9871545595940938)) ('f_sigv_LRG', np.float64(0.8494437369624639)) ('log_Mcent_LRG', np.float64(12.758369884360024)) ('sigma_M_LRG', np.float64(0.36741840786524993))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.671901040991498)) ('M_1_LRG', np.float64(13.866659202440658)) ('alpha_LRG', np.float64(1.0810306089284842)) ('f_sigv_LRG', np.float64(0.8953624738526571)) ('log_Mcent_LRG', np.float64(12.786998821795066)) ('sigma_M_LRG', np.float64(0.37077819524457756))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.744583605920425)) ('M_1_LRG', np.float64(13.851849232056606)) ('alpha_LRG', np.float64(1.0206091343786672)) ('f_sigv_LRG', np.float64(0.8862574541587876)) ('log_Mcent_LRG', np.float64(12.765826053563654)) ('sigma_M_LRG', np.float64(0.34842983721598464))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 18] ('M_0_LRG', np.float64(12.729953662809276)) ('M_1_LRG', np.float64(13.79966310373161)) ('alpha_LRG', np.float64(1.0196331956040527)) ('f_sigv_LRG', np.float64(0.918265037352012)) ('log_Mcent_LRG', np.float64(12.699696457861698)) ('sigma_M_LRG', np.float64(0.26646635170066096))
[Interation 18] chi2=444.7970843910953
[Interation 18] chi2=454.5498582983905
[Interation 18] chi2=447.18179586916057
[Interation 18] chi2=412.7922268669943
[Interation 18] chi2=393.08984965257497
[Interation 18] chi2=460.35721505646967
[Interation 18] chi2=437.2168066017418
[Interation 18] chi2=472.8761494734173
[Interation 18] chi2=398.0176660610869
[Interation 18] chi2=441.32937954731784
[Interation 18] chi2=417.1719164802959
[Interation 18] chi2=423.76115744754406
[Interation 19] ('M_0_LRG', np.float64(12.814029156950028)) ('M_1_LRG', np.float64(13.794166123092802)) ('alpha_LRG', np.float64(0.9780649395056717)) ('f_sigv_LRG', np.float64(0.8883241360974796)) ('log_Mcent_LRG', np.float64(12.730546502562254)) ('sigma_M_LRG', np.float64(0.3054540927752231))
[Interation 19] ('M_0_LRG', np.float64(12.805883598033512)) ('M_1_LRG', np.float64(13.799949920810404)) ('alpha_LRG', np.float64(1.0117680368234903)) ('f_sigv_LRG', np.float64(0.8662195751562916)) ('log_Mcent_LRG', np.float64(12.756588748464747)) ('sigma_M_LRG', np.float64(0.3517007962314098))
[Interation 19] ('M_0_LRG', np.float64(12.797583397907072)) ('M_1_LRG', np.float64(13.801108044781476)) ('alpha_LRG', np.float64(1.0215639789924287)) ('f_sigv_LRG', np.float64(0.8801304766290305)) ('log_Mcent_LRG', np.float64(12.751231311086178)) ('sigma_M_LRG', np.float64(0.34705161836293497))
[Interation 19] ('M_0_LRG', np.float64(12.844725031793281)) ('M_1_LRG', np.float64(13.813000653465757)) ('alpha_LRG', np.float64(0.9876739408893843)) ('f_sigv_LRG', np.float64(0.8437376680825428)) ('log_Mcent_LRG', np.float64(12.773694101343471)) ('sigma_M_LRG', np.float64(0.3770781465132732))
[Interation 19] chi2=399.4773757374614
[Interation 19] chi2=409.6144361188786
[Interation 19] chi2=414.68897208246966
[Interation 19] chi2=488.8722921190598
[Interation 19] ('M_0_LRG', np.float64(12.849179032073202)) ('M_1_LRG', np.float64(13.765685331909737)) ('alpha_LRG', np.float64(0.9970979229436828)) ('f_sigv_LRG', np.float64(0.8530795392487486)) ('log_Mcent_LRG', np.float64(12.729070540795759)) ('sigma_M_LRG', np.float64(0.32604872176124855))
[Interation 19] ('M_0_LRG', np.float64(12.803999442732065)) ('M_1_LRG', np.float64(13.786793671943395)) ('alpha_LRG', np.float64(0.999173565765766)) ('f_sigv_LRG', np.float64(0.8937884964045046)) ('log_Mcent_LRG', np.float64(12.71984413221743)) ('sigma_M_LRG', np.float64(0.29654753355387176))
[Interation 19] ('M_0_LRG', np.float64(12.799244767969503)) ('M_1_LRG', np.float64(13.80592907804224)) ('alpha_LRG', np.float64(1.0150376423772287)) ('f_sigv_LRG', np.float64(0.8741805391542637)) ('log_Mcent_LRG', np.float64(12.75125526994653)) ('sigma_M_LRG', np.float64(0.34742317708165416))
[Interation 19] ('M_0_LRG', np.float64(12.859566494617326)) ('M_1_LRG', np.float64(13.797444871697286)) ('alpha_LRG', np.float64(0.9766726712338702)) ('f_sigv_LRG', np.float64(0.8815287753933012)) ('log_Mcent_LRG', np.float64(12.752367849495764)) ('sigma_M_LRG', np.float64(0.33774226965262566))
[Interation 19] ('M_0_LRG', np.float64(12.821226204787143)) ('M_1_LRG', np.float64(13.792856113600722)) ('alpha_LRG', np.float64(0.995916842934803)) ('f_sigv_LRG', np.float64(0.8784181378646747)) ('log_Mcent_LRG', np.float64(12.741730932057022)) ('sigma_M_LRG', np.float64(0.3347284796104621))
[Interation 19] ('M_0_LRG', np.float64(12.839010716195373)) ('M_1_LRG', np.float64(13.778964105851786)) ('alpha_LRG', np.float64(1.0031169433773852)) ('f_sigv_LRG', np.float64(0.8743816794689283)) ('log_Mcent_LRG', np.float64(12.73405708395106)) ('sigma_M_LRG', np.float64(0.32316931805128213))
[Interation 19] ('M_0_LRG', np.float64(12.843283247920363)) ('M_1_LRG', np.float64(13.80022561864244)) ('alpha_LRG', np.float64(0.9776705991833835)) ('f_sigv_LRG', np.float64(0.8818743212116961)) ('log_Mcent_LRG', np.float64(12.744725257439109)) ('sigma_M_LRG', np.float64(0.32690733200464017))
[Interation 19] ('M_0_LRG', np.float64(12.864828850183397)) ('M_1_LRG', np.float64(13.78506299256866)) ('alpha_LRG', np.float64(0.9858690680448219)) ('f_sigv_LRG', np.float64(0.8604920879637878)) ('log_Mcent_LRG', np.float64(12.753488207251598)) ('sigma_M_LRG', np.float64(0.352161503517739))
[Interation 19] ('M_0_LRG', np.float64(12.83560298103235)) ('M_1_LRG', np.float64(13.800083702480093)) ('alpha_LRG', np.float64(0.9854560661396473)) ('f_sigv_LRG', np.float64(0.8743865705210813)) ('log_Mcent_LRG', np.float64(12.74761802313627)) ('sigma_M_LRG', np.float64(0.33745219562091483))
[Interation 19] ('M_0_LRG', np.float64(12.780216169855874)) ('M_1_LRG', np.float64(13.813904940859738)) ('alpha_LRG', np.float64(1.0130145599018485)) ('f_sigv_LRG', np.float64(0.8931760281549151)) ('log_Mcent_LRG', np.float64(12.74206035986587)) ('sigma_M_LRG', np.float64(0.31948057018856135))
[Interation 19] ('M_0_LRG', np.float64(12.82549139211769)) ('M_1_LRG', np.float64(13.781136593498568)) ('alpha_LRG', np.float64(0.9953637313344907)) ('f_sigv_LRG', np.float64(0.8748380509834273)) ('log_Mcent_LRG', np.float64(12.721573227459876)) ('sigma_M_LRG', np.float64(0.30290833627296454))
[Interation 19] ('M_0_LRG', np.float64(12.784253380265806)) ('M_1_LRG', np.float64(13.819097541892774)) ('alpha_LRG', np.float64(1.0031654665037406)) ('f_sigv_LRG', np.float64(0.8953224498471026)) ('log_Mcent_LRG', np.float64(12.742233252358565)) ('sigma_M_LRG', np.float64(0.3155229109252802))
[Interation 19] chi2=471.23026623516495
[Interation 19] chi2=444.1294916387719
[Interation 19] chi2=422.7675032790156
[Interation 19] chi2=397.64585002208236
[Interation 19] chi2=395.80848059548714
[Interation 19] chi2=426.0139808806347
[Interation 19] chi2=475.0404418645537
[Interation 19] chi2=374.5159449097017
[Interation 19] chi2=454.3417321888658
[Interation 19] chi2=433.3599487581671
[Interation 19] chi2=458.26547104967335
[Interation 19] chi2=422.5279942605438
[Interation 20] ('M_0_LRG', np.float64(12.804838435617933)) ('M_1_LRG', np.float64(13.788182153331741)) ('alpha_LRG', np.float64(1.0104279167413022)) ('f_sigv_LRG', np.float64(0.8786836131459984)) ('log_Mcent_LRG', np.float64(12.731006562546911)) ('sigma_M_LRG', np.float64(0.31345615452828246))
[Interation 20] ('M_0_LRG', np.float64(12.793377044954523)) ('M_1_LRG', np.float64(13.821433518738797)) ('alpha_LRG', np.float64(1.0044897008208808)) ('f_sigv_LRG', np.float64(0.898113500057415)) ('log_Mcent_LRG', np.float64(12.765024068766296)) ('sigma_M_LRG', np.float64(0.35773532631858884))
[Interation 20] ('M_0_LRG', np.float64(12.78767809803712)) ('M_1_LRG', np.float64(13.787696267128066)) ('alpha_LRG', np.float64(1.0237226103822832)) ('f_sigv_LRG', np.float64(0.8850351450519848)) ('log_Mcent_LRG', np.float64(12.731027008933879)) ('sigma_M_LRG', np.float64(0.3200159525105566))
[Interation 20] ('M_0_LRG', np.float64(12.794914691364765)) ('M_1_LRG', np.float64(13.79152657642598)) ('alpha_LRG', np.float64(1.0057287129306438)) ('f_sigv_LRG', np.float64(0.8862672996845781)) ('log_Mcent_LRG', np.float64(12.723585342814141)) ('sigma_M_LRG', np.float64(0.30252203825915847))
[Interation 20] chi2=437.43594908860547
[Interation 20] chi2=405.3262194121918
[Interation 20] chi2=434.03787087668474
[Interation 20] chi2=430.66892625112433
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_11.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_11.npy
Set number of threads to 32
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.791020662266606)) ('M_1_LRG', np.float64(13.806119479902732)) ('alpha_LRG', np.float64(1.0168760493373195)) ('f_sigv_LRG', np.float64(0.8848818845708852)) ('log_Mcent_LRG', np.float64(12.746940467892285)) ('sigma_M_LRG', np.float64(0.3340802669571561))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3668212890625
Start satellite assignement
Satellite assignement done 0.07392525672912598
LRG mock catalogue done 0.1476268768310547
610106 central galaxies, 89669 satellites, fraction of satellite 0.13 
Done overall time  LRG 0.6922581195831299
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_11.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.493200044284048)) ('M_1_LRG', np.float64(13.51869164563532)) ('alpha_LRG', np.float64(0.8620605003699597)) ('f_sigv_LRG', np.float64(0.8412881447248386)) ('log_Mcent_LRG', np.float64(12.738127337640888)) ('sigma_M_LRG', np.float64(0.601272562562104))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.381715182580713)) ('M_1_LRG', np.float64(13.9486908461264)) ('alpha_LRG', np.float64(0.8198227019022404)) ('f_sigv_LRG', np.float64(1.0824680986243433)) ('log_Mcent_LRG', np.float64(12.690679746750709)) ('sigma_M_LRG', np.float64(0.3572759382928401))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.480850890343186)) ('M_1_LRG', np.float64(13.978276220878243)) ('alpha_LRG', np.float64(1.0866578815243269)) ('f_sigv_LRG', np.float64(0.9272707470546142)) ('log_Mcent_LRG', np.float64(12.747393746673046)) ('sigma_M_LRG', np.float64(0.343596907368236))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.429336113207908)) ('M_1_LRG', np.float64(13.701123814187193)) ('alpha_LRG', np.float64(0.9136357514558668)) ('f_sigv_LRG', np.float64(0.879606696167212)) ('log_Mcent_LRG', np.float64(12.79841812232851)) ('sigma_M_LRG', np.float64(0.4444772356293056))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.352293038768735)) ('M_1_LRG', np.float64(13.306777472809673)) ('alpha_LRG', np.float64(1.0878191687888144)) ('f_sigv_LRG', np.float64(0.9665429142455528)) ('log_Mcent_LRG', np.float64(12.702107765621493)) ('sigma_M_LRG', np.float64(0.5688330132533406))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.54227559597152)) ('M_1_LRG', np.float64(14.077068547882503)) ('alpha_LRG', np.float64(1.0420717036267324)) ('f_sigv_LRG', np.float64(1.103882406342282)) ('log_Mcent_LRG', np.float64(12.836188618313345)) ('sigma_M_LRG', np.float64(0.34808734894524307))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.640030166941997)) ('M_1_LRG', np.float64(13.751691990896903)) ('alpha_LRG', np.float64(0.9445337970217197)) ('f_sigv_LRG', np.float64(1.1642992441217646)) ('log_Mcent_LRG', np.float64(12.763756919307268)) ('sigma_M_LRG', np.float64(0.48381456071446033))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.434770787507164)) ('M_1_LRG', np.float64(13.514979160941975)) ('alpha_LRG', np.float64(0.9861594925966763)) ('f_sigv_LRG', np.float64(1.0368451295009797)) ('log_Mcent_LRG', np.float64(12.727232956067983)) ('sigma_M_LRG', np.float64(0.6107914001508967))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.392100929558566)) ('M_1_LRG', np.float64(13.899655891374154)) ('alpha_LRG', np.float64(1.0181385836468149)) ('f_sigv_LRG', np.float64(0.97625602568793)) ('log_Mcent_LRG', np.float64(12.677791473331023)) ('sigma_M_LRG', np.float64(0.48030533005237086))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.489429529280518)) ('M_1_LRG', np.float64(13.436441199453899)) ('alpha_LRG', np.float64(0.9804413748192856)) ('f_sigv_LRG', np.float64(0.8505384208296324)) ('log_Mcent_LRG', np.float64(12.712639456149923)) ('sigma_M_LRG', np.float64(0.5568199439615726))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.623809265990744)) ('M_1_LRG', np.float64(13.636930934779429)) ('alpha_LRG', np.float64(1.0755998458612692)) ('f_sigv_LRG', np.float64(0.8904460190642876)) ('log_Mcent_LRG', np.float64(12.713605631571188)) ('sigma_M_LRG', np.float64(0.4643998896108714))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 20] ('M_0_LRG', np.float64(12.428023909622482)) ('M_1_LRG', np.float64(13.603814749936076)) ('alpha_LRG', np.float64(0.9474820450476056)) ('f_sigv_LRG', np.float64(1.0079922083066846)) ('log_Mcent_LRG', np.float64(12.738248688939223)) ('sigma_M_LRG', np.float64(0.5068013030459022))
[Interation 20] chi2=3513.5760893120914
[Interation 20] chi2=1661.7681988151178
[Interation 20] chi2=1091.774653900928
[Interation 20] chi2=998.4949009436993
[Interation 20] chi2=4234.511445683941
[Interation 20] chi2=2048.725795501651
[Interation 20] chi2=11339.03556141176
[Interation 20] chi2=3952.3210168986375
[Interation 20] chi2=4457.403020766057
[Interation 20] chi2=3758.1307590852334
[Interation 20] chi2=1448.8499744417445
[Interation 20] chi2=2721.673629142314
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 21] ('M_0_LRG', np.float64(12.737533249223496)) ('M_1_LRG', np.float64(13.854867369379035)) ('alpha_LRG', np.float64(1.0883503174761315)) ('f_sigv_LRG', np.float64(0.9226362293612563)) ('log_Mcent_LRG', np.float64(12.800173846122282)) ('sigma_M_LRG', np.float64(0.3980900582957767))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 21] ('M_0_LRG', np.float64(12.667129808481823)) ('M_1_LRG', np.float64(13.84801265893877)) ('alpha_LRG', np.float64(1.042414299604312)) ('f_sigv_LRG', np.float64(0.9505182595203343)) ('log_Mcent_LRG', np.float64(12.783396895243369)) ('sigma_M_LRG', np.float64(0.36804928556213107))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 21] ('M_0_LRG', np.float64(12.774929560417585)) ('M_1_LRG', np.float64(13.919225115106363)) ('alpha_LRG', np.float64(1.0072483643320922)) ('f_sigv_LRG', np.float64(0.9520776949771824)) ('log_Mcent_LRG', np.float64(12.780635889859951)) ('sigma_M_LRG', np.float64(0.32832840221649573))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 21] ('M_0_LRG', np.float64(12.336946583385341)) ('M_1_LRG', np.float64(13.992540423344543)) ('alpha_LRG', np.float64(1.1975387842122271)) ('f_sigv_LRG', np.float64(0.9269769904288346)) ('log_Mcent_LRG', np.float64(12.875429737742447)) ('sigma_M_LRG', np.float64(0.4575767980690472))
[Interation 21] chi2=412.7589352802779
[Interation 21] chi2=529.7875621996707
[Interation 21] chi2=547.9836389541418
[Interation 21] chi2=543.1025979567293
[Interation 21] ('M_0_LRG', np.float64(12.818774094562706)) ('M_1_LRG', np.float64(13.857464155854581)) ('alpha_LRG', np.float64(0.9915081620078697)) ('f_sigv_LRG', np.float64(0.8921796112127481)) ('log_Mcent_LRG', np.float64(12.821273459614316)) ('sigma_M_LRG', np.float64(0.42357713139217607))
[Interation 21] ('M_0_LRG', np.float64(12.84764954706662)) ('M_1_LRG', np.float64(13.880677496272911)) ('alpha_LRG', np.float64(0.9698773388773161)) ('f_sigv_LRG', np.float64(0.8993795608598115)) ('log_Mcent_LRG', np.float64(12.847860122596733)) ('sigma_M_LRG', np.float64(0.44208786520465293))
[Interation 21] ('M_0_LRG', np.float64(12.883008745327867)) ('M_1_LRG', np.float64(13.89237280984636)) ('alpha_LRG', np.float64(0.9814918816590114)) ('f_sigv_LRG', np.float64(0.8743200518910298)) ('log_Mcent_LRG', np.float64(12.893103855062511)) ('sigma_M_LRG', np.float64(0.4998314830437003))
[Interation 21] ('M_0_LRG', np.float64(12.764815155304767)) ('M_1_LRG', np.float64(13.896703416169533)) ('alpha_LRG', np.float64(1.0324010988745542)) ('f_sigv_LRG', np.float64(0.9068743530133937)) ('log_Mcent_LRG', np.float64(12.832946150513136)) ('sigma_M_LRG', np.float64(0.4226137022497328))
[Interation 21] ('M_0_LRG', np.float64(12.852792582824796)) ('M_1_LRG', np.float64(13.799285661941854)) ('alpha_LRG', np.float64(0.9579343781869877)) ('f_sigv_LRG', np.float64(0.8905636029354972)) ('log_Mcent_LRG', np.float64(12.760079697508813)) ('sigma_M_LRG', np.float64(0.363933053521003))
[Interation 21] ('M_0_LRG', np.float64(12.801134393158462)) ('M_1_LRG', np.float64(13.870329015144119)) ('alpha_LRG', np.float64(1.0253785026279203)) ('f_sigv_LRG', np.float64(0.8987394138430316)) ('log_Mcent_LRG', np.float64(12.828747514332209)) ('sigma_M_LRG', np.float64(0.4238338784011462))
[Interation 21] ('M_0_LRG', np.float64(12.844196524302108)) ('M_1_LRG', np.float64(13.87434118365535)) ('alpha_LRG', np.float64(1.006147814317738)) ('f_sigv_LRG', np.float64(0.8799200232896005)) ('log_Mcent_LRG', np.float64(12.840039000522303)) ('sigma_M_LRG', np.float64(0.43294581683556743))
[Interation 21] ('M_0_LRG', np.float64(12.773631957568814)) ('M_1_LRG', np.float64(13.8533641189034)) ('alpha_LRG', np.float64(1.0391841069351946)) ('f_sigv_LRG', np.float64(0.8816327688274517)) ('log_Mcent_LRG', np.float64(12.818491140692851)) ('sigma_M_LRG', np.float64(0.4223966410432134))
[Interation 21] ('M_0_LRG', np.float64(12.781129457206797)) ('M_1_LRG', np.float64(13.877581333655888)) ('alpha_LRG', np.float64(1.0166119497084571)) ('f_sigv_LRG', np.float64(0.8864612554673479)) ('log_Mcent_LRG', np.float64(12.829503670146858)) ('sigma_M_LRG', np.float64(0.42844259685850683))
[Interation 21] ('M_0_LRG', np.float64(12.735182589020095)) ('M_1_LRG', np.float64(13.893161175845929)) ('alpha_LRG', np.float64(1.0583409934164945)) ('f_sigv_LRG', np.float64(0.8901347080333959)) ('log_Mcent_LRG', np.float64(12.838448926810509)) ('sigma_M_LRG', np.float64(0.43773351149040496))
[Interation 21] ('M_0_LRG', np.float64(12.811477230249677)) ('M_1_LRG', np.float64(13.850867055677304)) ('alpha_LRG', np.float64(1.0097955588104361)) ('f_sigv_LRG', np.float64(0.8947269858669165)) ('log_Mcent_LRG', np.float64(12.815690370742557)) ('sigma_M_LRG', np.float64(0.4163800121867691))
[Interation 21] ('M_0_LRG', np.float64(12.80146654740014)) ('M_1_LRG', np.float64(13.866284446236245)) ('alpha_LRG', np.float64(0.9992342750062851)) ('f_sigv_LRG', np.float64(0.892441770298495)) ('log_Mcent_LRG', np.float64(12.82158959748286)) ('sigma_M_LRG', np.float64(0.4239478837069574))
[Interation 21] chi2=421.73856140132995
[Interation 21] chi2=390.7919236173442
[Interation 21] chi2=425.2473225570986
[Interation 21] chi2=418.7410310921256
[Interation 21] chi2=395.5486298784316
[Interation 21] chi2=424.61498216131656
[Interation 21] chi2=432.78032799913836
[Interation 21] chi2=414.785368071983
[Interation 21] chi2=438.91861186082895
[Interation 21] chi2=448.08099578257287
[Interation 21] chi2=425.80775914693777
[Interation 21] chi2=387.07015832877664
[Interation 22] ('M_0_LRG', np.float64(12.814882148887099)) ('M_1_LRG', np.float64(13.852679840045086)) ('alpha_LRG', np.float64(0.9946081777140108)) ('f_sigv_LRG', np.float64(0.891550694090301)) ('log_Mcent_LRG', np.float64(12.8042208499459)) ('sigma_M_LRG', np.float64(0.3981705272873549))
[Interation 22] ('M_0_LRG', np.float64(12.787418827198465)) ('M_1_LRG', np.float64(13.869621561107612)) ('alpha_LRG', np.float64(1.0266153825869009)) ('f_sigv_LRG', np.float64(0.894238816828848)) ('log_Mcent_LRG', np.float64(12.822371881623527)) ('sigma_M_LRG', np.float64(0.41930594649209985))
[Interation 22] ('M_0_LRG', np.float64(12.809334175519705)) ('M_1_LRG', np.float64(13.849070600889945)) ('alpha_LRG', np.float64(1.0201848716427706)) ('f_sigv_LRG', np.float64(0.8757500105740611)) ('log_Mcent_LRG', np.float64(12.802638478166942)) ('sigma_M_LRG', np.float64(0.4040847485489718))
[Interation 22] ('M_0_LRG', np.float64(12.812958788969222)) ('M_1_LRG', np.float64(13.886768362624496)) ('alpha_LRG', np.float64(1.0060597298029919)) ('f_sigv_LRG', np.float64(0.8725005072076487)) ('log_Mcent_LRG', np.float64(12.862505404530985)) ('sigma_M_LRG', np.float64(0.465625510040499))
[Interation 22] chi2=417.854726322556
[Interation 22] chi2=419.17849536464115
[Interation 22] chi2=418.6064651611485
[Interation 22] chi2=407.62212446848855
[Interation 22] ('M_0_LRG', np.float64(12.818210991877486)) ('M_1_LRG', np.float64(13.838549229027542)) ('alpha_LRG', np.float64(0.9993215313492685)) ('f_sigv_LRG', np.float64(0.8895868675672652)) ('log_Mcent_LRG', np.float64(12.791191999240093)) ('sigma_M_LRG', np.float64(0.3917194773769577))
[Interation 22] ('M_0_LRG', np.float64(12.814742412998758)) ('M_1_LRG', np.float64(13.858064541437932)) ('alpha_LRG', np.float64(1.0013512588349782)) ('f_sigv_LRG', np.float64(0.876041823328026)) ('log_Mcent_LRG', np.float64(12.826001793125426)) ('sigma_M_LRG', np.float64(0.4307206318984157))
[Interation 22] ('M_0_LRG', np.float64(12.816652564551172)) ('M_1_LRG', np.float64(13.851379438323798)) ('alpha_LRG', np.float64(1.0118492776434702)) ('f_sigv_LRG', np.float64(0.86057129942773)) ('log_Mcent_LRG', np.float64(12.81978619049351)) ('sigma_M_LRG', np.float64(0.4288999062402471))
[Interation 22] ('M_0_LRG', np.float64(12.814987719574177)) ('M_1_LRG', np.float64(13.854221003859585)) ('alpha_LRG', np.float64(0.9909167397596443)) ('f_sigv_LRG', np.float64(0.8997587858778104)) ('log_Mcent_LRG', np.float64(12.807846744024737)) ('sigma_M_LRG', np.float64(0.40566683965238837))
[Interation 22] ('M_0_LRG', np.float64(12.835378876308674)) ('M_1_LRG', np.float64(13.840458269451426)) ('alpha_LRG', np.float64(0.9918970948883017)) ('f_sigv_LRG', np.float64(0.8735636762593219)) ('log_Mcent_LRG', np.float64(12.809223141929404)) ('sigma_M_LRG', np.float64(0.41323961442187207))
[Interation 22] ('M_0_LRG', np.float64(12.780402515305614)) ('M_1_LRG', np.float64(13.860029590873731)) ('alpha_LRG', np.float64(1.022632940685084)) ('f_sigv_LRG', np.float64(0.8988265652669675)) ('log_Mcent_LRG', np.float64(12.807819818654735)) ('sigma_M_LRG', np.float64(0.40439515233426526))
[Interation 22] ('M_0_LRG', np.float64(12.838470422357236)) ('M_1_LRG', np.float64(13.799616856965798)) ('alpha_LRG', np.float64(0.9665363739366278)) ('f_sigv_LRG', np.float64(0.897409336389628)) ('log_Mcent_LRG', np.float64(12.75507413594394)) ('sigma_M_LRG', np.float64(0.3581830840211669))
[Interation 22] ('M_0_LRG', np.float64(12.789564619652953)) ('M_1_LRG', np.float64(13.853513279799632)) ('alpha_LRG', np.float64(1.0089870319942538)) ('f_sigv_LRG', np.float64(0.8964440374592436)) ('log_Mcent_LRG', np.float64(12.797382725153842)) ('sigma_M_LRG', np.float64(0.39227604232038826))
[Interation 22] ('M_0_LRG', np.float64(12.82305374621583)) ('M_1_LRG', np.float64(13.817332515540329)) ('alpha_LRG', np.float64(0.9835654958609423)) ('f_sigv_LRG', np.float64(0.894750814540697)) ('log_Mcent_LRG', np.float64(12.777531581173344)) ('sigma_M_LRG', np.float64(0.38100740552597334))
[Interation 22] ('M_0_LRG', np.float64(12.828156598698456)) ('M_1_LRG', np.float64(13.828630733062228)) ('alpha_LRG', np.float64(0.9766093350732495)) ('f_sigv_LRG', np.float64(0.8911732372187264)) ('log_Mcent_LRG', np.float64(12.786680129770476)) ('sigma_M_LRG', np.float64(0.3893355409434469))
[Interation 22] ('M_0_LRG', np.float64(12.808431748082446)) ('M_1_LRG', np.float64(13.848779168933195)) ('alpha_LRG', np.float64(0.998620426018845)) ('f_sigv_LRG', np.float64(0.8868828248773913)) ('log_Mcent_LRG', np.float64(12.798225734266289)) ('sigma_M_LRG', np.float64(0.3962565916679851))
[Interation 22] ('M_0_LRG', np.float64(12.808231356859391)) ('M_1_LRG', np.float64(13.825775423382924)) ('alpha_LRG', np.float64(1.0053694842877432)) ('f_sigv_LRG', np.float64(0.8825545152418145)) ('log_Mcent_LRG', np.float64(12.790741379879515)) ('sigma_M_LRG', np.float64(0.39905972831680064))
[Interation 22] chi2=444.91822256044696
[Interation 22] chi2=446.30288832817433
[Interation 22] chi2=412.50916594206745
[Interation 22] chi2=395.7354478491646
[Interation 22] chi2=426.26448472099713
[Interation 22] chi2=393.7481727583991
[Interation 22] chi2=411.5717651062091
[Interation 22] chi2=384.3370778090435
[Interation 22] chi2=414.99302139189257
[Interation 22] chi2=414.8501249113552
[Interation 22] chi2=427.433449215966
[Interation 22] chi2=438.23814584208503
[Interation 23] ('M_0_LRG', np.float64(12.823557677616687)) ('M_1_LRG', np.float64(13.842508734767568)) ('alpha_LRG', np.float64(0.9931811925668468)) ('f_sigv_LRG', np.float64(0.8885090529946027)) ('log_Mcent_LRG', np.float64(12.809536311968886)) ('sigma_M_LRG', np.float64(0.4130371933516863))
[Interation 23] ('M_0_LRG', np.float64(12.831351880929818)) ('M_1_LRG', np.float64(13.823053919144332)) ('alpha_LRG', np.float64(0.9716410317168099)) ('f_sigv_LRG', np.float64(0.8900345973249784)) ('log_Mcent_LRG', np.float64(12.788920572962729)) ('sigma_M_LRG', np.float64(0.3939162524213312))
[Interation 23] ('M_0_LRG', np.float64(12.825771109661412)) ('M_1_LRG', np.float64(13.841875054947957)) ('alpha_LRG', np.float64(1.0135992427585248)) ('f_sigv_LRG', np.float64(0.8759359264002328)) ('log_Mcent_LRG', np.float64(12.809139423799092)) ('sigma_M_LRG', np.float64(0.41179280333715385))
[Interation 23] ('M_0_LRG', np.float64(12.835554181805671)) ('M_1_LRG', np.float64(13.834258344595266)) ('alpha_LRG', np.float64(0.9757606463621683)) ('f_sigv_LRG', np.float64(0.8928099244198375)) ('log_Mcent_LRG', np.float64(12.795228297430643)) ('sigma_M_LRG', np.float64(0.3950979096246701))
[Interation 23] chi2=432.4315553408605
[Interation 23] chi2=429.1863250834267
[Interation 23] chi2=445.09876258535996
[Interation 23] chi2=424.33843218250837
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_12.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_12.npy
Set number of threads to 32
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.822056575941106)) ('M_1_LRG', np.float64(13.834848225364144)) ('alpha_LRG', np.float64(0.9814307686174403)) ('f_sigv_LRG', np.float64(0.9053944008882534)) ('log_Mcent_LRG', np.float64(12.793940606207132)) ('sigma_M_LRG', np.float64(0.3951149061273365))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.33396363258361816
Start satellite assignement
Satellite assignement done 0.07150840759277344
LRG mock catalogue done 0.14666342735290527
611717 central galaxies, 88050 satellites, fraction of satellite 0.13 
Done overall time  LRG 0.6645293235778809
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_12.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Load smu measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.804211709933654)) ('M_1_LRG', np.float64(13.902018803510295)) ('alpha_LRG', np.float64(1.0010278041165328)) ('f_sigv_LRG', np.float64(0.867086696750873)) ('log_Mcent_LRG', np.float64(12.839071593834404)) ('sigma_M_LRG', np.float64(0.4401578194321057))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.714025547074531)) ('M_1_LRG', np.float64(13.895637382853527)) ('alpha_LRG', np.float64(1.0362089201856004)) ('f_sigv_LRG', np.float64(0.8884710604270417)) ('log_Mcent_LRG', np.float64(12.826701079561166)) ('sigma_M_LRG', np.float64(0.4277989270954723))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.601585643969019)) ('M_1_LRG', np.float64(13.826767224066161)) ('alpha_LRG', np.float64(1.0449306490103285)) ('f_sigv_LRG', np.float64(0.9355581048313855)) ('log_Mcent_LRG', np.float64(12.66533138339726)) ('sigma_M_LRG', np.float64(0.22284544699797415))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.622695610635434)) ('M_1_LRG', np.float64(13.901030466624817)) ('alpha_LRG', np.float64(1.0453509842900086)) ('f_sigv_LRG', np.float64(0.9403695081997117)) ('log_Mcent_LRG', np.float64(12.808607966166916)) ('sigma_M_LRG', np.float64(0.3781423003182127))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.539713462939087)) ('M_1_LRG', np.float64(13.873265962583922)) ('alpha_LRG', np.float64(1.1249564412129052)) ('f_sigv_LRG', np.float64(0.9037945054217353)) ('log_Mcent_LRG', np.float64(12.77356541032097)) ('sigma_M_LRG', np.float64(0.36601660018333526))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.967801034743973)) ('M_1_LRG', np.float64(13.856053460342645)) ('alpha_LRG', np.float64(0.9255804074620311)) ('f_sigv_LRG', np.float64(0.8873372638275678)) ('log_Mcent_LRG', np.float64(12.821311252614413)) ('sigma_M_LRG', np.float64(0.40337956466872327))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.871099793932773)) ('M_1_LRG', np.float64(13.826349548818)) ('alpha_LRG', np.float64(1.0080522734111559)) ('f_sigv_LRG', np.float64(0.8634246593433748)) ('log_Mcent_LRG', np.float64(12.770895999098439)) ('sigma_M_LRG', np.float64(0.36040163748313914))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.906913975003253)) ('M_1_LRG', np.float64(13.811557882991277)) ('alpha_LRG', np.float64(0.9876095659299329)) ('f_sigv_LRG', np.float64(0.8980767738772873)) ('log_Mcent_LRG', np.float64(12.750799446962409)) ('sigma_M_LRG', np.float64(0.3038904615025424))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.672674277223637)) ('M_1_LRG', np.float64(13.845005497544104)) ('alpha_LRG', np.float64(1.1322820681779948)) ('f_sigv_LRG', np.float64(0.8664226234360641)) ('log_Mcent_LRG', np.float64(12.769097530421298)) ('sigma_M_LRG', np.float64(0.3480801253647431))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.789330267087498)) ('M_1_LRG', np.float64(13.856902532208183)) ('alpha_LRG', np.float64(0.99625727751581)) ('f_sigv_LRG', np.float64(0.9144032660784773)) ('log_Mcent_LRG', np.float64(12.751637405896364)) ('sigma_M_LRG', np.float64(0.3109256145638495))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.786599442191385)) ('M_1_LRG', np.float64(13.851263665198159)) ('alpha_LRG', np.float64(1.025352463928761)) ('f_sigv_LRG', np.float64(0.865960810947531)) ('log_Mcent_LRG', np.float64(12.774083863702927)) ('sigma_M_LRG', np.float64(0.357819060493665))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 23] ('M_0_LRG', np.float64(12.775051948175241)) ('M_1_LRG', np.float64(13.776082606380388)) ('alpha_LRG', np.float64(1.0134370219412574)) ('f_sigv_LRG', np.float64(0.8958373456844231)) ('log_Mcent_LRG', np.float64(12.709782489313609)) ('sigma_M_LRG', np.float64(0.28698877425410696))
[Interation 23] chi2=443.7427387430442
[Interation 23] chi2=455.27761123012533
[Interation 23] chi2=527.0665353970759
[Interation 23] chi2=477.0774425807435
[Interation 23] chi2=408.77642041234134
[Interation 23] chi2=483.42904290926947
[Interation 23] chi2=448.0083801930944
[Interation 23] chi2=468.4157155885351
[Interation 23] chi2=425.1182032482756
[Interation 23] chi2=487.7280186053614
[Interation 23] chi2=474.63311808349215
[Interation 23] chi2=428.8753822973156
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 24] ('M_0_LRG', np.float64(12.624555991532755)) ('M_1_LRG', np.float64(13.877033867600032)) ('alpha_LRG', np.float64(1.100832373302577)) ('f_sigv_LRG', np.float64(0.9132764732721245)) ('log_Mcent_LRG', np.float64(12.786991715520324)) ('sigma_M_LRG', np.float64(0.36316736403434774))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 24] ('M_0_LRG', np.float64(12.664191131443074)) ('M_1_LRG', np.float64(13.87947695292849)) ('alpha_LRG', np.float64(1.074099441165237)) ('f_sigv_LRG', np.float64(0.8804185846353831)) ('log_Mcent_LRG', np.float64(12.818549790196164)) ('sigma_M_LRG', np.float64(0.4204204533095236))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 24] ('M_0_LRG', np.float64(12.656715917660433)) ('M_1_LRG', np.float64(13.914783953897386)) ('alpha_LRG', np.float64(1.0864944081908512)) ('f_sigv_LRG', np.float64(0.8912347812782333)) ('log_Mcent_LRG', np.float64(12.857148244553008)) ('sigma_M_LRG', np.float64(0.45864260375914345))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 24] ('M_0_LRG', np.float64(12.757859730913239)) ('M_1_LRG', np.float64(13.823167705132644)) ('alpha_LRG', np.float64(1.026072371950211)) ('f_sigv_LRG', np.float64(0.9365967089817191)) ('log_Mcent_LRG', np.float64(12.745433290582678)) ('sigma_M_LRG', np.float64(0.3306345212927101))
[Interation 24] chi2=502.69099432808446
[Interation 24] chi2=449.81005904206614
[Interation 24] chi2=424.44726399267273
[Interation 24] chi2=464.54802479781677
[Interation 24] ('M_0_LRG', np.float64(12.760560951108289)) ('M_1_LRG', np.float64(13.871589955457125)) ('alpha_LRG', np.float64(1.0278249082445379)) ('f_sigv_LRG', np.float64(0.8859952929378881)) ('log_Mcent_LRG', np.float64(12.819067337983473)) ('sigma_M_LRG', np.float64(0.4148582046141144))
[Interation 24] ('M_0_LRG', np.float64(12.772985872776676)) ('M_1_LRG', np.float64(13.859686451884366)) ('alpha_LRG', np.float64(1.0302968649089803)) ('f_sigv_LRG', np.float64(0.8896251950499251)) ('log_Mcent_LRG', np.float64(12.803045591707578)) ('sigma_M_LRG', np.float64(0.39913633109698377))
[Interation 24] ('M_0_LRG', np.float64(12.815824834746415)) ('M_1_LRG', np.float64(13.85945538069373)) ('alpha_LRG', np.float64(0.9980069470838338)) ('f_sigv_LRG', np.float64(0.8837803119699066)) ('log_Mcent_LRG', np.float64(12.81140445725175)) ('sigma_M_LRG', np.float64(0.4082313348665854))
[Interation 24] ('M_0_LRG', np.float64(12.786162340548199)) ('M_1_LRG', np.float64(13.859141027448814)) ('alpha_LRG', np.float64(0.9981094270865539)) ('f_sigv_LRG', np.float64(0.8930594504854804)) ('log_Mcent_LRG', np.float64(12.800036122594893)) ('sigma_M_LRG', np.float64(0.39054504613564855))
[Interation 24] ('M_0_LRG', np.float64(12.807819667048232)) ('M_1_LRG', np.float64(13.834729376322699)) ('alpha_LRG', np.float64(0.9938878756764656)) ('f_sigv_LRG', np.float64(0.8863822046575431)) ('log_Mcent_LRG', np.float64(12.767778094020077)) ('sigma_M_LRG', np.float64(0.3541326793977659))
[Interation 24] ('M_0_LRG', np.float64(12.822889852883367)) ('M_1_LRG', np.float64(13.846927844310365)) ('alpha_LRG', np.float64(0.9898569792507298)) ('f_sigv_LRG', np.float64(0.8813901122829271)) ('log_Mcent_LRG', np.float64(12.795998557577263)) ('sigma_M_LRG', np.float64(0.38986146038116143))
[Interation 24] ('M_0_LRG', np.float64(12.783123499763573)) ('M_1_LRG', np.float64(13.856599542236058)) ('alpha_LRG', np.float64(1.0141633352272779)) ('f_sigv_LRG', np.float64(0.8836409799514662)) ('log_Mcent_LRG', np.float64(12.807404290067872)) ('sigma_M_LRG', np.float64(0.41053770657549915))
[Interation 24] ('M_0_LRG', np.float64(12.82303440704984)) ('M_1_LRG', np.float64(13.84128446971653)) ('alpha_LRG', np.float64(0.9948687659850532)) ('f_sigv_LRG', np.float64(0.8834703894407423)) ('log_Mcent_LRG', np.float64(12.799527146050155)) ('sigma_M_LRG', np.float64(0.4019562080237144))
[Interation 24] ('M_0_LRG', np.float64(12.799533641882645)) ('M_1_LRG', np.float64(13.848871355629676)) ('alpha_LRG', np.float64(1.0013262049396991)) ('f_sigv_LRG', np.float64(0.8850452579726933)) ('log_Mcent_LRG', np.float64(12.79338744258314)) ('sigma_M_LRG', np.float64(0.38852048265581074))
[Interation 24] ('M_0_LRG', np.float64(12.798813439791685)) ('M_1_LRG', np.float64(13.855180033450164)) ('alpha_LRG', np.float64(0.9997446359147149)) ('f_sigv_LRG', np.float64(0.8859005311445727)) ('log_Mcent_LRG', np.float64(12.808362490632067)) ('sigma_M_LRG', np.float64(0.41070883804032937))
[Interation 24] ('M_0_LRG', np.float64(12.882802406119403)) ('M_1_LRG', np.float64(13.84609608227652)) ('alpha_LRG', np.float64(0.9824292809949808)) ('f_sigv_LRG', np.float64(0.8629505879453316)) ('log_Mcent_LRG', np.float64(12.8050997851373)) ('sigma_M_LRG', np.float64(0.4001511535941423))
[Interation 24] ('M_0_LRG', np.float64(12.77549156522833)) ('M_1_LRG', np.float64(13.850879879855825)) ('alpha_LRG', np.float64(1.0117117226458436)) ('f_sigv_LRG', np.float64(0.8938014273255184)) ('log_Mcent_LRG', np.float64(12.799498707515987)) ('sigma_M_LRG', np.float64(0.40287394479546346))
[Interation 24] chi2=443.0890923229298
[Interation 24] chi2=423.3800973992311
[Interation 24] chi2=425.48629897991816
[Interation 24] chi2=400.0335205975512
[Interation 24] chi2=393.306718055495
[Interation 24] chi2=432.8207690468067
[Interation 24] chi2=431.6128485964828
[Interation 24] chi2=421.6844233766941
[Interation 24] chi2=408.8995641867937
[Interation 24] chi2=394.50952230312856
[Interation 24] chi2=396.5309249423468
[Interation 24] chi2=390.11149145340755
[Interation 25] ('M_0_LRG', np.float64(12.84738861824095)) ('M_1_LRG', np.float64(13.862972566152544)) ('alpha_LRG', np.float64(0.9961660094733911)) ('f_sigv_LRG', np.float64(0.8669740701642079)) ('log_Mcent_LRG', np.float64(12.834418608521965)) ('sigma_M_LRG', np.float64(0.4432476127082765))
[Interation 25] ('M_0_LRG', np.float64(12.815685950255123)) ('M_1_LRG', np.float64(13.83756698312355)) ('alpha_LRG', np.float64(1.0035857885530064)) ('f_sigv_LRG', np.float64(0.8888738480052597)) ('log_Mcent_LRG', np.float64(12.763606566063933)) ('sigma_M_LRG', np.float64(0.34688981031029337))
[Interation 25] ('M_0_LRG', np.float64(12.854294635864813)) ('M_1_LRG', np.float64(13.840951023658306)) ('alpha_LRG', np.float64(0.9881531304817968)) ('f_sigv_LRG', np.float64(0.874877457914728)) ('log_Mcent_LRG', np.float64(12.794896522561071)) ('sigma_M_LRG', np.float64(0.3878268508106578))
[Interation 25] ('M_0_LRG', np.float64(12.80213312224435)) ('M_1_LRG', np.float64(13.834270278048015)) ('alpha_LRG', np.float64(0.9997397319169574)) ('f_sigv_LRG', np.float64(0.8966459638434755)) ('log_Mcent_LRG', np.float64(12.77301645977805)) ('sigma_M_LRG', np.float64(0.36309897869172125))
[Interation 25] chi2=418.47243238640914
[Interation 25] chi2=449.58455652158244
[Interation 25] chi2=446.2357772652465
[Interation 25] chi2=431.66987988809376
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_13.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_13.npy
Set number of threads to 32
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.864611060581039)) ('M_1_LRG', np.float64(13.848570176412691)) ('alpha_LRG', np.float64(0.9712996570966468)) ('f_sigv_LRG', np.float64(0.8849692372102695)) ('log_Mcent_LRG', np.float64(12.817073913648859)) ('sigma_M_LRG', np.float64(0.41887140076387375))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.36976003646850586
Start satellite assignement
Satellite assignement done 0.07048988342285156
LRG mock catalogue done 0.1511702537536621
615138 central galaxies, 84550 satellites, fraction of satellite 0.12 
Done overall time  LRG 0.7095193862915039
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_13.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load rppi measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load rppi measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.731827784194378)) ('M_1_LRG', np.float64(13.841286359708707)) ('alpha_LRG', np.float64(0.9496454909258313)) ('f_sigv_LRG', np.float64(0.7300579167717924)) ('log_Mcent_LRG', np.float64(12.708358317254707)) ('sigma_M_LRG', np.float64(0.4862498611198821))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.409460469012027)) ('M_1_LRG', np.float64(14.347002768185902)) ('alpha_LRG', np.float64(1.1179317675587008)) ('f_sigv_LRG', np.float64(0.7989644940095709)) ('log_Mcent_LRG', np.float64(12.775798602498693)) ('sigma_M_LRG', np.float64(0.2406356804713663))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.967777175796547)) ('M_1_LRG', np.float64(15.20570442293986)) ('alpha_LRG', np.float64(1.2926583544983385)) ('f_sigv_LRG', np.float64(0.7317567003988119)) ('log_Mcent_LRG', np.float64(13.037222012205898)) ('sigma_M_LRG', np.float64(-0.10243684536720155))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.801636967052104)) ('M_1_LRG', np.float64(13.891883355562715)) ('alpha_LRG', np.float64(1.1689758624898339)) ('f_sigv_LRG', np.float64(0.7988536929691676)) ('log_Mcent_LRG', np.float64(12.749783129234153)) ('sigma_M_LRG', np.float64(0.26865066772726015))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.795469405817327)) ('M_1_LRG', np.float64(14.039473888022028)) ('alpha_LRG', np.float64(0.8663339104090957)) ('f_sigv_LRG', np.float64(0.9664382867647976)) ('log_Mcent_LRG', np.float64(12.882184231749525)) ('sigma_M_LRG', np.float64(0.3385677576834322))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.518755614893196)) ('M_1_LRG', np.float64(13.263308442728105)) ('alpha_LRG', np.float64(0.8225737262735668)) ('f_sigv_LRG', np.float64(1.0519652278135987)) ('log_Mcent_LRG', np.float64(12.673235441373553)) ('sigma_M_LRG', np.float64(0.6797198195388007))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.509963473586904)) ('M_1_LRG', np.float64(13.965163509657046)) ('alpha_LRG', np.float64(0.9892656727573401)) ('f_sigv_LRG', np.float64(0.920475998253515)) ('log_Mcent_LRG', np.float64(12.761493760714494)) ('sigma_M_LRG', np.float64(0.2846398915018614))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.28148352473243)) ('M_1_LRG', np.float64(13.351254523088036)) ('alpha_LRG', np.float64(1.1154073319445108)) ('f_sigv_LRG', np.float64(0.859345814622438)) ('log_Mcent_LRG', np.float64(12.516524556383688)) ('sigma_M_LRG', np.float64(0.29932010223490046))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.313958199219952)) ('M_1_LRG', np.float64(13.917481366499617)) ('alpha_LRG', np.float64(1.0102532515291525)) ('f_sigv_LRG', np.float64(1.2080350296843798)) ('log_Mcent_LRG', np.float64(12.757105909306233)) ('sigma_M_LRG', np.float64(0.3648526613628157))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.781951773475258)) ('M_1_LRG', np.float64(13.544165867318325)) ('alpha_LRG', np.float64(0.8525608021675051)) ('f_sigv_LRG', np.float64(0.8973000850661986)) ('log_Mcent_LRG', np.float64(12.60635945920873)) ('sigma_M_LRG', np.float64(0.36727980003754))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.616014574513658)) ('M_1_LRG', np.float64(13.536786031548083)) ('alpha_LRG', np.float64(0.9004591229806096)) ('f_sigv_LRG', np.float64(1.061600567210418)) ('log_Mcent_LRG', np.float64(12.764219777433507)) ('sigma_M_LRG', np.float64(0.45311263707687416))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 25] ('M_0_LRG', np.float64(12.357277835824103)) ('M_1_LRG', np.float64(13.382189307940656)) ('alpha_LRG', np.float64(1.033533443013824)) ('f_sigv_LRG', np.float64(1.0507768733885081)) ('log_Mcent_LRG', np.float64(12.741030047142338)) ('sigma_M_LRG', np.float64(0.6677570404889155))
[Interation 25] chi2=2582.4360109720296
[Interation 25] chi2=4393.497552623117
[Interation 25] chi2=1791.3087878164788
[Interation 25] chi2=39683.174557540355
[Interation 25] chi2=893.161316102003
[Interation 25] chi2=750.9635062404024
[Interation 25] chi2=6722.563632519531
[Interation 25] chi2=5752.343316119045
[Interation 25] chi2=1268.7851723119948
[Interation 25] chi2=1478.66139914567
[Interation 25] chi2=4571.973243875272
[Interation 25] chi2=6416.13776346156
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 26] ('M_0_LRG', np.float64(12.565144156283388)) ('M_1_LRG', np.float64(14.061407454189597)) ('alpha_LRG', np.float64(0.9952649300846207)) ('f_sigv_LRG', np.float64(1.006362100674472)) ('log_Mcent_LRG', np.float64(12.851616184783767)) ('sigma_M_LRG', np.float64(0.3599668721497038))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 26] ('M_0_LRG', np.float64(12.480679379146798)) ('M_1_LRG', np.float64(13.965579796017952)) ('alpha_LRG', np.float64(1.0462950475334476)) ('f_sigv_LRG', np.float64(0.9615271941502394)) ('log_Mcent_LRG', np.float64(12.816065027853515)) ('sigma_M_LRG', np.float64(0.35185959370584546))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 26] ('M_0_LRG', np.float64(12.656987216446106)) ('M_1_LRG', np.float64(13.766742859122093)) ('alpha_LRG', np.float64(0.98709603521003)) ('f_sigv_LRG', np.float64(0.8582453484782668)) ('log_Mcent_LRG', np.float64(12.623526498104313)) ('sigma_M_LRG', np.float64(0.19732089415081533))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 26] ('M_0_LRG', np.float64(12.271789233275099)) ('M_1_LRG', np.float64(14.079808877208368)) ('alpha_LRG', np.float64(1.1431500783027686)) ('f_sigv_LRG', np.float64(0.9702622881151762)) ('log_Mcent_LRG', np.float64(12.910957462005895)) ('sigma_M_LRG', np.float64(0.48960764582331795))
[Interation 26] chi2=757.2117327485048
[Interation 26] chi2=625.3926535977332
[Interation 26] chi2=713.4257728665134
[Interation 26] chi2=864.9581820546811
[Interation 26] ('M_0_LRG', np.float64(12.704252292889203)) ('M_1_LRG', np.float64(13.90544178639139)) ('alpha_LRG', np.float64(1.077077149997757)) ('f_sigv_LRG', np.float64(0.8842562935201881)) ('log_Mcent_LRG', np.float64(12.862532959735583)) ('sigma_M_LRG', np.float64(0.46195000682726617))
[Interation 26] ('M_0_LRG', np.float64(12.752090552285448)) ('M_1_LRG', np.float64(13.89058969796137)) ('alpha_LRG', np.float64(1.0428930309256288)) ('f_sigv_LRG', np.float64(0.8845540593823368)) ('log_Mcent_LRG', np.float64(12.843289821878027)) ('sigma_M_LRG', np.float64(0.44303402740418274))
[Interation 26] ('M_0_LRG', np.float64(12.756541714442683)) ('M_1_LRG', np.float64(13.923793423205021)) ('alpha_LRG', np.float64(1.0265986284085131)) ('f_sigv_LRG', np.float64(0.9029050992727718)) ('log_Mcent_LRG', np.float64(12.88303738125318)) ('sigma_M_LRG', np.float64(0.47445621435534735))
[Interation 26] ('M_0_LRG', np.float64(12.794192282629842)) ('M_1_LRG', np.float64(13.899657787349147)) ('alpha_LRG', np.float64(1.0346077686325594)) ('f_sigv_LRG', np.float64(0.8630555498918787)) ('log_Mcent_LRG', np.float64(12.87824565570956)) ('sigma_M_LRG', np.float64(0.4861220655196783))
[Interation 26] ('M_0_LRG', np.float64(12.847661162165267)) ('M_1_LRG', np.float64(13.88744384787786)) ('alpha_LRG', np.float64(0.9727627574407387)) ('f_sigv_LRG', np.float64(0.8948162317051743)) ('log_Mcent_LRG', np.float64(12.845311344217569)) ('sigma_M_LRG', np.float64(0.4364166770839914))
[Interation 26] ('M_0_LRG', np.float64(12.68338447203086)) ('M_1_LRG', np.float64(13.894019958399623)) ('alpha_LRG', np.float64(1.0576843739736714)) ('f_sigv_LRG', np.float64(0.8946078354292095)) ('log_Mcent_LRG', np.float64(12.829734413568909)) ('sigma_M_LRG', np.float64(0.4218740387932695))
[Interation 26] ('M_0_LRG', np.float64(12.897056595868468)) ('M_1_LRG', np.float64(13.875818304192162)) ('alpha_LRG', np.float64(0.9443760534164837)) ('f_sigv_LRG', np.float64(0.9006825893871016)) ('log_Mcent_LRG', np.float64(12.84672317370451)) ('sigma_M_LRG', np.float64(0.44080072033834994))
[Interation 26] ('M_0_LRG', np.float64(12.792206503106685)) ('M_1_LRG', np.float64(13.903156002492784)) ('alpha_LRG', np.float64(1.0144394220696602)) ('f_sigv_LRG', np.float64(0.8923039340941075)) ('log_Mcent_LRG', np.float64(12.865086665087864)) ('sigma_M_LRG', np.float64(0.4562359393238066))
[Interation 26] ('M_0_LRG', np.float64(12.72290474785834)) ('M_1_LRG', np.float64(13.904644310143647)) ('alpha_LRG', np.float64(1.064706541349574)) ('f_sigv_LRG', np.float64(0.8860789563739543)) ('log_Mcent_LRG', np.float64(12.85968259337545)) ('sigma_M_LRG', np.float64(0.46005720229486535))
[Interation 26] ('M_0_LRG', np.float64(12.651324612739911)) ('M_1_LRG', np.float64(13.968083285963749)) ('alpha_LRG', np.float64(1.053341251010235)) ('f_sigv_LRG', np.float64(0.9071829791406185)) ('log_Mcent_LRG', np.float64(12.923545678428876)) ('sigma_M_LRG', np.float64(0.5171395843945786))
[Interation 26] ('M_0_LRG', np.float64(12.799431853831072)) ('M_1_LRG', np.float64(13.86798596557203)) ('alpha_LRG', np.float64(1.0124371403338406)) ('f_sigv_LRG', np.float64(0.8674977963485118)) ('log_Mcent_LRG', np.float64(12.833925364444212)) ('sigma_M_LRG', np.float64(0.4415896494785037))
[Interation 26] ('M_0_LRG', np.float64(12.65879808644651)) ('M_1_LRG', np.float64(13.90220937592629)) ('alpha_LRG', np.float64(1.0721967595477844)) ('f_sigv_LRG', np.float64(0.8984228374810376)) ('log_Mcent_LRG', np.float64(12.841352390306032)) ('sigma_M_LRG', np.float64(0.43994122384125317))
[Interation 26] chi2=399.6658822530233
[Interation 26] chi2=413.0116346362044
[Interation 26] chi2=422.76236074084125
[Interation 26] chi2=394.3041160703061
[Interation 26] chi2=395.7934907388792
[Interation 26] chi2=444.2173067542732
[Interation 26] chi2=431.36642867745417
[Interation 26] chi2=421.3683925950888
[Interation 26] chi2=454.3610831742653
[Interation 26] chi2=414.72902464463687
[Interation 26] chi2=466.2250020326598
[Interation 26] chi2=390.17959399132855
[Interation 27] ('M_0_LRG', np.float64(12.842036538198906)) ('M_1_LRG', np.float64(13.835357928100162)) ('alpha_LRG', np.float64(0.9772922722114278)) ('f_sigv_LRG', np.float64(0.8744389424260666)) ('log_Mcent_LRG', np.float64(12.796724457923546)) ('sigma_M_LRG', np.float64(0.4045920773541881))
[Interation 27] ('M_0_LRG', np.float64(12.832451167646434)) ('M_1_LRG', np.float64(13.881379557288332)) ('alpha_LRG', np.float64(0.9978513674085329)) ('f_sigv_LRG', np.float64(0.8713939151011304)) ('log_Mcent_LRG', np.float64(12.8506499325728)) ('sigma_M_LRG', np.float64(0.451534639848212))
[Interation 27] ('M_0_LRG', np.float64(12.783219361836348)) ('M_1_LRG', np.float64(13.824889583129046)) ('alpha_LRG', np.float64(1.0460961320393878)) ('f_sigv_LRG', np.float64(0.8606113396479912)) ('log_Mcent_LRG', np.float64(12.787172630568547)) ('sigma_M_LRG', np.float64(0.4027428218846763))
[Interation 27] ('M_0_LRG', np.float64(12.77549410155008)) ('M_1_LRG', np.float64(13.912130332501029)) ('alpha_LRG', np.float64(1.0300905711046944)) ('f_sigv_LRG', np.float64(0.8787275233674995)) ('log_Mcent_LRG', np.float64(12.88121825494409)) ('sigma_M_LRG', np.float64(0.4822725251840652))
[Interation 27] chi2=402.56484822061645
[Interation 27] chi2=437.4930865299362
[Interation 27] chi2=412.31130790029414
[Interation 27] chi2=452.970754997733
[Interation 27] ('M_0_LRG', np.float64(12.854763877758463)) ('M_1_LRG', np.float64(13.82683905691509)) ('alpha_LRG', np.float64(0.9790402729331675)) ('f_sigv_LRG', np.float64(0.8778365344294998)) ('log_Mcent_LRG', np.float64(12.788212039193613)) ('sigma_M_LRG', np.float64(0.3896385420847739))
[Interation 27] ('M_0_LRG', np.float64(12.877934414614646)) ('M_1_LRG', np.float64(13.870809803891364)) ('alpha_LRG', np.float64(0.9525570302684996)) ('f_sigv_LRG', np.float64(0.8841254840918852)) ('log_Mcent_LRG', np.float64(12.838076250017728)) ('sigma_M_LRG', np.float64(0.43461922824764665))
[Interation 27] ('M_0_LRG', np.float64(12.85551459493478)) ('M_1_LRG', np.float64(13.870628822753574)) ('alpha_LRG', np.float64(0.9796198175621367)) ('f_sigv_LRG', np.float64(0.8778350203898228)) ('log_Mcent_LRG', np.float64(12.842296698507802)) ('sigma_M_LRG', np.float64(0.44285825134231943))
[Interation 27] ('M_0_LRG', np.float64(12.840467380245649)) ('M_1_LRG', np.float64(13.865998815928485)) ('alpha_LRG', np.float64(0.9597946968309337)) ('f_sigv_LRG', np.float64(0.8935840590946643)) ('log_Mcent_LRG', np.float64(12.820556059616951)) ('sigma_M_LRG', np.float64(0.41406009730824833))
[Interation 27] ('M_0_LRG', np.float64(12.873820257205782)) ('M_1_LRG', np.float64(13.857628993975494)) ('alpha_LRG', np.float64(0.9572240546721296)) ('f_sigv_LRG', np.float64(0.8742350247189383)) ('log_Mcent_LRG', np.float64(12.817395978305775)) ('sigma_M_LRG', np.float64(0.4132756316857644))
[Interation 27] ('M_0_LRG', np.float64(12.804945907400546)) ('M_1_LRG', np.float64(13.843253633611265)) ('alpha_LRG', np.float64(1.0069273955067324)) ('f_sigv_LRG', np.float64(0.8726064920632475)) ('log_Mcent_LRG', np.float64(12.801343499825528)) ('sigma_M_LRG', np.float64(0.4093757788463781))
[Interation 27] ('M_0_LRG', np.float64(12.841256694736252)) ('M_1_LRG', np.float64(13.88503067778589)) ('alpha_LRG', np.float64(0.968598872959246)) ('f_sigv_LRG', np.float64(0.8837041013111554)) ('log_Mcent_LRG', np.float64(12.848270819164917)) ('sigma_M_LRG', np.float64(0.4425831251119416))
[Interation 27] ('M_0_LRG', np.float64(12.760590236258162)) ('M_1_LRG', np.float64(13.869011523289759)) ('alpha_LRG', np.float64(1.0373776253877942)) ('f_sigv_LRG', np.float64(0.8829628040290954)) ('log_Mcent_LRG', np.float64(12.812304449887499)) ('sigma_M_LRG', np.float64(0.4098426141762473))
[Interation 27] ('M_0_LRG', np.float64(12.848287444993337)) ('M_1_LRG', np.float64(13.847704450243345)) ('alpha_LRG', np.float64(0.9808273755433846)) ('f_sigv_LRG', np.float64(0.8759067579387676)) ('log_Mcent_LRG', np.float64(12.80168010960775)) ('sigma_M_LRG', np.float64(0.39857105707869805))
[Interation 27] ('M_0_LRG', np.float64(12.806093905260969)) ('M_1_LRG', np.float64(13.872880210601418)) ('alpha_LRG', np.float64(1.0087304017191994)) ('f_sigv_LRG', np.float64(0.8741725012526534)) ('log_Mcent_LRG', np.float64(12.827108687194094)) ('sigma_M_LRG', np.float64(0.42660587479710677))
[Interation 27] ('M_0_LRG', np.float64(12.851936896968457)) ('M_1_LRG', np.float64(13.874856487898466)) ('alpha_LRG', np.float64(0.9779231760565652)) ('f_sigv_LRG', np.float64(0.8749785454463583)) ('log_Mcent_LRG', np.float64(12.844905168731163)) ('sigma_M_LRG', np.float64(0.44170353680340046))
[Interation 27] ('M_0_LRG', np.float64(12.773759818412895)) ('M_1_LRG', np.float64(13.874196398483587)) ('alpha_LRG', np.float64(1.0183735807709076)) ('f_sigv_LRG', np.float64(0.8867773492694069)) ('log_Mcent_LRG', np.float64(12.838973856558368)) ('sigma_M_LRG', np.float64(0.44301267454260523))
[Interation 27] chi2=462.2203577045809
[Interation 27] chi2=387.3083076094932
[Interation 27] chi2=454.65852861284924
[Interation 27] chi2=396.64426027044607
[Interation 27] chi2=434.0730579723127
[Interation 27] chi2=453.7576795169777
[Interation 27] chi2=439.53970970248616
[Interation 27] chi2=461.26072545675106
[Interation 27] chi2=367.20524083767947
[Interation 27] chi2=415.79664192080054
[Interation 27] chi2=418.0952527303735
[Interation 27] chi2=433.29916565856547
[Interation 28] ('M_0_LRG', np.float64(12.87055460275226)) ('M_1_LRG', np.float64(13.861567427477805)) ('alpha_LRG', np.float64(0.9897039593521263)) ('f_sigv_LRG', np.float64(0.8699498687877276)) ('log_Mcent_LRG', np.float64(12.831617605198158)) ('sigma_M_LRG', np.float64(0.4315978801446706))
[Interation 28] ('M_0_LRG', np.float64(12.857351566754605)) ('M_1_LRG', np.float64(13.853724975619295)) ('alpha_LRG', np.float64(0.9954483222001008)) ('f_sigv_LRG', np.float64(0.8785383975851986)) ('log_Mcent_LRG', np.float64(12.828440122793761)) ('sigma_M_LRG', np.float64(0.4335204955692469))
[Interation 28] ('M_0_LRG', np.float64(12.84958938159284)) ('M_1_LRG', np.float64(13.838273766954602)) ('alpha_LRG', np.float64(0.982166756543647)) ('f_sigv_LRG', np.float64(0.8684786977032171)) ('log_Mcent_LRG', np.float64(12.80213057422495)) ('sigma_M_LRG', np.float64(0.4036076935985581))
[Interation 28] ('M_0_LRG', np.float64(12.873798325310165)) ('M_1_LRG', np.float64(13.832380961425319)) ('alpha_LRG', np.float64(0.9553669781564339)) ('f_sigv_LRG', np.float64(0.8868871267980112)) ('log_Mcent_LRG', np.float64(12.784284123363832)) ('sigma_M_LRG', np.float64(0.3774523901402851))
[Interation 28] chi2=405.1897610965519
[Interation 28] chi2=416.48432000757805
[Interation 28] chi2=372.6511559614133
[Interation 28] chi2=394.9368981534686
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_14.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_14.npy
Set number of threads to 32
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.847868611919433)) ('M_1_LRG', np.float64(13.863149722740784)) ('alpha_LRG', np.float64(0.9874482346104919)) ('f_sigv_LRG', np.float64(0.8769736422514658)) ('log_Mcent_LRG', np.float64(12.835731207302912)) ('sigma_M_LRG', np.float64(0.4379226388831804))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.38019275665283203
Start satellite assignement
Satellite assignement done 0.07030677795410156
LRG mock catalogue done 0.1462416648864746
615318 central galaxies, 84597 satellites, fraction of satellite 0.12 
Done overall time  LRG 0.7083706855773926
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_14.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:22
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Load smu measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:26
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:26
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.5 ...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.5 ...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.567357972657701)) ('M_1_LRG', np.float64(13.909197795762768)) ('alpha_LRG', np.float64(1.1308745962100835)) ('f_sigv_LRG', np.float64(0.8741452454720137)) ('log_Mcent_LRG', np.float64(12.853911980275006)) ('sigma_M_LRG', np.float64(0.45138684951019886))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.625078058436198)) ('M_1_LRG', np.float64(13.906875714413562)) ('alpha_LRG', np.float64(1.093526029993695)) ('f_sigv_LRG', np.float64(0.8877987798648198)) ('log_Mcent_LRG', np.float64(12.861126848922002)) ('sigma_M_LRG', np.float64(0.4698684712396285))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.617587062002926)) ('M_1_LRG', np.float64(13.91562197717285)) ('alpha_LRG', np.float64(1.0804149860811283)) ('f_sigv_LRG', np.float64(0.9266814893496585)) ('log_Mcent_LRG', np.float64(12.828854053641804)) ('sigma_M_LRG', np.float64(0.4097868090488306))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.638530597475162)) ('M_1_LRG', np.float64(13.837077116752171)) ('alpha_LRG', np.float64(1.1022207101740322)) ('f_sigv_LRG', np.float64(0.8648909373356372)) ('log_Mcent_LRG', np.float64(12.76699873758758)) ('sigma_M_LRG', np.float64(0.3679725424291012))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.76338617394352)) ('M_1_LRG', np.float64(13.949950376174261)) ('alpha_LRG', np.float64(1.0155128736810708)) ('f_sigv_LRG', np.float64(0.8870347530053065)) ('log_Mcent_LRG', np.float64(12.90749358904165)) ('sigma_M_LRG', np.float64(0.4882355676947359))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.676152199857285)) ('M_1_LRG', np.float64(13.876031510602525)) ('alpha_LRG', np.float64(1.0532884579577018)) ('f_sigv_LRG', np.float64(0.8675309609588032)) ('log_Mcent_LRG', np.float64(12.823214097689918)) ('sigma_M_LRG', np.float64(0.43432154538059514))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.56347030140138)) ('M_1_LRG', np.float64(13.923289706186681)) ('alpha_LRG', np.float64(1.1084429988354187)) ('f_sigv_LRG', np.float64(0.9153443019937758)) ('log_Mcent_LRG', np.float64(12.822088782827748)) ('sigma_M_LRG', np.float64(0.40561865128460933))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.845415173157306)) ('M_1_LRG', np.float64(13.910756415687272)) ('alpha_LRG', np.float64(1.0544370692139502)) ('f_sigv_LRG', np.float64(0.8306850961933612)) ('log_Mcent_LRG', np.float64(12.94038208504872)) ('sigma_M_LRG', np.float64(0.5461023820458071))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.662777045689475)) ('M_1_LRG', np.float64(13.940404486096753)) ('alpha_LRG', np.float64(1.062209620929107)) ('f_sigv_LRG', np.float64(0.911863276294954)) ('log_Mcent_LRG', np.float64(12.886908480768783)) ('sigma_M_LRG', np.float64(0.4634949329458489))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.676759315363343)) ('M_1_LRG', np.float64(13.956645058673894)) ('alpha_LRG', np.float64(1.075135113507203)) ('f_sigv_LRG', np.float64(0.8415292818896858)) ('log_Mcent_LRG', np.float64(12.927911098074134)) ('sigma_M_LRG', np.float64(0.5231618069499512))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.741572542741906)) ('M_1_LRG', np.float64(13.967948215005146)) ('alpha_LRG', np.float64(1.0068799844946879)) ('f_sigv_LRG', np.float64(0.9212664201461476)) ('log_Mcent_LRG', np.float64(12.919577903384525)) ('sigma_M_LRG', np.float64(0.5042888231415712))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 28] ('M_0_LRG', np.float64(12.706048511855265)) ('M_1_LRG', np.float64(13.925327855517123)) ('alpha_LRG', np.float64(1.0911745180560988)) ('f_sigv_LRG', np.float64(0.9032812857174852)) ('log_Mcent_LRG', np.float64(12.880404004392915)) ('sigma_M_LRG', np.float64(0.469491713442816))
[Interation 28] chi2=433.8281550603389
[Interation 28] chi2=448.13909073402374
[Interation 28] chi2=408.4571091843614
[Interation 28] chi2=404.2394767133052
[Interation 28] chi2=479.0196989858223
[Interation 28] chi2=473.57888915818756
[Interation 28] chi2=405.0832977546035
[Interation 28] chi2=457.1589541090242
[Interation 28] chi2=528.3509589188228
[Interation 28] chi2=450.36571892179563
[Interation 28] chi2=413.94184069892503
[Interation 28] chi2=474.3191411788723
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 29] ('M_0_LRG', np.float64(12.57543295490625)) ('M_1_LRG', np.float64(13.97247067124414)) ('alpha_LRG', np.float64(1.1393751525509208)) ('f_sigv_LRG', np.float64(0.8566428842364223)) ('log_Mcent_LRG', np.float64(12.939840402122904)) ('sigma_M_LRG', np.float64(0.5443000399303911))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 29] ('M_0_LRG', np.float64(12.688778646433121)) ('M_1_LRG', np.float64(13.882302441279913)) ('alpha_LRG', np.float64(1.0789352849892477)) ('f_sigv_LRG', np.float64(0.8626084887468781)) ('log_Mcent_LRG', np.float64(12.824303579233334)) ('sigma_M_LRG', np.float64(0.4261757206586908))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 29] ('M_0_LRG', np.float64(12.614852417420257)) ('M_1_LRG', np.float64(13.984098989777271)) ('alpha_LRG', np.float64(1.0885623089196033)) ('f_sigv_LRG', np.float64(0.8965453293296802)) ('log_Mcent_LRG', np.float64(12.957919955290613)) ('sigma_M_LRG', np.float64(0.5405141021157286))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 29] ('M_0_LRG', np.float64(12.737096254187705)) ('M_1_LRG', np.float64(13.954589623346351)) ('alpha_LRG', np.float64(1.0391092464638974)) ('f_sigv_LRG', np.float64(0.867439700033895)) ('log_Mcent_LRG', np.float64(12.908251354936143)) ('sigma_M_LRG', np.float64(0.5024346552137026))
[Interation 29] chi2=497.6272472658377
[Interation 29] chi2=440.08414499926926
[Interation 29] chi2=434.8155768542553
[Interation 29] chi2=418.6436036244114
[Interation 29] ('M_0_LRG', np.float64(12.703895127657452)) ('M_1_LRG', np.float64(13.934896015541813)) ('alpha_LRG', np.float64(1.0771000241038902)) ('f_sigv_LRG', np.float64(0.8763927977187448)) ('log_Mcent_LRG', np.float64(12.909430955649704)) ('sigma_M_LRG', np.float64(0.5069994902610228))
[Interation 29] ('M_0_LRG', np.float64(12.746055776073325)) ('M_1_LRG', np.float64(13.884078587103932)) ('alpha_LRG', np.float64(1.0572073822769237)) ('f_sigv_LRG', np.float64(0.8688734203064024)) ('log_Mcent_LRG', np.float64(12.849558446738012)) ('sigma_M_LRG', np.float64(0.4546503611862425))
[Interation 29] ('M_0_LRG', np.float64(12.727996198857271)) ('M_1_LRG', np.float64(13.888926890134453)) ('alpha_LRG', np.float64(1.0515454513302744)) ('f_sigv_LRG', np.float64(0.8692392752822737)) ('log_Mcent_LRG', np.float64(12.84036539306059)) ('sigma_M_LRG', np.float64(0.44561584881878324))
[Interation 29] ('M_0_LRG', np.float64(12.72734073965972)) ('M_1_LRG', np.float64(13.882833547299605)) ('alpha_LRG', np.float64(1.0627639218478204)) ('f_sigv_LRG', np.float64(0.8600637580229303)) ('log_Mcent_LRG', np.float64(12.848321709303287)) ('sigma_M_LRG', np.float64(0.463049984207638))
[Interation 29] ('M_0_LRG', np.float64(12.73151916775238)) ('M_1_LRG', np.float64(13.905256666464519)) ('alpha_LRG', np.float64(1.0446730702294227)) ('f_sigv_LRG', np.float64(0.8956358389990301)) ('log_Mcent_LRG', np.float64(12.85548086640513)) ('sigma_M_LRG', np.float64(0.45107619227222984))
[Interation 29] ('M_0_LRG', np.float64(12.759349103132497)) ('M_1_LRG', np.float64(13.899196320087183)) ('alpha_LRG', np.float64(1.0431047590959392)) ('f_sigv_LRG', np.float64(0.898344227201425)) ('log_Mcent_LRG', np.float64(12.861173635331989)) ('sigma_M_LRG', np.float64(0.45892029912263643))
[Interation 29] ('M_0_LRG', np.float64(12.721981771708215)) ('M_1_LRG', np.float64(13.88491106096493)) ('alpha_LRG', np.float64(1.0572560148063423)) ('f_sigv_LRG', np.float64(0.87747759731428)) ('log_Mcent_LRG', np.float64(12.842717814392207)) ('sigma_M_LRG', np.float64(0.4494855181104385))
[Interation 29] ('M_0_LRG', np.float64(12.708192740430075)) ('M_1_LRG', np.float64(13.921012926341028)) ('alpha_LRG', np.float64(1.0603469761742395)) ('f_sigv_LRG', np.float64(0.8858317715494735)) ('log_Mcent_LRG', np.float64(12.872120585112604)) ('sigma_M_LRG', np.float64(0.4664587807092859))
[Interation 29] ('M_0_LRG', np.float64(12.734180480357479)) ('M_1_LRG', np.float64(13.944738183752337)) ('alpha_LRG', np.float64(1.049731967020829)) ('f_sigv_LRG', np.float64(0.8790547983054132)) ('log_Mcent_LRG', np.float64(12.907832867471626)) ('sigma_M_LRG', np.float64(0.5005024841308441))
[Interation 29] ('M_0_LRG', np.float64(12.694825937135246)) ('M_1_LRG', np.float64(13.93089104490844)) ('alpha_LRG', np.float64(1.0665696117001744)) ('f_sigv_LRG', np.float64(0.883634603213462)) ('log_Mcent_LRG', np.float64(12.884635763350445)) ('sigma_M_LRG', np.float64(0.48188906671866283))
[Interation 29] ('M_0_LRG', np.float64(12.72976527149274)) ('M_1_LRG', np.float64(13.893532936730994)) ('alpha_LRG', np.float64(1.0503232959806597)) ('f_sigv_LRG', np.float64(0.881239992988583)) ('log_Mcent_LRG', np.float64(12.844763108946248)) ('sigma_M_LRG', np.float64(0.4451934350628718))
[Interation 29] ('M_0_LRG', np.float64(12.736164177280642)) ('M_1_LRG', np.float64(13.90941146539336)) ('alpha_LRG', np.float64(1.0608451107149288)) ('f_sigv_LRG', np.float64(0.8690580163259436)) ('log_Mcent_LRG', np.float64(12.882041250304255)) ('sigma_M_LRG', np.float64(0.4862636633199631))
[Interation 29] chi2=474.728674909795
[Interation 29] chi2=402.7723752813873
[Interation 29] chi2=461.1788171771843
[Interation 29] chi2=431.73205996317836
[Interation 29] chi2=452.924184191687
[Interation 29] chi2=417.083334611824
[Interation 29] chi2=456.6065383266816
[Interation 29] chi2=390.4656583547085
[Interation 29] chi2=449.9751583391174
[Interation 29] chi2=410.9386656514971
[Interation 29] chi2=422.39326884854677
[Interation 29] chi2=415.8514016131276
[Interation 30] ('M_0_LRG', np.float64(12.738963507872239)) ('M_1_LRG', np.float64(13.919100152457313)) ('alpha_LRG', np.float64(1.0449961253265043)) ('f_sigv_LRG', np.float64(0.8884483109737054)) ('log_Mcent_LRG', np.float64(12.891003790603976)) ('sigma_M_LRG', np.float64(0.4910651116054423))
[Interation 30] ('M_0_LRG', np.float64(12.72184377723562)) ('M_1_LRG', np.float64(13.914570244254822)) ('alpha_LRG', np.float64(1.0679673610170435)) ('f_sigv_LRG', np.float64(0.8783154979649259)) ('log_Mcent_LRG', np.float64(12.881165444886136)) ('sigma_M_LRG', np.float64(0.47643200586363355))
[Interation 30] ('M_0_LRG', np.float64(12.718054666513256)) ('M_1_LRG', np.float64(13.939478814887547)) ('alpha_LRG', np.float64(1.0737342356683783)) ('f_sigv_LRG', np.float64(0.885459810620327)) ('log_Mcent_LRG', np.float64(12.926492422026074)) ('sigma_M_LRG', np.float64(0.5222484001145726))
[Interation 30] ('M_0_LRG', np.float64(12.726089843514538)) ('M_1_LRG', np.float64(13.921722541704126)) ('alpha_LRG', np.float64(1.0534553847520471)) ('f_sigv_LRG', np.float64(0.8863929762631025)) ('log_Mcent_LRG', np.float64(12.888081124357763)) ('sigma_M_LRG', np.float64(0.49165690497913583))
[Interation 30] chi2=383.78519030775607
[Interation 30] chi2=443.18882808809457
[Interation 30] chi2=420.1275152102693
[Interation 30] chi2=453.3212954411948
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_15.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_15.npy
Set number of threads to 32
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.71875831677478)) ('M_1_LRG', np.float64(13.896493423675784)) ('alpha_LRG', np.float64(1.0603822543592774)) ('f_sigv_LRG', np.float64(0.8868787627397918)) ('log_Mcent_LRG', np.float64(12.84306481844369)) ('sigma_M_LRG', np.float64(0.44108303187068865))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.34194397926330566
Start satellite assignement
Satellite assignement done 0.0704503059387207
LRG mock catalogue done 0.14964938163757324
615030 central galaxies, 85513 satellites, fraction of satellite 0.12 
Done overall time  LRG 0.6783676147460938
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_15.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:18
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:18
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:19
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load smu measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.605493437942842)) ('M_1_LRG', np.float64(13.263266437446351)) ('alpha_LRG', np.float64(0.9980418445668703)) ('f_sigv_LRG', np.float64(1.135515395375788)) ('log_Mcent_LRG', np.float64(12.571633516636929)) ('sigma_M_LRG', np.float64(0.46160253583039357))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.203083955049395)) ('M_1_LRG', np.float64(13.699861193547576)) ('alpha_LRG', np.float64(0.9685485397689048)) ('f_sigv_LRG', np.float64(1.0259269562418298)) ('log_Mcent_LRG', np.float64(12.685093300795339)) ('sigma_M_LRG', np.float64(0.471421698735659))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.48245495561095)) ('M_1_LRG', np.float64(13.58441893588557)) ('alpha_LRG', np.float64(0.9624644178306113)) ('f_sigv_LRG', np.float64(1.1988486065040367)) ('log_Mcent_LRG', np.float64(12.82413893381375)) ('sigma_M_LRG', np.float64(0.5171338557322351))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.585865046632652)) ('M_1_LRG', np.float64(13.73273027331462)) ('alpha_LRG', np.float64(0.9862862114487574)) ('f_sigv_LRG', np.float64(1.0615916609461489)) ('log_Mcent_LRG', np.float64(12.818658761366729)) ('sigma_M_LRG', np.float64(0.5617826531078468))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.753081125041236)) ('M_1_LRG', np.float64(13.072598873388728)) ('alpha_LRG', np.float64(0.8662199593147281)) ('f_sigv_LRG', np.float64(0.8550270947963319)) ('log_Mcent_LRG', np.float64(12.292192461432617)) ('sigma_M_LRG', np.float64(0.36417658837703))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.189004896247807)) ('M_1_LRG', np.float64(13.901972135149675)) ('alpha_LRG', np.float64(1.105540144862748)) ('f_sigv_LRG', np.float64(1.09099972872956)) ('log_Mcent_LRG', np.float64(12.847514732757041)) ('sigma_M_LRG', np.float64(0.42218763347519944))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.229543469374272)) ('M_1_LRG', np.float64(14.086542258863004)) ('alpha_LRG', np.float64(1.1554222873428426)) ('f_sigv_LRG', np.float64(1.1435195220532113)) ('log_Mcent_LRG', np.float64(12.994455350534352)) ('sigma_M_LRG', np.float64(0.5992778649054704))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.47237553080263)) ('M_1_LRG', np.float64(13.891819142565001)) ('alpha_LRG', np.float64(1.1041900063188579)) ('f_sigv_LRG', np.float64(1.035019283893693)) ('log_Mcent_LRG', np.float64(12.816595323105114)) ('sigma_M_LRG', np.float64(0.5148762464568878))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.733189374839307)) ('M_1_LRG', np.float64(13.460627450449302)) ('alpha_LRG', np.float64(1.1035834564111302)) ('f_sigv_LRG', np.float64(0.6859298667849735)) ('log_Mcent_LRG', np.float64(12.586552700616203)) ('sigma_M_LRG', np.float64(0.48830080212727134))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.511560848359615)) ('M_1_LRG', np.float64(14.041019284165431)) ('alpha_LRG', np.float64(0.5969062120671235)) ('f_sigv_LRG', np.float64(1.0192113896358914)) ('log_Mcent_LRG', np.float64(12.606109052760539)) ('sigma_M_LRG', np.float64(0.23586795719643988))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.521249187648275)) ('M_1_LRG', np.float64(13.68917642224442)) ('alpha_LRG', np.float64(0.9300471960679906)) ('f_sigv_LRG', np.float64(1.153064991058471)) ('log_Mcent_LRG', np.float64(12.596715930110438)) ('sigma_M_LRG', np.float64(0.32725763180145445))
[Interation 30] chi2=7675.528638748108
[Interation 30] chi2=2695.06783379612
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 30] ('M_0_LRG', np.float64(12.434036401193955)) ('M_1_LRG', np.float64(13.834706205585308)) ('alpha_LRG', np.float64(1.1566027859984715)) ('f_sigv_LRG', np.float64(1.119046781240686)) ('log_Mcent_LRG', np.float64(12.80192873070331)) ('sigma_M_LRG', np.float64(0.46190155583702075))
[Interation 30] chi2=5604.598760327403
[Interation 30] chi2=2044.9940877600677
[Interation 30] chi2=6216.331038059518
[Interation 30] chi2=1719.6884486146546
[Interation 30] chi2=992.6168696819967
[Interation 30] chi2=1613.7295827555256
[Interation 30] chi2=2400.2798337859836
[Interation 30] chi2=2436.265516138766
[Interation 30] chi2=2529.194084925552
[Interation 30] chi2=1483.6476300801826
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 31] ('M_0_LRG', np.float64(12.50117856753464)) ('M_1_LRG', np.float64(13.957506341524601)) ('alpha_LRG', np.float64(1.1160112102898527)) ('f_sigv_LRG', np.float64(0.9339028816594771)) ('log_Mcent_LRG', np.float64(12.880183649679541)) ('sigma_M_LRG', np.float64(0.48081035463417576))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 31] ('M_0_LRG', np.float64(12.463081614149493)) ('M_1_LRG', np.float64(13.486680342533777)) ('alpha_LRG', np.float64(0.9063254506503245)) ('f_sigv_LRG', np.float64(0.7517987597094442)) ('log_Mcent_LRG', np.float64(12.529471167924846)) ('sigma_M_LRG', np.float64(0.3849421569915026))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 31] ('M_0_LRG', np.float64(12.664348684590017)) ('M_1_LRG', np.float64(13.863183287604912)) ('alpha_LRG', np.float64(0.961072801664056)) ('f_sigv_LRG', np.float64(1.171238203168936)) ('log_Mcent_LRG', np.float64(12.836822072732401)) ('sigma_M_LRG', np.float64(0.35107471006384805))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 31] ('M_0_LRG', np.float64(12.408981161484936)) ('M_1_LRG', np.float64(14.062161812014791)) ('alpha_LRG', np.float64(1.0906612863408531)) ('f_sigv_LRG', np.float64(1.2317413901441774)) ('log_Mcent_LRG', np.float64(13.0254775595315)) ('sigma_M_LRG', np.float64(0.43814733667037753))
[Interation 31] chi2=467.99078919394134
[Interation 31] chi2=2850.7204515588146
[Interation 31] chi2=3792.137246402567
[Interation 31] chi2=2021.087382777411
[Interation 31] ('M_0_LRG', np.float64(12.712165194187325)) ('M_1_LRG', np.float64(13.875324751711814)) ('alpha_LRG', np.float64(1.0737958851331684)) ('f_sigv_LRG', np.float64(0.8744961672609397)) ('log_Mcent_LRG', np.float64(12.81712259071722)) ('sigma_M_LRG', np.float64(0.4197954801437573))
[Interation 31] ('M_0_LRG', np.float64(12.741461366062545)) ('M_1_LRG', np.float64(13.884505116163835)) ('alpha_LRG', np.float64(1.0676816985647755)) ('f_sigv_LRG', np.float64(0.8810856491416944)) ('log_Mcent_LRG', np.float64(12.829319767736651)) ('sigma_M_LRG', np.float64(0.41972848192914014))
[Interation 31] ('M_0_LRG', np.float64(12.739874087958754)) ('M_1_LRG', np.float64(13.866638604962866)) ('alpha_LRG', np.float64(1.053695879677658)) ('f_sigv_LRG', np.float64(0.8618149453142513)) ('log_Mcent_LRG', np.float64(12.837466602141289)) ('sigma_M_LRG', np.float64(0.44815882802524265))
[Interation 31] ('M_0_LRG', np.float64(12.775570093625584)) ('M_1_LRG', np.float64(13.883384983585618)) ('alpha_LRG', np.float64(1.0309227410083728)) ('f_sigv_LRG', np.float64(0.8608354361807425)) ('log_Mcent_LRG', np.float64(12.864338883069175)) ('sigma_M_LRG', np.float64(0.4742218024564603))
[Interation 31] ('M_0_LRG', np.float64(12.884506635956296)) ('M_1_LRG', np.float64(13.812649660906663)) ('alpha_LRG', np.float64(0.9718281225675011)) ('f_sigv_LRG', np.float64(0.8790642137114976)) ('log_Mcent_LRG', np.float64(12.770817533478759)) ('sigma_M_LRG', np.float64(0.368365164148045))
[Interation 31] ('M_0_LRG', np.float64(12.73656775139285)) ('M_1_LRG', np.float64(13.902946499412122)) ('alpha_LRG', np.float64(1.0593964758120513)) ('f_sigv_LRG', np.float64(0.8706102510151408)) ('log_Mcent_LRG', np.float64(12.876586956220406)) ('sigma_M_LRG', np.float64(0.4832910343557872))
[Interation 31] ('M_0_LRG', np.float64(12.888390690797218)) ('M_1_LRG', np.float64(13.859741789495844)) ('alpha_LRG', np.float64(0.9733308318802916)) ('f_sigv_LRG', np.float64(0.8698230926191679)) ('log_Mcent_LRG', np.float64(12.849025440225583)) ('sigma_M_LRG', np.float64(0.45122940771701936))
[Interation 31] ('M_0_LRG', np.float64(12.715225742704591)) ('M_1_LRG', np.float64(13.896207645750845)) ('alpha_LRG', np.float64(1.0789865127558624)) ('f_sigv_LRG', np.float64(0.856410036506664)) ('log_Mcent_LRG', np.float64(12.857271028264554)) ('sigma_M_LRG', np.float64(0.465960104532358))
[Interation 31] ('M_0_LRG', np.float64(12.719986009309043)) ('M_1_LRG', np.float64(13.85382875011555)) ('alpha_LRG', np.float64(1.0589709042462725)) ('f_sigv_LRG', np.float64(0.8798433424351361)) ('log_Mcent_LRG', np.float64(12.800999700831346)) ('sigma_M_LRG', np.float64(0.40579554182150085))
[Interation 31] ('M_0_LRG', np.float64(12.797586093978559)) ('M_1_LRG', np.float64(13.845226627783486)) ('alpha_LRG', np.float64(1.0367538344320437)) ('f_sigv_LRG', np.float64(0.8633075893982094)) ('log_Mcent_LRG', np.float64(12.805818777106314)) ('sigma_M_LRG', np.float64(0.4114339835979274))
[Interation 31] ('M_0_LRG', np.float64(12.745939870585175)) ('M_1_LRG', np.float64(13.88162446930027)) ('alpha_LRG', np.float64(1.0455737232330828)) ('f_sigv_LRG', np.float64(0.873585238683137)) ('log_Mcent_LRG', np.float64(12.840349607320821)) ('sigma_M_LRG', np.float64(0.4420352516580689))
[Interation 31] ('M_0_LRG', np.float64(12.764838108228663)) ('M_1_LRG', np.float64(13.855457509477546)) ('alpha_LRG', np.float64(1.056347077601882)) ('f_sigv_LRG', np.float64(0.8752996130870699)) ('log_Mcent_LRG', np.float64(12.795980766491674)) ('sigma_M_LRG', np.float64(0.3901340526185633))
[Interation 31] chi2=408.80474739702026
[Interation 31] chi2=392.8730961267013
[Interation 31] chi2=431.945810172028
[Interation 31] chi2=419.0049040723975
[Interation 31] chi2=452.91844483256347
[Interation 31] chi2=459.7774909220274
[Interation 31] chi2=430.0738695727804
[Interation 32] ('M_0_LRG', np.float64(12.806376336402643)) ('M_1_LRG', np.float64(13.84898478285464)) ('alpha_LRG', np.float64(1.0056126266113394)) ('f_sigv_LRG', np.float64(0.8770330124389388)) ('log_Mcent_LRG', np.float64(12.808924754475745)) ('sigma_M_LRG', np.float64(0.4146938785052191))
[Interation 31] chi2=445.83712318566245
[Interation 31] chi2=410.5644059206738
[Interation 31] chi2=413.4500196479589
[Interation 32] ('M_0_LRG', np.float64(12.766700257598544)) ('M_1_LRG', np.float64(13.91909314029713)) ('alpha_LRG', np.float64(1.050736644914074)) ('f_sigv_LRG', np.float64(0.8678404129537016)) ('log_Mcent_LRG', np.float64(12.884117010532629)) ('sigma_M_LRG', np.float64(0.47976614889374775))
[Interation 31] chi2=428.20489052939047
[Interation 32] ('M_0_LRG', np.float64(12.788619040545306)) ('M_1_LRG', np.float64(13.851037663590839)) ('alpha_LRG', np.float64(1.030537154799263)) ('f_sigv_LRG', np.float64(0.8763583633867861)) ('log_Mcent_LRG', np.float64(12.805111386934543)) ('sigma_M_LRG', np.float64(0.40360771063592915))
[Interation 31] chi2=389.7090978875603
[Interation 32] ('M_0_LRG', np.float64(12.843547104021384)) ('M_1_LRG', np.float64(13.862311676643694)) ('alpha_LRG', np.float64(1.0077115163740573)) ('f_sigv_LRG', np.float64(0.8650558349951335)) ('log_Mcent_LRG', np.float64(12.820118648355121)) ('sigma_M_LRG', np.float64(0.4140755646299428))
[Interation 32] chi2=442.37137743037346
[Interation 32] chi2=423.63778124531507
[Interation 32] chi2=377.1270242993144
[Interation 32] chi2=442.02647731809935
[Interation 33] ('M_0_LRG', np.float64(12.763247636383824)) ('M_1_LRG', np.float64(13.86624621993756)) ('alpha_LRG', np.float64(1.0336095475322749)) ('f_sigv_LRG', np.float64(0.8789921137671156)) ('log_Mcent_LRG', np.float64(12.82130476964404)) ('sigma_M_LRG', np.float64(0.4243539323458388))
[Interation 33] ('M_0_LRG', np.float64(12.699904644138877)) ('M_1_LRG', np.float64(13.871815150158561)) ('alpha_LRG', np.float64(1.060453299907777)) ('f_sigv_LRG', np.float64(0.8861946178172224)) ('log_Mcent_LRG', np.float64(12.807991224754804)) ('sigma_M_LRG', np.float64(0.4055633732309073))
[Interation 33] ('M_0_LRG', np.float64(12.694787912393439)) ('M_1_LRG', np.float64(13.870559475105505)) ('alpha_LRG', np.float64(1.077496906779994)) ('f_sigv_LRG', np.float64(0.8710970268066277)) ('log_Mcent_LRG', np.float64(12.820820256725307)) ('sigma_M_LRG', np.float64(0.4268689778552989))
[Interation 33] ('M_0_LRG', np.float64(12.684673613307094)) ('M_1_LRG', np.float64(13.903498509086823)) ('alpha_LRG', np.float64(1.0614769593397766)) ('f_sigv_LRG', np.float64(0.8872163638463836)) ('log_Mcent_LRG', np.float64(12.84919827620674)) ('sigma_M_LRG', np.float64(0.45001605985726406))
[Interation 33] chi2=418.44475003954756
[Interation 33] chi2=413.2073045141455
[Interation 33] chi2=434.4047381952912
[Interation 33] chi2=449.12835386306864
[Interation 32] ('M_0_LRG', np.float64(12.764540946675043)) ('M_1_LRG', np.float64(13.86486622709131)) ('alpha_LRG', np.float64(1.0467418972847282)) ('f_sigv_LRG', np.float64(0.8685516569594331)) ('log_Mcent_LRG', np.float64(12.82252746177508)) ('sigma_M_LRG', np.float64(0.4279272448458852))
[Interation 32] ('M_0_LRG', np.float64(12.803825299447645)) ('M_1_LRG', np.float64(13.83940068259431)) ('alpha_LRG', np.float64(1.0057947287108997)) ('f_sigv_LRG', np.float64(0.8842009514315391)) ('log_Mcent_LRG', np.float64(12.797576689467633)) ('sigma_M_LRG', np.float64(0.399992028229914))
[Interation 32] ('M_0_LRG', np.float64(12.731170370740951)) ('M_1_LRG', np.float64(13.867807602798411)) ('alpha_LRG', np.float64(1.0570568632359407)) ('f_sigv_LRG', np.float64(0.8781779947669084)) ('log_Mcent_LRG', np.float64(12.813253051548827)) ('sigma_M_LRG', np.float64(0.41318020610453976))
[Interation 32] ('M_0_LRG', np.float64(12.74438579926409)) ('M_1_LRG', np.float64(13.857110694232208)) ('alpha_LRG', np.float64(1.0446428558812697)) ('f_sigv_LRG', np.float64(0.8790867629217753)) ('log_Mcent_LRG', np.float64(12.8056409729909)) ('sigma_M_LRG', np.float64(0.40896697874749544))
[Interation 32] ('M_0_LRG', np.float64(12.73484636630257)) ('M_1_LRG', np.float64(13.857246566584845)) ('alpha_LRG', np.float64(1.0515666138093025)) ('f_sigv_LRG', np.float64(0.8804293138891888)) ('log_Mcent_LRG', np.float64(12.800369657416233)) ('sigma_M_LRG', np.float64(0.400363208853425))
[Interation 32] ('M_0_LRG', np.float64(12.775081372424474)) ('M_1_LRG', np.float64(13.847409569756268)) ('alpha_LRG', np.float64(1.0291712278844065)) ('f_sigv_LRG', np.float64(0.878073818995607)) ('log_Mcent_LRG', np.float64(12.798978786749363)) ('sigma_M_LRG', np.float64(0.4004322451652547))
[Interation 32] ('M_0_LRG', np.float64(12.773880307046927)) ('M_1_LRG', np.float64(13.843327199438724)) ('alpha_LRG', np.float64(1.0229105345185048)) ('f_sigv_LRG', np.float64(0.8818233833619513)) ('log_Mcent_LRG', np.float64(12.798359855832123)) ('sigma_M_LRG', np.float64(0.40231536356150827))
[Interation 32] ('M_0_LRG', np.float64(12.671278472899633)) ('M_1_LRG', np.float64(13.873692556291681)) ('alpha_LRG', np.float64(1.082010702328356)) ('f_sigv_LRG', np.float64(0.8841818210520298)) ('log_Mcent_LRG', np.float64(12.80641491308976)) ('sigma_M_LRG', np.float64(0.40454273462430945))
[Interation 32] ('M_0_LRG', np.float64(12.690078896270364)) ('M_1_LRG', np.float64(13.88070608607449)) ('alpha_LRG', np.float64(1.0855579276107155)) ('f_sigv_LRG', np.float64(0.8718179900151742)) ('log_Mcent_LRG', np.float64(12.83101546453461)) ('sigma_M_LRG', np.float64(0.43653771953862486))
[Interation 32] ('M_0_LRG', np.float64(12.713374274455516)) ('M_1_LRG', np.float64(13.867425707965792)) ('alpha_LRG', np.float64(1.069013298217797)) ('f_sigv_LRG', np.float64(0.8751912263683552)) ('log_Mcent_LRG', np.float64(12.809564678565534)) ('sigma_M_LRG', np.float64(0.4099297777431901))
[Interation 32] ('M_0_LRG', np.float64(12.701753169776064)) ('M_1_LRG', np.float64(13.850503815766064)) ('alpha_LRG', np.float64(1.0714477733852843)) ('f_sigv_LRG', np.float64(0.8796585938539313)) ('log_Mcent_LRG', np.float64(12.781299194114847)) ('sigma_M_LRG', np.float64(0.38106133888145516))
[Interation 32] ('M_0_LRG', np.float64(12.800459516917156)) ('M_1_LRG', np.float64(13.881218327644307)) ('alpha_LRG', np.float64(1.0233226212221818)) ('f_sigv_LRG', np.float64(0.8675237830817026)) ('log_Mcent_LRG', np.float64(12.85822022756831)) ('sigma_M_LRG', np.float64(0.4654630947701318))
[Interation 32] chi2=393.9938822582889
[Interation 32] chi2=439.39008504829144
[Interation 32] chi2=380.4570366604173
[Interation 32] chi2=408.60019208995817
[Interation 32] chi2=443.35165554035484
[Interation 32] chi2=412.33144735409815
[Interation 32] chi2=389.62599142670666
[Interation 32] chi2=378.13650940512355
[Interation 32] chi2=434.03849512039665
[Interation 32] chi2=438.34057529793705
[Interation 32] chi2=407.10864224874183
[Interation 32] chi2=419.32109959305194
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_16.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_16.npy
Set number of threads to 32
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.7703953060805)) ('M_1_LRG', np.float64(13.845260827208715)) ('alpha_LRG', np.float64(1.024539168582175)) ('f_sigv_LRG', np.float64(0.884256661626551)) ('log_Mcent_LRG', np.float64(12.793958631926666)) ('sigma_M_LRG', np.float64(0.394153157791868))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.372300386428833
Start satellite assignement
Satellite assignement done 0.07241582870483398
LRG mock catalogue done 0.14802765846252441
611819 central galaxies, 88094 satellites, fraction of satellite 0.13 
Done overall time  LRG 0.7084801197052002
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_16.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:19
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:19
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:19
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:19
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:19
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:20
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:20
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:21
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load correlation matrix for LRG at z0.5 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Load smu measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load correlation matrix for LRG at z0.5 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Load smu measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:23
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load rppi measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 34] ('M_0_LRG', np.float64(12.752853053261893)) ('M_1_LRG', np.float64(13.874155404485219)) ('alpha_LRG', np.float64(1.0385827522191602)) ('f_sigv_LRG', np.float64(0.8778854671035301)) ('log_Mcent_LRG', np.float64(12.825834595926313)) ('sigma_M_LRG', np.float64(0.43164439806128274))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 34] ('M_0_LRG', np.float64(12.752315561938362)) ('M_1_LRG', np.float64(13.903686290278884)) ('alpha_LRG', np.float64(1.0459407145239856)) ('f_sigv_LRG', np.float64(0.8383557679177261)) ('log_Mcent_LRG', np.float64(12.873761650105862)) ('sigma_M_LRG', np.float64(0.4785308252048311))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 34] ('M_0_LRG', np.float64(12.869633316778064)) ('M_1_LRG', np.float64(13.84431452345843)) ('alpha_LRG', np.float64(0.9904232485116788)) ('f_sigv_LRG', np.float64(0.8279467158683373)) ('log_Mcent_LRG', np.float64(12.796966299599386)) ('sigma_M_LRG', np.float64(0.4063315060338274))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 34] ('M_0_LRG', np.float64(12.759608814215355)) ('M_1_LRG', np.float64(13.891136919712752)) ('alpha_LRG', np.float64(0.9879794958489111)) ('f_sigv_LRG', np.float64(0.9118276713260359)) ('log_Mcent_LRG', np.float64(12.886863709751335)) ('sigma_M_LRG', np.float64(0.47635375990711437))
[Interation 34] chi2=399.8971829827114
[Interation 34] chi2=449.63453653611487
[Interation 34] chi2=462.12741095453356
[Interation 34] chi2=553.120202663309
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.832420968666455)) ('M_1_LRG', np.float64(13.884121561494325)) ('alpha_LRG', np.float64(1.0044375788666033)) ('f_sigv_LRG', np.float64(0.8851188627110321)) ('log_Mcent_LRG', np.float64(12.868870524609003)) ('sigma_M_LRG', np.float64(0.47242840782925877))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.753836591829401)) ('M_1_LRG', np.float64(13.860293028721896)) ('alpha_LRG', np.float64(1.0493281288956047)) ('f_sigv_LRG', np.float64(0.8518422304289089)) ('log_Mcent_LRG', np.float64(12.821390102326152)) ('sigma_M_LRG', np.float64(0.42334123530808476))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.767651854836583)) ('M_1_LRG', np.float64(13.831143022053391)) ('alpha_LRG', np.float64(1.0355351253851302)) ('f_sigv_LRG', np.float64(0.8794306846306106)) ('log_Mcent_LRG', np.float64(12.770325490867148)) ('sigma_M_LRG', np.float64(0.37256061016754854))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.812672397792841)) ('M_1_LRG', np.float64(13.841650870504607)) ('alpha_LRG', np.float64(1.0216656295862465)) ('f_sigv_LRG', np.float64(0.8673099427440024)) ('log_Mcent_LRG', np.float64(12.798851684340836)) ('sigma_M_LRG', np.float64(0.39460577665758234))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.756468931278427)) ('M_1_LRG', np.float64(13.847836780637545)) ('alpha_LRG', np.float64(1.0171427646423434)) ('f_sigv_LRG', np.float64(0.8842622569756228)) ('log_Mcent_LRG', np.float64(12.792752711087916)) ('sigma_M_LRG', np.float64(0.38311543305620577))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.676351741837633)) ('M_1_LRG', np.float64(13.944643779114354)) ('alpha_LRG', np.float64(1.1139548874174234)) ('f_sigv_LRG', np.float64(0.8859230928064031)) ('log_Mcent_LRG', np.float64(12.897509045954667)) ('sigma_M_LRG', np.float64(0.49691470754469025))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.68019705657604)) ('M_1_LRG', np.float64(13.924621577912731)) ('alpha_LRG', np.float64(1.0940328705815776)) ('f_sigv_LRG', np.float64(0.8731705290566307)) ('log_Mcent_LRG', np.float64(12.905476952949899)) ('sigma_M_LRG', np.float64(0.5111107272301904))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.750212275498825)) ('M_1_LRG', np.float64(13.804576486278213)) ('alpha_LRG', np.float64(1.0402440445581864)) ('f_sigv_LRG', np.float64(0.8781322651889424)) ('log_Mcent_LRG', np.float64(12.742846114570117)) ('sigma_M_LRG', np.float64(0.3422390047514623))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.79278731695842)) ('M_1_LRG', np.float64(13.875018281494727)) ('alpha_LRG', np.float64(0.9907542658150214)) ('f_sigv_LRG', np.float64(0.8879466769835772)) ('log_Mcent_LRG', np.float64(12.846733119566677)) ('sigma_M_LRG', np.float64(0.4473820894197392))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.75620719479096)) ('M_1_LRG', np.float64(13.85614671987152)) ('alpha_LRG', np.float64(1.041540062282284)) ('f_sigv_LRG', np.float64(0.8617451212357126)) ('log_Mcent_LRG', np.float64(12.801405558661152)) ('sigma_M_LRG', np.float64(0.40941387068540736))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.77565682367493)) ('M_1_LRG', np.float64(13.866810478785663)) ('alpha_LRG', np.float64(1.045706513091752)) ('f_sigv_LRG', np.float64(0.8791587168000464)) ('log_Mcent_LRG', np.float64(12.83558130070984)) ('sigma_M_LRG', np.float64(0.4349885883031003))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 33] ('M_0_LRG', np.float64(12.689764796207237)) ('M_1_LRG', np.float64(13.878209291909615)) ('alpha_LRG', np.float64(1.0845328519236928)) ('f_sigv_LRG', np.float64(0.8942399082059306)) ('log_Mcent_LRG', np.float64(12.779566873339837)) ('sigma_M_LRG', np.float64(0.36135436008000626))
[Interation 33] chi2=448.882947467331
[Interation 33] chi2=386.5716802330603
[Interation 33] chi2=417.3485130122583
[Interation 33] chi2=481.3159714450973
[Interation 33] chi2=472.6694810616097
[Interation 33] chi2=427.5218699507059
[Interation 33] chi2=343.216632257037
[Interation 33] chi2=424.17957315089376
[Interation 33] chi2=457.7457207695078
[Interation 33] chi2=416.46171354359643
[Interation 33] chi2=431.1824943665671
[Interation 33] chi2=478.09179705157334
[Interation 35] ('M_0_LRG', np.float64(12.821110527527619)) ('M_1_LRG', np.float64(13.806780587612069)) ('alpha_LRG', np.float64(0.9880032066314139)) ('f_sigv_LRG', np.float64(0.8864920893318267)) ('log_Mcent_LRG', np.float64(12.748607836937142)) ('sigma_M_LRG', np.float64(0.3458339072267724))
[Interation 35] ('M_0_LRG', np.float64(12.785024700700054)) ('M_1_LRG', np.float64(13.876274536309491)) ('alpha_LRG', np.float64(1.0150791348163994)) ('f_sigv_LRG', np.float64(0.8983473831698864)) ('log_Mcent_LRG', np.float64(12.820607264573116)) ('sigma_M_LRG', np.float64(0.4119425943836396))
[Interation 35] ('M_0_LRG', np.float64(12.757793937786161)) ('M_1_LRG', np.float64(13.880360536487007)) ('alpha_LRG', np.float64(1.0466870360069747)) ('f_sigv_LRG', np.float64(0.8743507123125831)) ('log_Mcent_LRG', np.float64(12.846187118663519)) ('sigma_M_LRG', np.float64(0.4537458938186379))
[Interation 35] ('M_0_LRG', np.float64(12.773105592829573)) ('M_1_LRG', np.float64(13.826833029892724)) ('alpha_LRG', np.float64(1.0141183236742857)) ('f_sigv_LRG', np.float64(0.8923371367177617)) ('log_Mcent_LRG', np.float64(12.757504775812736)) ('sigma_M_LRG', np.float64(0.35077599543380766))
[Interation 35] chi2=433.16369321008614
[Interation 35] chi2=408.3954502173778
[Interation 35] chi2=416.8178844564025
[Interation 35] chi2=426.9174963830407
[Interation 34] ('M_0_LRG', np.float64(12.796912202974827)) ('M_1_LRG', np.float64(13.849343435418866)) ('alpha_LRG', np.float64(1.0112231826756153)) ('f_sigv_LRG', np.float64(0.876650912426284)) ('log_Mcent_LRG', np.float64(12.798343722402214)) ('sigma_M_LRG', np.float64(0.39714310243766116))
[Interation 34] ('M_0_LRG', np.float64(12.824072035482136)) ('M_1_LRG', np.float64(13.833759207673037)) ('alpha_LRG', np.float64(0.9939673305860497)) ('f_sigv_LRG', np.float64(0.8745537835411048)) ('log_Mcent_LRG', np.float64(12.77886929920443)) ('sigma_M_LRG', np.float64(0.3706682099351692))
[Interation 34] ('M_0_LRG', np.float64(12.797693646114707)) ('M_1_LRG', np.float64(13.859226576557706)) ('alpha_LRG', np.float64(0.9951055909811592)) ('f_sigv_LRG', np.float64(0.8895485445177043)) ('log_Mcent_LRG', np.float64(12.800487130605635)) ('sigma_M_LRG', np.float64(0.3942422310483743))
[Interation 34] ('M_0_LRG', np.float64(12.792230121150626)) ('M_1_LRG', np.float64(13.841597263305877)) ('alpha_LRG', np.float64(1.0208224713760436)) ('f_sigv_LRG', np.float64(0.8753470824109697)) ('log_Mcent_LRG', np.float64(12.789211613164102)) ('sigma_M_LRG', np.float64(0.39031358271051203))
[Interation 34] ('M_0_LRG', np.float64(12.804922346544657)) ('M_1_LRG', np.float64(13.853687745371346)) ('alpha_LRG', np.float64(1.0035364641205524)) ('f_sigv_LRG', np.float64(0.8736543307445878)) ('log_Mcent_LRG', np.float64(12.799926931372223)) ('sigma_M_LRG', np.float64(0.3929011564603738))
[Interation 34] ('M_0_LRG', np.float64(12.804266485991793)) ('M_1_LRG', np.float64(13.859154411502274)) ('alpha_LRG', np.float64(1.0078309266041574)) ('f_sigv_LRG', np.float64(0.8731000737812108)) ('log_Mcent_LRG', np.float64(12.81347301073311)) ('sigma_M_LRG', np.float64(0.40991429955902753))
[Interation 34] ('M_0_LRG', np.float64(12.804722464353862)) ('M_1_LRG', np.float64(13.854171729520857)) ('alpha_LRG', np.float64(1.0151245176935404)) ('f_sigv_LRG', np.float64(0.8733576715214965)) ('log_Mcent_LRG', np.float64(12.80789245296867)) ('sigma_M_LRG', np.float64(0.41072736068891125))
[Interation 34] ('M_0_LRG', np.float64(12.79494089001854)) ('M_1_LRG', np.float64(13.847301217097048)) ('alpha_LRG', np.float64(1.0012077501469627)) ('f_sigv_LRG', np.float64(0.881000493117979)) ('log_Mcent_LRG', np.float64(12.78379425505843)) ('sigma_M_LRG', np.float64(0.3751127510429253))
[Interation 34] ('M_0_LRG', np.float64(12.812995072369889)) ('M_1_LRG', np.float64(13.826744954776002)) ('alpha_LRG', np.float64(1.013466640338658)) ('f_sigv_LRG', np.float64(0.8707439634695412)) ('log_Mcent_LRG', np.float64(12.781560432136628)) ('sigma_M_LRG', np.float64(0.386053746710711))
[Interation 34] ('M_0_LRG', np.float64(12.805439599716617)) ('M_1_LRG', np.float64(13.814676128947678)) ('alpha_LRG', np.float64(0.9867614640089637)) ('f_sigv_LRG', np.float64(0.8850609734415325)) ('log_Mcent_LRG', np.float64(12.744958316871484)) ('sigma_M_LRG', np.float64(0.33349410722681205))
[Interation 34] ('M_0_LRG', np.float64(12.789698669919776)) ('M_1_LRG', np.float64(13.836021869382643)) ('alpha_LRG', np.float64(1.0166063479232161)) ('f_sigv_LRG', np.float64(0.8670674873383195)) ('log_Mcent_LRG', np.float64(12.770698473817724)) ('sigma_M_LRG', np.float64(0.3637663593291407))
[Interation 34] ('M_0_LRG', np.float64(12.794524719799545)) ('M_1_LRG', np.float64(13.876520269117105)) ('alpha_LRG', np.float64(1.0076156761364872)) ('f_sigv_LRG', np.float64(0.886742086008465)) ('log_Mcent_LRG', np.float64(12.827482923004341)) ('sigma_M_LRG', np.float64(0.42540369091438895))
[Interation 34] chi2=436.29694725962855
[Interation 34] chi2=427.3180792437203
[Interation 34] chi2=422.81801726410384
[Interation 34] chi2=415.20718959938347
[Interation 34] chi2=408.9450304941524
[Interation 34] chi2=421.7002797028499
[Interation 34] chi2=418.895017077947
[Interation 34] chi2=436.12297985044586
[Interation 34] chi2=418.6929752412857
[Interation 34] chi2=392.0480708484001
[Interation 34] chi2=417.24117511265797
[Interation 34] chi2=411.55224481277446
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_17.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_17.npy
Set number of threads to 32
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.809798472152155)) ('M_1_LRG', np.float64(13.844301863206029)) ('alpha_LRG', np.float64(1.0153049217763812)) ('f_sigv_LRG', np.float64(0.8697308737667866)) ('log_Mcent_LRG', np.float64(12.800041855611893)) ('sigma_M_LRG', np.float64(0.4003216994368015))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.32256174087524414
Start satellite assignement
Satellite assignement done 0.07178211212158203
LRG mock catalogue done 0.15006089210510254
613243 central galaxies, 86193 satellites, fraction of satellite 0.12 
Done overall time  LRG 0.6586260795593262
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_17.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:26
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:22
Load smu measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 36] ('M_0_LRG', np.float64(12.510103017676652)) ('M_1_LRG', np.float64(13.690170766366633)) ('alpha_LRG', np.float64(0.8823530153549244)) ('f_sigv_LRG', np.float64(1.128313307761167)) ('log_Mcent_LRG', np.float64(12.787167743093423)) ('sigma_M_LRG', np.float64(0.5681715741573139))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 36] ('M_0_LRG', np.float64(12.446175695702085)) ('M_1_LRG', np.float64(13.362838275938152)) ('alpha_LRG', np.float64(1.0599379766755497)) ('f_sigv_LRG', np.float64(0.9775546912094649)) ('log_Mcent_LRG', np.float64(12.725019272885698)) ('sigma_M_LRG', np.float64(0.5066098459223037))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 36] ('M_0_LRG', np.float64(12.335714920468464)) ('M_1_LRG', np.float64(13.66372402933113)) ('alpha_LRG', np.float64(0.8397738166143522)) ('f_sigv_LRG', np.float64(0.9295423502551188)) ('log_Mcent_LRG', np.float64(12.773484627254314)) ('sigma_M_LRG', np.float64(0.6043783462841817))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 36] ('M_0_LRG', np.float64(12.572757063631098)) ('M_1_LRG', np.float64(13.791490507232878)) ('alpha_LRG', np.float64(0.8427206369770419)) ('f_sigv_LRG', np.float64(1.1227944733284012)) ('log_Mcent_LRG', np.float64(12.669514610090824)) ('sigma_M_LRG', np.float64(0.4057697808725151))
[Interation 36] chi2=3020.731340611886
[Interation 36] chi2=11191.253952635274
[Interation 36] chi2=3620.5661705709763
[Interation 36] chi2=2379.7665308426913
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.611148102115315)) ('M_1_LRG', np.float64(13.893028123040242)) ('alpha_LRG', np.float64(0.9211818770836739)) ('f_sigv_LRG', np.float64(0.7025133644781063)) ('log_Mcent_LRG', np.float64(12.794141719388037)) ('sigma_M_LRG', np.float64(0.39040568899460637))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.507139805464712)) ('M_1_LRG', np.float64(13.82869210715192)) ('alpha_LRG', np.float64(1.026812807099522)) ('f_sigv_LRG', np.float64(0.9585704050356588)) ('log_Mcent_LRG', np.float64(12.766667557165642)) ('sigma_M_LRG', np.float64(0.5063138514529693))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.9125755107573)) ('M_1_LRG', np.float64(14.215117214000706)) ('alpha_LRG', np.float64(1.0631879654212373)) ('f_sigv_LRG', np.float64(0.632664616912215)) ('log_Mcent_LRG', np.float64(12.82486914743485)) ('sigma_M_LRG', np.float64(0.30492889176043064))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.917675261244957)) ('M_1_LRG', np.float64(13.795856528604086)) ('alpha_LRG', np.float64(0.9536436827767736)) ('f_sigv_LRG', np.float64(0.8684825016015579)) ('log_Mcent_LRG', np.float64(12.893252589884268)) ('sigma_M_LRG', np.float64(0.6502370962300064))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.57908288006497)) ('M_1_LRG', np.float64(14.051242087344058)) ('alpha_LRG', np.float64(1.0211950687662776)) ('f_sigv_LRG', np.float64(0.9027146121002085)) ('log_Mcent_LRG', np.float64(12.870144390590974)) ('sigma_M_LRG', np.float64(0.42607354462877983))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.456738050678673)) ('M_1_LRG', np.float64(13.849117110210264)) ('alpha_LRG', np.float64(1.115577898581647)) ('f_sigv_LRG', np.float64(0.9068258454814666)) ('log_Mcent_LRG', np.float64(12.834557117017694)) ('sigma_M_LRG', np.float64(0.5344137328602913))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.779694575625626)) ('M_1_LRG', np.float64(13.814572346273644)) ('alpha_LRG', np.float64(1.1771560101327951)) ('f_sigv_LRG', np.float64(0.7391221876306118)) ('log_Mcent_LRG', np.float64(12.807970403964678)) ('sigma_M_LRG', np.float64(0.40962567069261185))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.41877170958573)) ('M_1_LRG', np.float64(13.97275921749956)) ('alpha_LRG', np.float64(1.1360284188541707)) ('f_sigv_LRG', np.float64(0.9006578878711409)) ('log_Mcent_LRG', np.float64(12.940645956339825)) ('sigma_M_LRG', np.float64(0.6401736932683658))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.36358656040052)) ('M_1_LRG', np.float64(14.07125952792533)) ('alpha_LRG', np.float64(0.917923022015599)) ('f_sigv_LRG', np.float64(0.9039036879815237)) ('log_Mcent_LRG', np.float64(12.780798906055706)) ('sigma_M_LRG', np.float64(0.32881962460205805))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.762305972870813)) ('M_1_LRG', np.float64(14.101671034954812)) ('alpha_LRG', np.float64(0.8176991888289307)) ('f_sigv_LRG', np.float64(0.8514821198164807)) ('log_Mcent_LRG', np.float64(12.772489508031205)) ('sigma_M_LRG', np.float64(0.2813712480320907))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.929151705852924)) ('M_1_LRG', np.float64(14.073566165680916)) ('alpha_LRG', np.float64(0.8594098034280155)) ('f_sigv_LRG', np.float64(1.1210082425484944)) ('log_Mcent_LRG', np.float64(13.01198163064996)) ('sigma_M_LRG', np.float64(0.5163613139489381))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 35] ('M_0_LRG', np.float64(12.918428918620261)) ('M_1_LRG', np.float64(14.048731623782867)) ('alpha_LRG', np.float64(1.0461625208413927)) ('f_sigv_LRG', np.float64(0.7699336489702795)) ('log_Mcent_LRG', np.float64(12.957831420686633)) ('sigma_M_LRG', np.float64(0.503836155449492))
[Interation 35] chi2=2558.2979371554065
[Interation 35] chi2=1631.9904102590244
[Interation 35] chi2=3841.5796516648165
[Interation 35] chi2=2209.8879153451285
[Interation 35] chi2=638.8171472360598
[Interation 35] chi2=836.7006571996309
[Interation 35] chi2=982.7216000713788
[Interation 35] chi2=1135.2191137936923
[Interation 35] chi2=1138.5422776716566
[Interation 35] chi2=1904.7847245334683
[Interation 35] chi2=1217.3130501231174
[Interation 35] chi2=871.7294055225975
[Interation 37] ('M_0_LRG', np.float64(12.790363154371658)) ('M_1_LRG', np.float64(13.841419238097052)) ('alpha_LRG', np.float64(1.017578839667006)) ('f_sigv_LRG', np.float64(0.8791129028605918)) ('log_Mcent_LRG', np.float64(12.79175664620487)) ('sigma_M_LRG', np.float64(0.390760085140199))
[Interation 37] ('M_0_LRG', np.float64(12.7473815942516)) ('M_1_LRG', np.float64(13.849311685200181)) ('alpha_LRG', np.float64(1.0357870369938307)) ('f_sigv_LRG', np.float64(0.8884756751479931)) ('log_Mcent_LRG', np.float64(12.795043127087707)) ('sigma_M_LRG', np.float64(0.39508314914313725))
[Interation 37] ('M_0_LRG', np.float64(12.807215252618406)) ('M_1_LRG', np.float64(13.854563484412882)) ('alpha_LRG', np.float64(1.012104484789298)) ('f_sigv_LRG', np.float64(0.878718953762719)) ('log_Mcent_LRG', np.float64(12.818091364176475)) ('sigma_M_LRG', np.float64(0.42177868109074507))
[Interation 37] ('M_0_LRG', np.float64(12.81518270354845)) ('M_1_LRG', np.float64(13.831861487786794)) ('alpha_LRG', np.float64(0.9973290364017859)) ('f_sigv_LRG', np.float64(0.8921174802835686)) ('log_Mcent_LRG', np.float64(12.774949804083743)) ('sigma_M_LRG', np.float64(0.3639517589091822))
[Interation 37] chi2=436.08659837395646
[Interation 37] chi2=450.2508936676485
[Interation 37] chi2=402.95691144061954
[Interation 37] chi2=433.4843836555097
[Interation 36] ('M_0_LRG', np.float64(12.75678486658146)) ('M_1_LRG', np.float64(13.818422494925445)) ('alpha_LRG', np.float64(1.0301498280318282)) ('f_sigv_LRG', np.float64(0.8832459732044236)) ('log_Mcent_LRG', np.float64(12.747007613730403)) ('sigma_M_LRG', np.float64(0.3390662573308064))
[Interation 36] ('M_0_LRG', np.float64(12.916337670469195)) ('M_1_LRG', np.float64(13.776309590966775)) ('alpha_LRG', np.float64(0.9407827863335599)) ('f_sigv_LRG', np.float64(0.8859310029285)) ('log_Mcent_LRG', np.float64(12.738202508129172)) ('sigma_M_LRG', np.float64(0.33485594547158637))
[Interation 36] ('M_0_LRG', np.float64(12.797454380419135)) ('M_1_LRG', np.float64(13.845082423752695)) ('alpha_LRG', np.float64(1.0090225914662538)) ('f_sigv_LRG', np.float64(0.8913185259170935)) ('log_Mcent_LRG', np.float64(12.790167584637313)) ('sigma_M_LRG', np.float64(0.381225565020363))
[Interation 36] ('M_0_LRG', np.float64(12.860748335416844)) ('M_1_LRG', np.float64(13.807528548549762)) ('alpha_LRG', np.float64(0.977504773708107)) ('f_sigv_LRG', np.float64(0.8774818212778152)) ('log_Mcent_LRG', np.float64(12.76995503031047)) ('sigma_M_LRG', np.float64(0.3678684652113222))
[Interation 36] ('M_0_LRG', np.float64(12.851618950069893)) ('M_1_LRG', np.float64(13.805766913956068)) ('alpha_LRG', np.float64(0.9802812413915534)) ('f_sigv_LRG', np.float64(0.8828526773873615)) ('log_Mcent_LRG', np.float64(12.770894996015082)) ('sigma_M_LRG', np.float64(0.37491587520684877))
[Interation 36] ('M_0_LRG', np.float64(12.781421629060324)) ('M_1_LRG', np.float64(13.83418322624891)) ('alpha_LRG', np.float64(1.0264859031783997)) ('f_sigv_LRG', np.float64(0.8838720645090967)) ('log_Mcent_LRG', np.float64(12.78903484707238)) ('sigma_M_LRG', np.float64(0.39109161506576107))
[Interation 36] ('M_0_LRG', np.float64(12.778271859446555)) ('M_1_LRG', np.float64(13.82255099571866)) ('alpha_LRG', np.float64(1.0178498336542128)) ('f_sigv_LRG', np.float64(0.879905552033819)) ('log_Mcent_LRG', np.float64(12.76804487646083)) ('sigma_M_LRG', np.float64(0.3627096868155847))
[Interation 36] ('M_0_LRG', np.float64(12.799996893765481)) ('M_1_LRG', np.float64(13.842081020803526)) ('alpha_LRG', np.float64(1.0103022944670494)) ('f_sigv_LRG', np.float64(0.8931760595840779)) ('log_Mcent_LRG', np.float64(12.799374835592426)) ('sigma_M_LRG', np.float64(0.3956738756668754))
[Interation 36] ('M_0_LRG', np.float64(12.800627492612502)) ('M_1_LRG', np.float64(13.85954042736519)) ('alpha_LRG', np.float64(0.9993385236029695)) ('f_sigv_LRG', np.float64(0.8826763455204525)) ('log_Mcent_LRG', np.float64(12.818225092481642)) ('sigma_M_LRG', np.float64(0.4225498453874747))
[Interation 36] ('M_0_LRG', np.float64(12.789051225195545)) ('M_1_LRG', np.float64(13.87666912824568)) ('alpha_LRG', np.float64(1.0189374643377795)) ('f_sigv_LRG', np.float64(0.8712189965624197)) ('log_Mcent_LRG', np.float64(12.837974245027098)) ('sigma_M_LRG', np.float64(0.44355333123927476))
[Interation 36] ('M_0_LRG', np.float64(12.774874817026614)) ('M_1_LRG', np.float64(13.835656805074397)) ('alpha_LRG', np.float64(1.0185957566606996)) ('f_sigv_LRG', np.float64(0.8888289968684479)) ('log_Mcent_LRG', np.float64(12.775109581001463)) ('sigma_M_LRG', np.float64(0.3712943033078068))
[Interation 36] ('M_0_LRG', np.float64(12.784645411830143)) ('M_1_LRG', np.float64(13.815952893441827)) ('alpha_LRG', np.float64(1.0001410523291732)) ('f_sigv_LRG', np.float64(0.8866572306531759)) ('log_Mcent_LRG', np.float64(12.755000255542864)) ('sigma_M_LRG', np.float64(0.3534071720420153))
[Interation 36] chi2=413.0709061603626
[Interation 36] chi2=485.0784446285436
[Interation 36] chi2=432.62397018658265
[Interation 36] chi2=472.9020725950102
[Interation 36] chi2=406.7847057658581
[Interation 36] chi2=462.79723543762213
[Interation 36] chi2=401.20397736775584
[Interation 36] chi2=375.32951209021115
[Interation 36] chi2=397.5277607183364
[Interation 36] chi2=436.1297239650387
[Interation 36] chi2=429.90788852860936
[Interation 36] chi2=430.4566806596671
[Interation 38] ('M_0_LRG', np.float64(12.791295382232477)) ('M_1_LRG', np.float64(13.817840733569103)) ('alpha_LRG', np.float64(1.0196343006550457)) ('f_sigv_LRG', np.float64(0.8792542296022179)) ('log_Mcent_LRG', np.float64(12.764053565020122)) ('sigma_M_LRG', np.float64(0.3635461081940895))
[Interation 38] ('M_0_LRG', np.float64(12.834821711142657)) ('M_1_LRG', np.float64(13.780695550894261)) ('alpha_LRG', np.float64(0.98921685382738)) ('f_sigv_LRG', np.float64(0.8756910450447454)) ('log_Mcent_LRG', np.float64(12.73191731938644)) ('sigma_M_LRG', np.float64(0.3224959134432409))
[Interation 38] ('M_0_LRG', np.float64(12.78466459353319)) ('M_1_LRG', np.float64(13.83104623354601)) ('alpha_LRG', np.float64(1.0184602076522566)) ('f_sigv_LRG', np.float64(0.8788930120370497)) ('log_Mcent_LRG', np.float64(12.778312874512938)) ('sigma_M_LRG', np.float64(0.3773450842651629))
[Interation 38] ('M_0_LRG', np.float64(12.774869193214526)) ('M_1_LRG', np.float64(13.82421020491469)) ('alpha_LRG', np.float64(1.037783468449404)) ('f_sigv_LRG', np.float64(0.8652154463070831)) ('log_Mcent_LRG', np.float64(12.773565094402803)) ('sigma_M_LRG', np.float64(0.3779848212699624))
[Interation 38] chi2=482.6090770271358
[Interation 38] chi2=464.17761738083186
[Interation 38] chi2=379.35542539684167
[Interation 38] chi2=464.29045335353044
[Interation 37] ('M_0_LRG', np.float64(12.811683595544112)) ('M_1_LRG', np.float64(13.81579317378456)) ('alpha_LRG', np.float64(1.0000203175604907)) ('f_sigv_LRG', np.float64(0.8811189781184451)) ('log_Mcent_LRG', np.float64(12.767061780972089)) ('sigma_M_LRG', np.float64(0.36166725148382706))
[Interation 37] ('M_0_LRG', np.float64(12.7823315470373)) ('M_1_LRG', np.float64(13.825275621914882)) ('alpha_LRG', np.float64(1.0201223174092242)) ('f_sigv_LRG', np.float64(0.8801799514262758)) ('log_Mcent_LRG', np.float64(12.766644170478449)) ('sigma_M_LRG', np.float64(0.3612470021219358))
[Interation 37] ('M_0_LRG', np.float64(12.829984656857334)) ('M_1_LRG', np.float64(13.803792918220154)) ('alpha_LRG', np.float64(0.9890133303095682)) ('f_sigv_LRG', np.float64(0.8765322446530237)) ('log_Mcent_LRG', np.float64(12.764240460693516)) ('sigma_M_LRG', np.float64(0.3658958025708524))
[Interation 37] ('M_0_LRG', np.float64(12.825212008994379)) ('M_1_LRG', np.float64(13.785574192358363)) ('alpha_LRG', np.float64(0.9843550190895259)) ('f_sigv_LRG', np.float64(0.8874823537342637)) ('log_Mcent_LRG', np.float64(12.72824561105396)) ('sigma_M_LRG', np.float64(0.3189826376994113))
[Interation 37] ('M_0_LRG', np.float64(12.80049846540087)) ('M_1_LRG', np.float64(13.812190495629835)) ('alpha_LRG', np.float64(1.0091865259752382)) ('f_sigv_LRG', np.float64(0.8751462136865721)) ('log_Mcent_LRG', np.float64(12.764394450449327)) ('sigma_M_LRG', np.float64(0.3661609322473589))
[Interation 37] ('M_0_LRG', np.float64(12.789431845735814)) ('M_1_LRG', np.float64(13.842304435540521)) ('alpha_LRG', np.float64(1.0215560132647867)) ('f_sigv_LRG', np.float64(0.8786496923359797)) ('log_Mcent_LRG', np.float64(12.796585031439788)) ('sigma_M_LRG', np.float64(0.40077904754245663))
[Interation 37] ('M_0_LRG', np.float64(12.843569523474724)) ('M_1_LRG', np.float64(13.780517003146228)) ('alpha_LRG', np.float64(0.9774579761879134)) ('f_sigv_LRG', np.float64(0.8771684993433039)) ('log_Mcent_LRG', np.float64(12.736369300002066)) ('sigma_M_LRG', np.float64(0.3329378256136132))
[Interation 37] ('M_0_LRG', np.float64(12.824244642806466)) ('M_1_LRG', np.float64(13.800599510092862)) ('alpha_LRG', np.float64(0.9883322600622548)) ('f_sigv_LRG', np.float64(0.8737249014172177)) ('log_Mcent_LRG', np.float64(12.755902935691562)) ('sigma_M_LRG', np.float64(0.35762570673991745))
[Interation 37] ('M_0_LRG', np.float64(12.768410605131708)) ('M_1_LRG', np.float64(13.831012571841706)) ('alpha_LRG', np.float64(1.0360883869490207)) ('f_sigv_LRG', np.float64(0.8799607550255112)) ('log_Mcent_LRG', np.float64(12.774312890572453)) ('sigma_M_LRG', np.float64(0.3719334262371844))
[Interation 37] ('M_0_LRG', np.float64(12.806029769434682)) ('M_1_LRG', np.float64(13.812315877587057)) ('alpha_LRG', np.float64(1.0074486518844246)) ('f_sigv_LRG', np.float64(0.8762096300877074)) ('log_Mcent_LRG', np.float64(12.762931064102181)) ('sigma_M_LRG', np.float64(0.36284347175288423))
[Interation 37] ('M_0_LRG', np.float64(12.832882967006293)) ('M_1_LRG', np.float64(13.783478123512747)) ('alpha_LRG', np.float64(0.9777494695739869)) ('f_sigv_LRG', np.float64(0.8863844537047341)) ('log_Mcent_LRG', np.float64(12.729966593387436)) ('sigma_M_LRG', np.float64(0.32405004506809854))
[Interation 37] ('M_0_LRG', np.float64(12.784193682865833)) ('M_1_LRG', np.float64(13.815698689255017)) ('alpha_LRG', np.float64(1.020699695089925)) ('f_sigv_LRG', np.float64(0.8769050129071235)) ('log_Mcent_LRG', np.float64(12.762650140282165)) ('sigma_M_LRG', np.float64(0.36102839451119817))
[Interation 37] chi2=442.22250591451717
[Interation 37] chi2=379.9631123994668
[Interation 37] chi2=454.16462679028587
[Interation 37] chi2=432.20142863637545
[Interation 37] chi2=445.10770562710945
[Interation 37] chi2=436.04375616190595
[Interation 37] chi2=440.5758404875866
[Interation 37] chi2=478.53009304639926
[Interation 37] chi2=374.26227666502723
[Interation 37] chi2=431.80456739273586
[Interation 37] chi2=388.12399066186725
[Interation 37] chi2=420.1404531262172
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_18.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_18.npy
Set number of threads to 32
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.788044470177065)) ('M_1_LRG', np.float64(13.817347777915106)) ('alpha_LRG', np.float64(1.0232412614566084)) ('f_sigv_LRG', np.float64(0.8761647793548686)) ('log_Mcent_LRG', np.float64(12.767855165151817)) ('sigma_M_LRG', np.float64(0.36487910238712573))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.32634520530700684
Start satellite assignement
Satellite assignement done 0.07307934761047363
LRG mock catalogue done 0.15309715270996094
610162 central galaxies, 89174 satellites, fraction of satellite 0.13 
Done overall time  LRG 0.662006139755249
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_18.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:22
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:22
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load rppi measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 39] ('M_0_LRG', np.float64(12.710210984549724)) ('M_1_LRG', np.float64(13.955500672388036)) ('alpha_LRG', np.float64(1.0706226623621802)) ('f_sigv_LRG', np.float64(0.9038606665958886)) ('log_Mcent_LRG', np.float64(12.888127986044356)) ('sigma_M_LRG', np.float64(0.46084356025283457))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 39] ('M_0_LRG', np.float64(12.619646916541852)) ('M_1_LRG', np.float64(13.876019041747222)) ('alpha_LRG', np.float64(1.16537525287474)) ('f_sigv_LRG', np.float64(0.9185597683484414)) ('log_Mcent_LRG', np.float64(12.811576628267051)) ('sigma_M_LRG', np.float64(0.4061184296290282))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 39] ('M_0_LRG', np.float64(12.831872228744672)) ('M_1_LRG', np.float64(13.883596043360422)) ('alpha_LRG', np.float64(0.9531114186817848)) ('f_sigv_LRG', np.float64(0.8777695755847976)) ('log_Mcent_LRG', np.float64(12.842713163050433)) ('sigma_M_LRG', np.float64(0.4368351642796251))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 39] ('M_0_LRG', np.float64(12.724560272506121)) ('M_1_LRG', np.float64(13.915498867661059)) ('alpha_LRG', np.float64(1.0238262021281705)) ('f_sigv_LRG', np.float64(0.8985956882406343)) ('log_Mcent_LRG', np.float64(12.89249541503623)) ('sigma_M_LRG', np.float64(0.49005351988841167))
[Interation 39] chi2=479.8688793337467
[Interation 39] chi2=545.866508358066
[Interation 39] chi2=457.3514328116332
[Interation 39] chi2=449.97160420358415
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.745888921350792)) ('M_1_LRG', np.float64(13.918268407920754)) ('alpha_LRG', np.float64(1.05787980452825)) ('f_sigv_LRG', np.float64(0.8868998811772305)) ('log_Mcent_LRG', np.float64(12.872468445646563)) ('sigma_M_LRG', np.float64(0.4601609792478431))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.824465995756354)) ('M_1_LRG', np.float64(13.880837718137853)) ('alpha_LRG', np.float64(0.9912681626330916)) ('f_sigv_LRG', np.float64(0.8613534852407)) ('log_Mcent_LRG', np.float64(12.8552861348989)) ('sigma_M_LRG', np.float64(0.46662477955986265))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.671841531092587)) ('M_1_LRG', np.float64(13.872043482223324)) ('alpha_LRG', np.float64(1.093737984803137)) ('f_sigv_LRG', np.float64(0.8919346008935315)) ('log_Mcent_LRG', np.float64(12.833547751666295)) ('sigma_M_LRG', np.float64(0.4455898657088758))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.778523863071692)) ('M_1_LRG', np.float64(13.907621557349097)) ('alpha_LRG', np.float64(0.9813220297245113)) ('f_sigv_LRG', np.float64(0.9034641333088254)) ('log_Mcent_LRG', np.float64(12.867143012471761)) ('sigma_M_LRG', np.float64(0.46398800818750907))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.770275790744265)) ('M_1_LRG', np.float64(13.915224546647252)) ('alpha_LRG', np.float64(1.0468192292930543)) ('f_sigv_LRG', np.float64(0.858691901365009)) ('log_Mcent_LRG', np.float64(12.890874836086176)) ('sigma_M_LRG', np.float64(0.4894892578430275))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.691271847086906)) ('M_1_LRG', np.float64(13.98304221421777)) ('alpha_LRG', np.float64(1.0894544491573377)) ('f_sigv_LRG', np.float64(0.8760681848531328)) ('log_Mcent_LRG', np.float64(12.94491379847397)) ('sigma_M_LRG', np.float64(0.5172043855454461))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.79634231932541)) ('M_1_LRG', np.float64(13.942806508493646)) ('alpha_LRG', np.float64(1.0383509505216602)) ('f_sigv_LRG', np.float64(0.8625602246466251)) ('log_Mcent_LRG', np.float64(12.933898176723181)) ('sigma_M_LRG', np.float64(0.5311828651016328))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.598495987372363)) ('M_1_LRG', np.float64(13.996268432428332)) ('alpha_LRG', np.float64(1.064808876705979)) ('f_sigv_LRG', np.float64(0.9261474821018258)) ('log_Mcent_LRG', np.float64(12.924888934250394)) ('sigma_M_LRG', np.float64(0.5040394051410105))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.620595817905281)) ('M_1_LRG', np.float64(13.94682160689444)) ('alpha_LRG', np.float64(1.082496348032104)) ('f_sigv_LRG', np.float64(0.9077081370805001)) ('log_Mcent_LRG', np.float64(12.86832385642737)) ('sigma_M_LRG', np.float64(0.4485237473846751))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.770326710208757)) ('M_1_LRG', np.float64(13.944271889318918)) ('alpha_LRG', np.float64(1.0626125737817718)) ('f_sigv_LRG', np.float64(0.8940045151121666)) ('log_Mcent_LRG', np.float64(12.90470271928521)) ('sigma_M_LRG', np.float64(0.4876892775446969))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.632265437716953)) ('M_1_LRG', np.float64(13.919293583626354)) ('alpha_LRG', np.float64(1.103387022262491)) ('f_sigv_LRG', np.float64(0.8880899354966739)) ('log_Mcent_LRG', np.float64(12.872750944966555)) ('sigma_M_LRG', np.float64(0.4712045763630092))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 38] ('M_0_LRG', np.float64(12.837147877349429)) ('M_1_LRG', np.float64(13.91987399348178)) ('alpha_LRG', np.float64(1.0210061116914144)) ('f_sigv_LRG', np.float64(0.855942928000354)) ('log_Mcent_LRG', np.float64(12.911591734224778)) ('sigma_M_LRG', np.float64(0.5109363402733378))
[Interation 38] chi2=411.67098214438994
[Interation 38] chi2=444.51239444924073
[Interation 38] chi2=451.8252940610154
[Interation 38] chi2=452.8683078636988
[Interation 38] chi2=488.9199303482631
[Interation 38] chi2=450.6317529619018
[Interation 38] chi2=486.06859380503613
[Interation 38] chi2=453.5707006250365
[Interation 38] chi2=436.6604681311087
[Interation 38] chi2=446.1542680850151
[Interation 38] chi2=442.1492526849155
[Interation 38] chi2=449.0269729104935
[Interation 40] ('M_0_LRG', np.float64(12.816850201255962)) ('M_1_LRG', np.float64(13.908469893520582)) ('alpha_LRG', np.float64(1.022751993255546)) ('f_sigv_LRG', np.float64(0.8718667106296811)) ('log_Mcent_LRG', np.float64(12.884985388811742)) ('sigma_M_LRG', np.float64(0.4879378610045249))
[Interation 40] ('M_0_LRG', np.float64(12.873703911645975)) ('M_1_LRG', np.float64(13.914419159502572)) ('alpha_LRG', np.float64(0.9829093093856727)) ('f_sigv_LRG', np.float64(0.8633864302514453)) ('log_Mcent_LRG', np.float64(12.898989016791239)) ('sigma_M_LRG', np.float64(0.49405888580308754))
[Interation 40] ('M_0_LRG', np.float64(12.827461831511016)) ('M_1_LRG', np.float64(13.917672755260353)) ('alpha_LRG', np.float64(1.0326659449751254)) ('f_sigv_LRG', np.float64(0.8672113088909161)) ('log_Mcent_LRG', np.float64(12.905504639400183)) ('sigma_M_LRG', np.float64(0.505837585563503))
[Interation 40] ('M_0_LRG', np.float64(12.797538654622551)) ('M_1_LRG', np.float64(13.943304403563367)) ('alpha_LRG', np.float64(1.039318806400477)) ('f_sigv_LRG', np.float64(0.8634539379131951)) ('log_Mcent_LRG', np.float64(12.934585393552345)) ('sigma_M_LRG', np.float64(0.5325259098733613))
[Interation 40] chi2=392.260110515151
[Interation 40] chi2=419.20285892769846
[Interation 40] chi2=419.6455064913151
[Interation 40] chi2=427.9061126801363
[Interation 39] ('M_0_LRG', np.float64(12.815442560830705)) ('M_1_LRG', np.float64(13.906240755451732)) ('alpha_LRG', np.float64(1.0166260505513285)) ('f_sigv_LRG', np.float64(0.8690263125886374)) ('log_Mcent_LRG', np.float64(12.88028723217565)) ('sigma_M_LRG', np.float64(0.4780628535151633))
[Interation 39] ('M_0_LRG', np.float64(12.803220616821797)) ('M_1_LRG', np.float64(13.952910899534109)) ('alpha_LRG', np.float64(1.0218717764308745)) ('f_sigv_LRG', np.float64(0.873641700093881)) ('log_Mcent_LRG', np.float64(12.943795767153045)) ('sigma_M_LRG', np.float64(0.535980517689092))
[Interation 39] ('M_0_LRG', np.float64(12.795626256203693)) ('M_1_LRG', np.float64(13.923020137142805)) ('alpha_LRG', np.float64(1.0281719355124448)) ('f_sigv_LRG', np.float64(0.8824259526162277)) ('log_Mcent_LRG', np.float64(12.901384275401112)) ('sigma_M_LRG', np.float64(0.4977061866815466))
[Interation 39] ('M_0_LRG', np.float64(12.772959712413083)) ('M_1_LRG', np.float64(13.907226338831716)) ('alpha_LRG', np.float64(1.0484972058936233)) ('f_sigv_LRG', np.float64(0.8675554887117678)) ('log_Mcent_LRG', np.float64(12.891387355408778)) ('sigma_M_LRG', np.float64(0.49720890803980294))
[Interation 39] ('M_0_LRG', np.float64(12.851952192434345)) ('M_1_LRG', np.float64(13.91527360622217)) ('alpha_LRG', np.float64(1.0000134498969144)) ('f_sigv_LRG', np.float64(0.8732200358380395)) ('log_Mcent_LRG', np.float64(12.897823521530745)) ('sigma_M_LRG', np.float64(0.4944552893495948))
[Interation 39] ('M_0_LRG', np.float64(12.764692682661194)) ('M_1_LRG', np.float64(13.913432389957968)) ('alpha_LRG', np.float64(1.046112909334503)) ('f_sigv_LRG', np.float64(0.8665183539499101)) ('log_Mcent_LRG', np.float64(12.881054908127043)) ('sigma_M_LRG', np.float64(0.4827470364330988))
[Interation 39] ('M_0_LRG', np.float64(12.677073447514324)) ('M_1_LRG', np.float64(13.908861673786895)) ('alpha_LRG', np.float64(1.1014220504588748)) ('f_sigv_LRG', np.float64(0.8762947049758711)) ('log_Mcent_LRG', np.float64(12.87508939369941)) ('sigma_M_LRG', np.float64(0.4805882249386354))
[Interation 39] ('M_0_LRG', np.float64(12.762078030390825)) ('M_1_LRG', np.float64(13.921996711053167)) ('alpha_LRG', np.float64(1.0531727078527366)) ('f_sigv_LRG', np.float64(0.8804509132591414)) ('log_Mcent_LRG', np.float64(12.90240476157197)) ('sigma_M_LRG', np.float64(0.5019529808268397))
[Interation 39] ('M_0_LRG', np.float64(12.720392618059881)) ('M_1_LRG', np.float64(13.903488399132872)) ('alpha_LRG', np.float64(1.0689126594541132)) ('f_sigv_LRG', np.float64(0.8726938221921683)) ('log_Mcent_LRG', np.float64(12.85920941419796)) ('sigma_M_LRG', np.float64(0.46199623230629394))
[Interation 39] ('M_0_LRG', np.float64(12.811564818951146)) ('M_1_LRG', np.float64(13.936306815093953)) ('alpha_LRG', np.float64(1.0130306915680531)) ('f_sigv_LRG', np.float64(0.8757547630421221)) ('log_Mcent_LRG', np.float64(12.916881573652159)) ('sigma_M_LRG', np.float64(0.5102943522595789))
[Interation 39] ('M_0_LRG', np.float64(12.71978929024655)) ('M_1_LRG', np.float64(13.904351618663686)) ('alpha_LRG', np.float64(1.0620159252934895)) ('f_sigv_LRG', np.float64(0.8886114359725155)) ('log_Mcent_LRG', np.float64(12.8525550361592)) ('sigma_M_LRG', np.float64(0.45207810473180954))
[Interation 39] ('M_0_LRG', np.float64(12.708058218878222)) ('M_1_LRG', np.float64(13.912233876780228)) ('alpha_LRG', np.float64(1.0827067652311937)) ('f_sigv_LRG', np.float64(0.8786172585299924)) ('log_Mcent_LRG', np.float64(12.870686999842063)) ('sigma_M_LRG', np.float64(0.4701287315341356))
[Interation 39] chi2=405.8179499264357
[Interation 39] chi2=446.98246294660885
[Interation 39] chi2=426.0955523590812
[Interation 39] chi2=497.48617582955876
[Interation 39] chi2=427.6825539490582
[Interation 39] chi2=395.4168637723279
[Interation 39] chi2=484.4236665507768
[Interation 39] chi2=445.5675680051079
[Interation 39] chi2=503.84602253976675
[Interation 39] chi2=437.83735560436037
[Interation 39] chi2=460.83305136362065
[Interation 39] chi2=363.0567575215224
Load data vector for LRG
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_19.npy
Set number of threads to 32
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_19.npy
Set number of threads to 32
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.81036324678576)) ('M_1_LRG', np.float64(13.90226969722721)) ('alpha_LRG', np.float64(1.02229078833142)) ('f_sigv_LRG', np.float64(0.8669017161795183)) ('log_Mcent_LRG', np.float64(12.874031648312837)) ('sigma_M_LRG', np.float64(0.4753318079974629))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.3656339645385742
Start satellite assignement
Satellite assignement done 0.06841540336608887
LRG mock catalogue done 0.14381647109985352
617502 central galaxies, 82317 satellites, fraction of satellite 0.12 
Done overall time  LRG 0.6879851818084717
[START HOD FITTING]: /pscratch/sd/s/shengyu/galaxies/hod/fit/results/minimiser/LRG/fitmini_LRG_z0.4-0.6_standard_19.npy
Set number of threads to 32
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:24
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Initialize Abacus c000 cosmology
Load data vector for LRG
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:25
Initialize Abacus c000 cosmology
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load Compaso cat from /global/cfs/cdirs/desi/cosmosim/Abacus/AbacusSummit_highbase_c000_ph100/halos/z0.500 ...
Done took 00:00:21
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Compute columns...
Done took  00:00:00
AbacusSummit_highbase_c000_ph100 at 0.5 loaded, took 00:00:22
Load smu measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Initialize Abacus c000 cosmology
Load data vector for LRG
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load rppi measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load correlation matrix for LRG at z0.5 ...
Load smu measurements at z0.4-0.6 for LRG...
Load correlation matrix for LRG at z0.5 ...
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 41] ('M_0_LRG', np.float64(12.552960389874231)) ('M_1_LRG', np.float64(13.471288018183268)) ('alpha_LRG', np.float64(1.0385706519399058)) ('f_sigv_LRG', np.float64(0.9904577743608813)) ('log_Mcent_LRG', np.float64(12.706476822291817)) ('sigma_M_LRG', np.float64(0.5209139669107766))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 41] ('M_0_LRG', np.float64(12.507229531232975)) ('M_1_LRG', np.float64(13.492629476692269)) ('alpha_LRG', np.float64(0.9725032778239724)) ('f_sigv_LRG', np.float64(0.9850912772894374)) ('log_Mcent_LRG', np.float64(12.711495388878602)) ('sigma_M_LRG', np.float64(0.558622774310691))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 41] ('M_0_LRG', np.float64(12.507352195598386)) ('M_1_LRG', np.float64(13.50565473489022)) ('alpha_LRG', np.float64(1.0028991405508212)) ('f_sigv_LRG', np.float64(0.9264549715879643)) ('log_Mcent_LRG', np.float64(12.764488547195647)) ('sigma_M_LRG', np.float64(0.4889344776677148))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 41] ('M_0_LRG', np.float64(12.504420196465693)) ('M_1_LRG', np.float64(13.601097518499486)) ('alpha_LRG', np.float64(1.0661256193956956)) ('f_sigv_LRG', np.float64(1.0558637094280534)) ('log_Mcent_LRG', np.float64(12.752302487828576)) ('sigma_M_LRG', np.float64(0.5110438493545858))
[Interation 41] chi2=4102.838482248356
[Interation 41] chi2=3306.7685574099323
[Interation 41] chi2=5878.243447191818
[Interation 41] chi2=2889.7751670871075
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.547868701051273)) ('M_1_LRG', np.float64(14.079906432191036)) ('alpha_LRG', np.float64(0.967965208845848)) ('f_sigv_LRG', np.float64(1.1256073424403852)) ('log_Mcent_LRG', np.float64(12.878535783174216)) ('sigma_M_LRG', np.float64(0.4550382710466772))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.397187119827363)) ('M_1_LRG', np.float64(13.92129255779664)) ('alpha_LRG', np.float64(1.2729356151783562)) ('f_sigv_LRG', np.float64(0.7046087599187261)) ('log_Mcent_LRG', np.float64(12.853867310420725)) ('sigma_M_LRG', np.float64(0.5074808733207687))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.824735347170472)) ('M_1_LRG', np.float64(13.69801867322342)) ('alpha_LRG', np.float64(1.0363660130304868)) ('f_sigv_LRG', np.float64(0.7641454439636577)) ('log_Mcent_LRG', np.float64(12.712661373123057)) ('sigma_M_LRG', np.float64(0.3877030357226961))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.52552084821128)) ('M_1_LRG', np.float64(13.80117185823468)) ('alpha_LRG', np.float64(1.117205940419849)) ('f_sigv_LRG', np.float64(0.6558355611291127)) ('log_Mcent_LRG', np.float64(12.855297861683258)) ('sigma_M_LRG', np.float64(0.6159023473660382))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.78569595272387)) ('M_1_LRG', np.float64(14.06118486408375)) ('alpha_LRG', np.float64(1.2308211790705799)) ('f_sigv_LRG', np.float64(0.650076260462056)) ('log_Mcent_LRG', np.float64(12.979891652615727)) ('sigma_M_LRG', np.float64(0.5094743323135302))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.589331360651414)) ('M_1_LRG', np.float64(13.958955302670393)) ('alpha_LRG', np.float64(1.074025929179875)) ('f_sigv_LRG', np.float64(0.8945546071450243)) ('log_Mcent_LRG', np.float64(12.830236712688672)) ('sigma_M_LRG', np.float64(0.45706463324129254))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.571640827720206)) ('M_1_LRG', np.float64(13.981608556649972)) ('alpha_LRG', np.float64(1.0105092346218436)) ('f_sigv_LRG', np.float64(1.0495223132357305)) ('log_Mcent_LRG', np.float64(12.760600987994938)) ('sigma_M_LRG', np.float64(0.2496556563914743))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.56810846630431)) ('M_1_LRG', np.float64(13.991618431257535)) ('alpha_LRG', np.float64(1.2088860896828644)) ('f_sigv_LRG', np.float64(0.9325452736622923)) ('log_Mcent_LRG', np.float64(12.808317687345971)) ('sigma_M_LRG', np.float64(0.2977435086360115))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.58834482006618)) ('M_1_LRG', np.float64(14.015186130667036)) ('alpha_LRG', np.float64(0.8820591141449561)) ('f_sigv_LRG', np.float64(0.7885437384908496)) ('log_Mcent_LRG', np.float64(12.916680596042921)) ('sigma_M_LRG', np.float64(0.530958663378941))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.575760582740116)) ('M_1_LRG', np.float64(14.082863461462255)) ('alpha_LRG', np.float64(1.1047487314375568)) ('f_sigv_LRG', np.float64(0.9733622269145876)) ('log_Mcent_LRG', np.float64(12.901280822267461)) ('sigma_M_LRG', np.float64(0.47421515284107946))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.573208878031686)) ('M_1_LRG', np.float64(14.015984980403221)) ('alpha_LRG', np.float64(0.9796105948781518)) ('f_sigv_LRG', np.float64(1.0521213401860434)) ('log_Mcent_LRG', np.float64(12.858185873009814)) ('sigma_M_LRG', np.float64(0.4229485626811244))
Priors: ('M_0_LRG', [12.5, 13.5]) ('M_1_LRG', [13, 14.5]) ('alpha_LRG', [0.5, 1.5]) ('f_sigv_LRG', [0.5, 1.5]) ('log_Mcent_LRG', [12.4, 13.5]) ('sigma_M_LRG', [0.05, 1])
First point: ('M_0_LRG', 12.5) ('M_1_LRG', 13.5) ('alpha_LRG', 1) ('f_sigv_LRG', 1) ('log_Mcent_LRG', 12.75) ('sigma_M_LRG', 0.5)
[Interation 40] ('M_0_LRG', np.float64(12.45531024082223)) ('M_1_LRG', np.float64(13.894800557905848)) ('alpha_LRG', np.float64(1.0582596302441643)) ('f_sigv_LRG', np.float64(0.795200704077453)) ('log_Mcent_LRG', np.float64(12.744200075904272)) ('sigma_M_LRG', np.float64(0.3355396890874295))
[Interation 40] chi2=942.044007614602
[Interation 40] chi2=1454.0190877317486
[Interation 40] chi2=730.7479889356356
[Interation 40] chi2=630.5416067190495
[Interation 40] chi2=1591.564261971028
[Interation 40] chi2=690.7596252777587
[Interation 40] chi2=702.6207673799566
[Interation 40] chi2=933.513076944788
[Interation 40] chi2=1128.814639162217
[Interation 40] chi2=1476.3386757289195
[Interation 40] chi2=568.9952697708715
[Interation 40] chi2=931.1956714824504
[Interation 42] ('M_0_LRG', np.float64(12.759929196873196)) ('M_1_LRG', np.float64(13.844112540104629)) ('alpha_LRG', np.float64(1.026869164646159)) ('f_sigv_LRG', np.float64(0.9040438627422264)) ('log_Mcent_LRG', np.float64(12.783101107200919)) ('sigma_M_LRG', np.float64(0.3773525217695072))
[Interation 42] ('M_0_LRG', np.float64(12.797431491424833)) ('M_1_LRG', np.float64(13.8680381060489)) ('alpha_LRG', np.float64(1.0103439504206804)) ('f_sigv_LRG', np.float64(0.8787842242120252)) ('log_Mcent_LRG', np.float64(12.827880246281747)) ('sigma_M_LRG', np.float64(0.4314400862392356))
[Interation 42] ('M_0_LRG', np.float64(13.03083788895805)) ('M_1_LRG', np.float64(13.812326758621586)) ('alpha_LRG', np.float64(0.8519318984170506)) ('f_sigv_LRG', np.float64(0.8849343876536091)) ('log_Mcent_LRG', np.float64(12.818959506660928)) ('sigma_M_LRG', np.float64(0.4333145589034078))
[Interation 42] ('M_0_LRG', np.float64(12.759446315686306)) ('M_1_LRG', np.float64(13.87210740437899)) ('alpha_LRG', np.float64(1.01280529971924)) ('f_sigv_LRG', np.float64(0.8912001681762918)) ('log_Mcent_LRG', np.float64(12.809323279554643)) ('sigma_M_LRG', np.float64(0.4063793302837626))
[Interation 42] chi2=433.6062346267658
[Interation 42] chi2=448.61496056524385
[Interation 42] chi2=486.9101208362905
[Interation 42] chi2=434.85469800860386
[Interation 41] ('M_0_LRG', np.float64(12.7743566993995)) ('M_1_LRG', np.float64(13.821471485959924)) ('alpha_LRG', np.float64(1.0336958011641757)) ('f_sigv_LRG', np.float64(0.8940879377446374)) ('log_Mcent_LRG', np.float64(12.764441424560529)) ('sigma_M_LRG', np.float64(0.3649473109989805))
[Interation 41] ('M_0_LRG', np.float64(12.952615916439202)) ('M_1_LRG', np.float64(13.818840770600602)) ('alpha_LRG', np.float64(0.9159154671150098)) ('f_sigv_LRG', np.float64(0.8732624736572425)) ('log_Mcent_LRG', np.float64(12.800432440960394)) ('sigma_M_LRG', np.float64(0.4025581779745665))
[Interation 41] ('M_0_LRG', np.float64(12.830371885270683)) ('M_1_LRG', np.float64(13.857591374391939)) ('alpha_LRG', np.float64(0.979917697018861)) ('f_sigv_LRG', np.float64(0.8919935086808144)) ('log_Mcent_LRG', np.float64(12.814744491669199)) ('sigma_M_LRG', np.float64(0.4117993246196884))
[Interation 41] ('M_0_LRG', np.float64(12.829142004714791)) ('M_1_LRG', np.float64(13.837638927602754)) ('alpha_LRG', np.float64(0.9979223181490275)) ('f_sigv_LRG', np.float64(0.8752220521428222)) ('log_Mcent_LRG', np.float64(12.787863005858181)) ('sigma_M_LRG', np.float64(0.3840584829673097))
[Interation 41] ('M_0_LRG', np.float64(12.846631633383033)) ('M_1_LRG', np.float64(13.851235545798435)) ('alpha_LRG', np.float64(0.9691542324407753)) ('f_sigv_LRG', np.float64(0.8975514561626983)) ('log_Mcent_LRG', np.float64(12.80415532282331)) ('sigma_M_LRG', np.float64(0.39556071601747433))
[Interation 41] ('M_0_LRG', np.float64(12.825194766554661)) ('M_1_LRG', np.float64(13.859413008813702)) ('alpha_LRG', np.float64(0.976793475831229)) ('f_sigv_LRG', np.float64(0.8824218602348444)) ('log_Mcent_LRG', np.float64(12.818124739455342)) ('sigma_M_LRG', np.float64(0.415640053252495))
[Interation 41] ('M_0_LRG', np.float64(12.8288179978186)) ('M_1_LRG', np.float64(13.833984232429772)) ('alpha_LRG', np.float64(0.9980853873506423)) ('f_sigv_LRG', np.float64(0.8784906582895518)) ('log_Mcent_LRG', np.float64(12.79290358824473)) ('sigma_M_LRG', np.float64(0.3954984584032031))
[Interation 41] ('M_0_LRG', np.float64(12.824908235368436)) ('M_1_LRG', np.float64(13.848844985385258)) ('alpha_LRG', np.float64(0.9878141345102999)) ('f_sigv_LRG', np.float64(0.8892023408422816)) ('log_Mcent_LRG', np.float64(12.807539825599596)) ('sigma_M_LRG', np.float64(0.4063533945007506))
[Interation 41] ('M_0_LRG', np.float64(12.836209039185697)) ('M_1_LRG', np.float64(13.842923788815735)) ('alpha_LRG', np.float64(0.9813723675701531)) ('f_sigv_LRG', np.float64(0.8858750915737832)) ('log_Mcent_LRG', np.float64(12.79923408989797)) ('sigma_M_LRG', np.float64(0.39837587179668965))
[Interation 41] ('M_0_LRG', np.float64(12.91293843724658)) ('M_1_LRG', np.float64(13.864383749507859)) ('alpha_LRG', np.float64(0.9323734184455303)) ('f_sigv_LRG', np.float64(0.8805413171147999)) ('log_Mcent_LRG', np.float64(12.839986048733595)) ('sigma_M_LRG', np.float64(0.43761420386797995))
[Interation 41] ('M_0_LRG', np.float64(12.80454861911271)) ('M_1_LRG', np.float64(13.853035517651154)) ('alpha_LRG', np.float64(1.0023792471900295)) ('f_sigv_LRG', np.float64(0.8886988548857262)) ('log_Mcent_LRG', np.float64(12.804631170268548)) ('sigma_M_LRG', np.float64(0.405583027904637))
[Interation 41] ('M_0_LRG', np.float64(12.851770616779264)) ('M_1_LRG', np.float64(13.845995068549248)) ('alpha_LRG', np.float64(0.978498843628689)) ('f_sigv_LRG', np.float64(0.8819310216215984)) ('log_Mcent_LRG', np.float64(12.815481023220388)) ('sigma_M_LRG', np.float64(0.41785394772084866))
[Interation 41] chi2=480.16479043910954
[Interation 41] chi2=392.34175500833044
[Interation 41] chi2=433.52732148069396
[Interation 41] chi2=356.1952221843035
[Interation 41] chi2=398.14835590130747
[Interation 41] chi2=428.66854576495587
[Interation 41] chi2=495.6418928817045
[Interation 41] chi2=455.7063790083767
[Interation 41] chi2=463.6274435309942
[Interation 41] chi2=448.14284321658
[Interation 41] chi2=443.5615878700456
[Interation 41] chi2=473.20310433827717
[Interation 43] ('M_0_LRG', np.float64(12.8417326872542)) ('M_1_LRG', np.float64(13.83419820548162)) ('alpha_LRG', np.float64(0.9860556669920272)) ('f_sigv_LRG', np.float64(0.8820525776885197)) ('log_Mcent_LRG', np.float64(12.794345435654549)) ('sigma_M_LRG', np.float64(0.39653711846584805))
[Interation 43] ('M_0_LRG', np.float64(12.846616927364659)) ('M_1_LRG', np.float64(13.848698524518547)) ('alpha_LRG', np.float64(0.9803910705501013)) ('f_sigv_LRG', np.float64(0.884228506504947)) ('log_Mcent_LRG', np.float64(12.810020883919782)) ('sigma_M_LRG', np.float64(0.4085839726585767))
[Interation 43] ('M_0_LRG', np.float64(12.844869151055114)) ('M_1_LRG', np.float64(13.836022027344052)) ('alpha_LRG', np.float64(0.98683183464607)) ('f_sigv_LRG', np.float64(0.8794835460042008)) ('log_Mcent_LRG', np.float64(12.798696437524319)) ('sigma_M_LRG', np.float64(0.39979685693493106))
[Interation 43] ('M_0_LRG', np.float64(12.847213879491525)) ('M_1_LRG', np.float64(13.85028412698146)) ('alpha_LRG', np.float64(0.9771380614082266)) ('f_sigv_LRG', np.float64(0.8811728695418077)) ('log_Mcent_LRG', np.float64(12.813010479746406)) ('sigma_M_LRG', np.float64(0.4134351197249524))
[Interation 43] chi2=408.4856404158933
[Interation 43] chi2=336.08247644003467
[Interation 43] chi2=377.34629298805453
[Interation 43] chi2=380.1885048662689
[Interation 42] ('M_0_LRG', np.float64(12.84738780416157)) ('M_1_LRG', np.float64(13.830996182498128)) ('alpha_LRG', np.float64(0.9796722556801296)) ('f_sigv_LRG', np.float64(0.8844478018406723)) ('log_Mcent_LRG', np.float64(12.789915083027745)) ('sigma_M_LRG', np.float64(0.39094260495188804))
[Interation 42] ('M_0_LRG', np.float64(12.845566697398452)) ('M_1_LRG', np.float64(13.845502660072523)) ('alpha_LRG', np.float64(0.9830210579052304)) ('f_sigv_LRG', np.float64(0.887759444392502)) ('log_Mcent_LRG', np.float64(12.804050865891263)) ('sigma_M_LRG', np.float64(0.40264992169121566))
[Interation 42] ('M_0_LRG', np.float64(12.848083596859786)) ('M_1_LRG', np.float64(13.844642718961234)) ('alpha_LRG', np.float64(0.9817096316069333)) ('f_sigv_LRG', np.float64(0.8880707959052729)) ('log_Mcent_LRG', np.float64(12.804377350602538)) ('sigma_M_LRG', np.float64(0.4031838442760478))
[Interation 42] ('M_0_LRG', np.float64(12.847440156424733)) ('M_1_LRG', np.float64(13.847086998845617)) ('alpha_LRG', np.float64(0.981270361600162)) ('f_sigv_LRG', np.float64(0.8878099017713819)) ('log_Mcent_LRG', np.float64(12.808469203450336)) ('sigma_M_LRG', np.float64(0.4068782150475889))
[Interation 42] ('M_0_LRG', np.float64(12.847419451304946)) ('M_1_LRG', np.float64(13.849225616099089)) ('alpha_LRG', np.float64(0.9786470930946426)) ('f_sigv_LRG', np.float64(0.8923890862044197)) ('log_Mcent_LRG', np.float64(12.812682118881817)) ('sigma_M_LRG', np.float64(0.4118904223986934))
[Interation 42] ('M_0_LRG', np.float64(12.847633286414208)) ('M_1_LRG', np.float64(13.836865009570007)) ('alpha_LRG', np.float64(0.9757534257703548)) ('f_sigv_LRG', np.float64(0.8795107205731915)) ('log_Mcent_LRG', np.float64(12.795033740141374)) ('sigma_M_LRG', np.float64(0.39505013065864025))
[Interation 42] ('M_0_LRG', np.float64(12.846002345814757)) ('M_1_LRG', np.float64(13.863923721573617)) ('alpha_LRG', np.float64(0.9816502347435212)) ('f_sigv_LRG', np.float64(0.8887925543612791)) ('log_Mcent_LRG', np.float64(12.831223062131931)) ('sigma_M_LRG', np.float64(0.4321691586603157))
[Interation 42] ('M_0_LRG', np.float64(12.845448900837855)) ('M_1_LRG', np.float64(13.835749503996583)) ('alpha_LRG', np.float64(0.9833116870326343)) ('f_sigv_LRG', np.float64(0.8833657079020263)) ('log_Mcent_LRG', np.float64(12.79179610166222)) ('sigma_M_LRG', np.float64(0.38865359592453486))
[Interation 42] ('M_0_LRG', np.float64(12.844518326135281)) ('M_1_LRG', np.float64(13.838583460523811)) ('alpha_LRG', np.float64(0.976113632386913)) ('f_sigv_LRG', np.float64(0.8853776042372906)) ('log_Mcent_LRG', np.float64(12.792320397395402)) ('sigma_M_LRG', np.float64(0.3910951388339098))
[Interation 42] ('M_0_LRG', np.float64(12.845166990874054)) ('M_1_LRG', np.float64(13.835897719652474)) ('alpha_LRG', np.float64(0.9873156550933395)) ('f_sigv_LRG', np.float64(0.8857210322513981)) ('log_Mcent_LRG', np.float64(12.793505324803077)) ('sigma_M_LRG', np.float64(0.39156524545399457))
[Interation 42] ('M_0_LRG', np.float64(12.846387162646245)) ('M_1_LRG', np.float64(13.82809907271778)) ('alpha_LRG', np.float64(0.9817890255490613)) ('f_sigv_LRG', np.float64(0.8886583857036284)) ('log_Mcent_LRG', np.float64(12.783300370788275)) ('sigma_M_LRG', np.float64(0.3803420397671038))
[Interation 42] ('M_0_LRG', np.float64(12.845468835055549)) ('M_1_LRG', np.float64(13.847381571091036)) ('alpha_LRG', np.float64(0.9775175541578166)) ('f_sigv_LRG', np.float64(0.8954102405846908)) ('log_Mcent_LRG', np.float64(12.805364767860095)) ('sigma_M_LRG', np.float64(0.4022026357526437))
[Interation 42] chi2=357.16562631701476
[Interation 42] chi2=367.5137177045817
[Interation 42] chi2=389.60744854706434
[Interation 42] chi2=379.35297408387527
[Interation 42] chi2=384.3163655155313
[Interation 42] chi2=344.300082090182
[Interation 42] chi2=424.75649804391463
[Interation 42] chi2=393.85593215649743
[Interation 42] chi2=396.58142363792103
[Interation 42] chi2=349.6032762613039
[Interation 42] chi2=400.9033817906969
[Interation 42] chi2=376.36778823327006
Load data vector for LRG
Load rppi measurements at z0.4-0.6 for LRG...
Load smu measurements at z0.4-0.6 for LRG...
Best fit point: ('M_0_LRG', np.float64(12.846585738197492)) ('M_1_LRG', np.float64(13.836988911414226)) ('alpha_LRG', np.float64(0.9828717078912337)) ('f_sigv_LRG', np.float64(0.8767731897458939)) ('log_Mcent_LRG', np.float64(12.798822206600125)) ('sigma_M_LRG', np.float64(0.40078479387830623))
Create mock catalog for ['LRG']
Run HOD for LRG
Set density to 0.0007 gal/Mpc/h
HOD Computed 0.31543564796447754
Start satellite assignement
Satellite assignement done 0.07025027275085449
LRG mock catalogue done 0.14371490478515625
613683 central galaxies, 85747 satellites, fraction of satellite 0.12 
Done overall time  LRG 0.6293880939483643
